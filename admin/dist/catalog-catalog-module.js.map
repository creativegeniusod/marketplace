{"version":3,"sources":["webpack:///./src/core/admin/catalog/brand/effects/brand.effect.ts","webpack:///./src/core/admin/catalog/category/categories.service.ts","webpack:///./src/core/admin/catalog/category/effects/categories.effect.ts","webpack:///./src/core/admin/catalog/category/models/categorydelete.response.model.ts","webpack:///./src/core/admin/catalog/category/models/categoryupdate.response.model.ts","webpack:///./src/core/admin/catalog/layout/effects/layout.effect.ts","webpack:///./src/core/admin/catalog/layout/layout.service.ts","webpack:///./src/core/admin/catalog/product/product-effect/product.effect.ts","webpack:///./src/theme/default/admin/catalog/catalog.module.ts","webpack:///./src/theme/default/admin/catalog/catalog.routing.ts","webpack:///./src/theme/default/admin/catalog/components/header/header.component.html","webpack:///./src/theme/default/admin/catalog/components/header/header.component.scss","webpack:///./src/theme/default/admin/catalog/components/header/header.component.ts","webpack:///./src/theme/default/admin/catalog/components/layout/layout.component.html","webpack:///./src/theme/default/admin/catalog/components/layout/layout.component.scss","webpack:///./src/theme/default/admin/catalog/components/layout/layout.component.ts"],"names":[],"mappings":"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","file":"catalog-catalog-module.js","sourcesContent":["/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport * as actions from '../action/brand.actions';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport { Observable, of } from 'rxjs';\r\n// service\r\nimport { BrandApiClient } from '../brandApiClientservice';\r\n\r\n@Injectable()\r\nexport class BrandEffects {\r\n  constructor(private action$: Actions, private brandApi: BrandApiClient) {}\r\n\r\n  // manufacture update\r\n  @Effect()\r\n  doUpdateManufacturer$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_MANUFACTURE_UPDATE_ACTION),\r\n    map((action: actions.DoManufacturerUpdateAction) => action.payload),\r\n    switchMap(state => {\r\n      if (state.image === '') {\r\n        delete state.image;\r\n      }\r\n      return this.brandApi.updateManufacturer(state).pipe(\r\n        switchMap(user => {\r\n          return [new actions.DoManufacturerUpdataSuccess(user)];\r\n        }),\r\n        catchError(error => of(new actions.DoManufacturerUpdateFail()))\r\n      );\r\n    })\r\n  );\r\n  // manufacture add\r\n  @Effect()\r\n  doManufactureAdd$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_MANUFACTURE_ADD_ACTION),\r\n    map((action: actions.DoAddManufacturerAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.brandApi.addManufactureData(state).pipe(\r\n        map(data => new actions.DoAddManufaeturerSuccess(data)),\r\n        catchError(error => of(new actions.DoAddManufaeturerFail(error)))\r\n      );\r\n    })\r\n  );\r\n  // manufacture count\r\n  @Effect()\r\n  doManufacturerCount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_MANUFACTURER_COUNT_ACTION),\r\n    map((action: actions.DoManufactCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.brandApi.manufacturerCount(state).pipe(\r\n        switchMap(user => [new actions.DoManufactCountSuccess(user)]),\r\n        catchError(error => of(new actions.DomanufactCountFail(error)))\r\n      );\r\n    })\r\n  );\r\n  // Manufacturer List\r\n  @Effect()\r\n  doManufacturerlists$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_MANUFACTURER_LIST_ACTION),\r\n    map((action: actions.DOManufacturerListAction) => action.payload),\r\n    switchMap(state => {\r\n      delete state.count;\r\n      return this.brandApi.manufacturerList(state).pipe(\r\n        switchMap(user => [new actions.DoManufacturerListSuccess(user)]),\r\n        catchError(error => of(new actions.DomanufacturerListFail()))\r\n      );\r\n    })\r\n  );\r\n\r\n  // DELETE MANUFACTURE\r\n  @Effect()\r\n  doManufacturerDelete$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_MANUFACTURER_DELETE_ACTION),\r\n    map((action: actions.ManufacturerDeleteAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.brandApi.deleteManufacturer(state).pipe(\r\n        switchMap(user => [new actions.ManufacturerdeleteSuccess(user)]),\r\n        catchError(error => of(new actions.ManufacturerDeleteFail(error)))\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpParams } from '@angular/common/http';\r\n// model\r\nimport { CategorydeleteForm } from './models/categorydelete.model';\r\nimport { CategorylistForm } from './models/categorylist.model';\r\nimport { CategoryForm } from './models/category.model';\r\nimport { Api } from '../../providers/api/api';\r\n\r\n@Injectable()\r\nexport class CategoriesService extends Api {\r\n  // url\r\n  private url: string = this.getBaseUrl();\r\n  // for get method\r\n  public params: any = {};\r\n  // editing categories purpose\r\n  public setEditvariable: any;\r\n\r\n  // passing data to category edit\r\n\r\n  setEditcategories(data) {\r\n    this.setEditvariable = data;\r\n  }\r\n\r\n  getEditcategories() {\r\n    return this.setEditvariable;\r\n  }\r\n\r\n  /**\r\n   * Handles 'categoryListPagination' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from CategorylistForm.\r\n   */\r\n  public categoryListPagination(params: any): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/categoryList', { params: reqOpts });\r\n  }\r\n\r\n  /**\r\n   * Handles 'updateCategory' function. Calls put method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from model.\r\n   */\r\n  updateCategory(params): Observable<any> {\r\n    return this.http.put(\r\n      this.url + '/update-category/' + params.categoryId,\r\n      params\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'delete' function. Calls delete method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from CategorydeleteForm\r\n   */\r\n  delete(params: CategorydeleteForm): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: { categoryId: params.categoryId }\r\n    };\r\n\r\n    return this.http.delete(\r\n      this.url + '/delete-category/' + params.categoryId,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'categoryList' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from CategorylistForm\r\n   */\r\n  public categoryList(params: CategorylistForm): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/categoryList', { params: reqOpts });\r\n  }\r\n  \r\n  public subcategoryList(params: CategorylistForm): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/categoryList', { params: reqOpts });\r\n  }\r\n\r\n  /**\r\n   * Handles 'addCategory' function. Calls post method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param param from CategoryForm\r\n   */\r\n\r\n  addCategory(param: CategoryForm): Observable<any> {\r\n    return this.http.post(this.url + '/add-category', param);\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport * as actions from '../action/categories.action';\r\nimport { catchError } from 'rxjs/internal/operators';\r\n// service\r\nimport { CategoriesService } from '../categories.service';\r\n// model\r\nimport { CategorydeleteResponseModel } from '../models/categorydelete.response.model';\r\nimport { CategoryupdateResponseModel } from '../models/categoryupdate.response.model';\r\n\r\n@Injectable()\r\nexport class CategoriesEffect {\r\n  constructor(\r\n    private action$: Actions,\r\n    private categoriesService: CategoriesService\r\n  ) {}\r\n\r\n  // CATEGORY LIST\r\n  @Effect()\r\n  docatlists$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_CATEGORIES_LIST),\r\n    map((action: actions.DoCategorieslistAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.categoryList(state).pipe(\r\n        switchMap(list => [new actions.DoCategorieslistSuccessAction(list)]),\r\n        catchError(error => of(new actions.DoCategorieslistFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  dosubcatlists$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_SUB_CATEGORIES_LIST),\r\n    map((action: actions.DoSubCategorieslistAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.subcategoryList(state).pipe(\r\n        switchMap(list => [new actions.DoSubCategorieslistSuccessAction(list)]),\r\n        catchError(error => of(new actions.DoCategorieslistFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doDelete$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_DELETE_CATEGORIES),\r\n    map((action: actions.DoDeleteCategoriesAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.delete(state).pipe(\r\n        switchMap(user => [\r\n          new actions.DoDeleteCategoriesSuccessAction(\r\n            new CategorydeleteResponseModel(user)\r\n          )\r\n        ]),\r\n        catchError(error =>\r\n          of(\r\n            new actions.DoCatcountFailAction(\r\n              new CategorydeleteResponseModel(error)\r\n            )\r\n          )\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doaddCategory$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_ADDCATEGORIES),\r\n    map((action: actions.DoAddCategoriesAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.addCategory(state).pipe(\r\n        switchMap(add => {\r\n          return [new actions.DoAddCategoriesSuccessAction(add)];\r\n        }),\r\n        catchError(error => of(new actions.DoAddCategoriesFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doupdateCategory$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_UPDATECATEGORIES),\r\n    map((action: actions.DoUpdateCategoriesAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.updateCategory(state).pipe(\r\n        switchMap(user => {\r\n          return [new actions.DoUpdateCategoriesSuccessAction(user)];\r\n        }),\r\n        catchError(error =>\r\n          of(\r\n            new actions.DoUpdateCategoriesFailAction(\r\n              new CategoryupdateResponseModel(error)\r\n            )\r\n          )\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  // category pagination\r\n\r\n  @Effect()\r\n  docount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_CATEGORIESCOUNT),\r\n    map((action: actions.DoCategoriescountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.categoriesService.categoryListPagination(state).pipe(\r\n        switchMap(user => [new actions.DoCategoriescountSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoCatcountFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class CategorydeleteResponseModel {\r\n  public user: any = {};\r\n\r\n  constructor(CategorydeleteResponse: any) {\r\n    this.user = CategorydeleteResponse || '';\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class CategoryupdateResponseModel {\r\n  public user: any = {};\r\n\r\n  constructor(categoryupdateFormResponse: any) {\r\n    this.user = categoryupdateFormResponse || '';\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport * as actions from '../action/layout.action';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport { LayoutService } from '../layout.service';\r\n\r\n@Injectable()\r\nexport class LayoutEffects {\r\n  constructor(private action$: Actions, private layoutService: LayoutService) {}\r\n\r\n  @Effect()\r\n  doTotalProductListCount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_TOTAL_PRODUCT_COUNT),\r\n    map((action: actions.GetTotalProductCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.layoutService.getProductListCount(state).pipe(\r\n        switchMap(response => [\r\n          new actions.GetTotalProductCountSuccessAction(response)\r\n        ]),\r\n        catchError(error =>\r\n          of(new actions.GetTotalProductCountFailAction(error))\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doActiveProductListCount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_ACTIVE_PRODUCT_COUNT),\r\n    map((action: actions.GetActiveProductCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.layoutService.getProductListCount(state).pipe(\r\n        switchMap(response => [\r\n          new actions.GetActiveProductCountSuccessAction(response)\r\n        ]),\r\n        catchError(error =>\r\n          of(new actions.GetActiveProductCountFailAction(error))\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doInActiveProductListCount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_INACTIVE_PRODUCT_COUNT),\r\n    map((action: actions.GetInActiveProductCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.layoutService.getProductListCount(state).pipe(\r\n        switchMap(response => [\r\n          new actions.GetInActiveProductCountSuccessAction(response)\r\n        ]),\r\n        catchError(error =>\r\n          of(new actions.GetInActiveProductCountFailAction(error))\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  doTotalCatagoryListCount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_TOTAL_CATAGORY_COUNT),\r\n    map((action: actions.GetTotalCatagoryCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.layoutService.getCatagoryListCount(state).pipe(\r\n        switchMap(response => [\r\n          new actions.GetTotalCatagoryCountSuccessAction(response)\r\n        ]),\r\n        catchError(error =>\r\n          of(new actions.GetTotalCatagoryCountFailAction(error))\r\n        )\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Api } from '../../providers/api/api';\r\n\r\n@Injectable()\r\nexport class LayoutService extends Api {\r\n  params: any = {};\r\n  // private URL = this.configService.get('api').baseUrl;\r\n  private URL = this.getBaseUrl();\r\n\r\n  /* get product list count api*/\r\n  public getProductListCount(filterParam: any): Observable<any> {\r\n    const reqOpts: any = {};\r\n    const params = Object.getOwnPropertyNames(filterParam).reduce(\r\n      (p, key) => p.set(key, filterParam[key]),\r\n      new HttpParams()\r\n    );\r\n    reqOpts.params = params;\r\n    return this.http.get(this.URL + '/product/productlist', reqOpts);\r\n  }\r\n\r\n  /* get order list count api*/\r\n  public getCatagoryListCount(filterParam: any): Observable<any> {\r\n    const reqOpts: any = {};\r\n    const params = Object.getOwnPropertyNames(filterParam).reduce(\r\n      (p, key) => p.set(key, filterParam[key]),\r\n      new HttpParams()\r\n    );\r\n    reqOpts.params = params;\r\n    return this.http.get(this.URL + '/categorylist', reqOpts);\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n// effects\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\n// store\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n// actions\r\nimport * as actions from '../product-action/product.action';\r\nimport * as layoutActions from '../../layout/action/layout.action';\r\n\r\nimport { catchError } from 'rxjs/internal/operators';\r\n// service\r\nimport { ProductService } from '../product.service';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\nimport { saveAs } from 'file-saver';\r\nimport * as store from '../../../../app.state.interface';\r\nimport { ProductModel } from '../../layout/models/product.model';\r\n\r\n@Injectable()\r\nexport class ProductEffect {\r\n  constructor(\r\n    private action$: Actions,\r\n    protected appState: Store<store.AppState>,\r\n    private service: ProductService,\r\n    private toastr: ToastrManager\r\n  ) {}\r\n\r\n  // Product list\r\n  @Effect()\r\n  doprodlists$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_PRODUCT_LIST),\r\n    map((action: actions.GetProductlistAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productList(state).pipe(\r\n        switchMap(product => [\r\n          new actions.GetProductlistSuccessAction(product)\r\n        ]),\r\n        catchError(error => of(new actions.GetProductlistFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product list count\r\n  @Effect()\r\n  doprodlistscount$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_PRODUCT_COUNT),\r\n    map((action: actions.GetProductCountAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productCount(state).pipe(\r\n        map(count => new actions.GetProductCountSuccessAction(count)),\r\n        catchError(error => of(new actions.GetProductCountFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product delete\r\n  @Effect()\r\n  doProductDelete$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_PRODUCT_DELETE),\r\n    map((action: actions.DoProductDeleteAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productDelete(state).pipe(\r\n        switchMap(user => [new actions.DoProductDeleteSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoProductDeleteFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product add\r\n  @Effect()\r\n  doProductAdd$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_PRODUCT_ADD),\r\n    map((action: actions.DoProductAddAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productAdd(state).pipe(\r\n        switchMap(user => [new actions.DoProductAddSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoProductAddFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product update\r\n  @Effect()\r\n  doProductUpdate$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_PRODUCT_UPDATE),\r\n    map((action: actions.DoProductUpdateAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productUpdate(state).pipe(\r\n        switchMap(user => [new actions.DoProductUpdateSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoProductUpdateFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product detail\r\n  @Effect()\r\n  doDetail$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_PRODUCT_DETAIL),\r\n    map((action: actions.GetProductDetailAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productDetail(state).pipe(\r\n        switchMap(user => [new actions.GetProductDetailSuccess(user)]),\r\n        catchError(error => of(new actions.GetProductDetailFail(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  // Product Today Deals\r\n  @Effect()\r\n  doProductTodayDeals$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_TODAY_DEALS_DETAIL),\r\n    map((action: actions.DoProductTodayDealAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productTodayDeals(state).pipe(\r\n        switchMap(user => [new actions.DoProductTodayDealSuccess(user)]),\r\n        catchError(error => of(new actions.DoProductTodayDealFail(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  // getting option value\r\n  @Effect()\r\n  DoGettingOptionValue$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_GETTING_OPTION),\r\n    map((action: actions.DoGettingOption) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.gettingOptionApi(state).pipe(\r\n        switchMap(user => [new actions.DoGettingOptionSuccess(user)]),\r\n        catchError(error => of(new actions.DoGettingOptionFail(error)))\r\n      );\r\n    })\r\n  );\r\n  // Product Bulk Delete\r\n  @Effect()\r\n  doProductBulkDelete$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_PRODUCT_BULK_DELETE),\r\n    map((action: actions.DoProductBulkDelete) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productBulkDelete(state).pipe(\r\n        switchMap(user => [new actions.DoProductBulkDeleteSuccess(user)]),\r\n        catchError(error => of(new actions.DoProductBulkDeleteFail(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  // Product Excel\r\n  @Effect()\r\n  doProductExcel$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_PRODUCT_EXCEL),\r\n    map((action: actions.DoProductExcel) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.productExcel(state).pipe(\r\n        tap(data => {\r\n          const filename = 'ProductExcel_' + Date.now() + '.xlsx';\r\n          const blob = new Blob([data], { type: 'text/xlsx' });\r\n          saveAs(blob, filename);\r\n        }),\r\n        switchMap(user => [new actions.DoProductExcelSuccess(user)]),\r\n        catchError(error => of(new actions.DoProductExcelFail(error)))\r\n      );\r\n    })\r\n  );\r\n  /**\r\n   * Shows error notification with given title and message\r\n   *\r\n   * @params message\r\n   */\r\n  private showNotificationError(message: string): void {\r\n    this.toastr.errorToastr(message);\r\n  }\r\n\r\n  private showSuccess(message) {\r\n    this.toastr.successToastr(message);\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultCommonModule } from '../../default.common.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// components\r\nimport { CatalogLayoutComponent } from './components/layout/layout.component';\r\nimport { CatalogHeaderComponent } from './components/header/header.component';\r\n// Routing Module\r\nimport { CatalogRoutingModule } from './catalog.routing';\r\n// Shared Module\r\nimport { MaterialModule } from '../../default.material.module';\r\nimport { CKEditorModule } from 'ng2-ckeditor';\r\n// Store Actions\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { BrandApiClient } from '../../../../core/admin/catalog/brand/brandApiClientservice';\r\nimport { BrandSandbox } from '../../../../core/admin/catalog/brand/brand.sandbox';\r\nimport { BrandEffects } from '../../../../core/admin/catalog/brand/effects/brand.effect';\r\nimport { LayoutService } from '../../../../core/admin/catalog/layout/layout.service';\r\nimport { LayoutsSandbox } from '../../../../core/admin/catalog/layout/layout.sandbox';\r\nimport { LayoutEffects } from '../../../../core/admin/catalog/layout/effects/layout.effect';\r\nimport { CategoriesEffect } from '../../../../core/admin/catalog/category/effects/categories.effect';\r\nimport { CategoriesService } from '../../../../core/admin/catalog/category/categories.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ProductService } from '../../../../core/admin/catalog/product/product.service';\r\nimport { ProductEffect } from '../../../../core/admin/catalog/product/product-effect/product.effect';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CatalogLayoutComponent, CatalogHeaderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CatalogRoutingModule,\r\n    DefaultCommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    EffectsModule.forRoot([\r\n      LayoutEffects,\r\n      CategoriesEffect,\r\n      BrandEffects,\r\n      ProductEffect\r\n    ]),\r\n    CKEditorModule\r\n  ],\r\n  providers: [\r\n    LayoutService,\r\n    LayoutsSandbox,\r\n    BrandApiClient,\r\n    BrandSandbox,\r\n    CategoriesService,\r\n    ProductService\r\n  ],\r\n  bootstrap: [],\r\n  entryComponents: []\r\n})\r\nexport class CatalogModule {}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// Component\r\nimport { CatalogLayoutComponent } from './components/layout/layout.component';\r\n\r\nconst catalogRoutes: Routes = [\r\n  { path: '', redirectTo: 'product', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: CatalogLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'product',\r\n        loadChildren: './components/product/product.module#ProductModule'\r\n      },\r\n      {\r\n        path: 'categories',\r\n        loadChildren:\r\n          './components/categories/categories.module#CategoriesModule'\r\n      },\r\n      {\r\n        path: 'brand',\r\n        loadChildren: './components/brand/brand.module#BrandModule'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(catalogRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CatalogRoutingModule {}\r\n","module.exports = \"<div class=\\\"subtoolbar catalogtoolbar\\\">\\r\\n    <div class=\\\"sub-nav-menu\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/catalog/product']\\\" [routerLinkActive]=\\\"'active'\\\">\\r\\n            <img src=\\\"assets/img/products-ico.png\\\"> Products\\r\\n        </a>\\r\\n        <a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/catalog/categories']\\\" [routerLinkActive]=\\\"'active'\\\">\\r\\n            <img src=\\\"assets/img/categories-ico.png\\\"> Categories\\r\\n        </a>\\r\\n        <a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/catalog/brand']\\\" [routerLinkActive]=\\\"'active'\\\">\\r\\n            <img src=\\\"assets/img/brand-ico.png\\\"> Brands\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-catalog-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogHeaderComponent implements OnInit {\r\n  constructor(public titleService: Title) {}\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Catalog');\r\n  }\r\n}\r\n","module.exports = \"<app-catalog-header></app-catalog-header>\\r\\n<div class=\\\"row products-section\\\">\\r\\n    <div class=\\\"col-12 layout-mar\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"product-ts-left\\\">\\r\\n                <ul>\\r\\n                    <li>\\r\\n                        <p>Total Products</p>\\r\\n                        <h3>{{layoutSandbox.totalProductCount$ | async}}\\r\\n                        </h3>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <p>Active Products</p>\\r\\n                        <h3>{{layoutSandbox.activeProductCount$ | async}}\\r\\n                        </h3>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <p>In-Active Products</p>\\r\\n                        <h3>{{layoutSandbox.inActiveProductCount$ | async}}\\r\\n                        </h3>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <p>Total Categories</p>\\r\\n                        <h3>{{layoutSandbox.totalCatagoryCount$ | async}}\\r\\n                        </h3>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <p>Total Brands</p>\\r\\n                        <h3>{{brandSandbox.getManufacturercount$|async}}\\r\\n                        </h3>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <!--Left-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvbGF5b3V0L2xheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { LayoutsSandbox } from '../../../../../../core/admin/catalog/layout/layout.sandbox';\r\nimport { BrandSandbox } from '../../../../../../core/admin/catalog/brand/brand.sandbox';\r\nimport { transition } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-catalog-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogLayoutComponent implements OnInit {\r\n  constructor(\r\n    public layoutSandbox: LayoutsSandbox,\r\n    public brandSandbox: BrandSandbox\r\n  ) {}\r\n\r\n  /**\r\n   * Handles form 'ngOnInit' event. calls layoutSandbox(getProductListCount,getActiveProductListCount\r\n   *getInActiveProductListCount,getCatagoryListCount,getFeaturedProductListCount).\r\n   *\r\n   * @param count default value.\r\n   * @param status default value.\r\n   */\r\n  ngOnInit() {\r\n    this.layoutSandbox.getProductListCount({ count: true });\r\n    this.layoutSandbox.getActiveProductListCount({ status: '1', count: true });\r\n    this.layoutSandbox.getInActiveProductListCount({\r\n      status: '0',\r\n      count: true\r\n    });\r\n    this.layoutSandbox.getCatagoryListCount({ count: true });\r\n    this.brandSandbox.manufacturerCountList({ count: true });\r\n  }\r\n}\r\n"],"sourceRoot":""}