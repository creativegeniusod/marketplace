{"version":3,"sources":["webpack:///./src/theme/default/admin/catalog/components/brand/add/add.component.html","webpack:///./src/theme/default/admin/catalog/components/brand/add/add.component.scss","webpack:///./src/theme/default/admin/catalog/components/brand/add/add.component.ts","webpack:///./src/theme/default/admin/catalog/components/brand/brand.module.ts","webpack:///./src/theme/default/admin/catalog/components/brand/brand.routing.ts","webpack:///./src/theme/default/admin/catalog/components/brand/filter/filter.component.html","webpack:///./src/theme/default/admin/catalog/components/brand/filter/filter.component.scss","webpack:///./src/theme/default/admin/catalog/components/brand/filter/filter.component.ts","webpack:///./src/theme/default/admin/catalog/components/brand/list/list.component.html","webpack:///./src/theme/default/admin/catalog/components/brand/list/list.component.scss","webpack:///./src/theme/default/admin/catalog/components/brand/list/list.component.ts"],"names":[],"mappings":"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","file":"components-brand-brand-module.js","sourcesContent":["module.exports = \"<!--REACTIVE FORM-->\\n<form novalidate [formGroup]=\\\"brandForm\\\">\\n\\n    <div class=\\\"row products-section\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"breadcrumbs-row noborder\\\">\\n                <div class=\\\"bc-col\\\">\\n                    <ul>\\n                        <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/catalog/brand']\\\">Brand </a></li>\\n                        <li> {{updateManufacturerId ? 'Update Brand' : 'Add Brand' }}</li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"bc-col-btn ap-col-btn\\\">\\n                    <button class=\\\"btn btn-save\\\" type=\\\"submit\\\" (click)=\\\"onSubmits()\\\"><img\\n                            src=\\\"assets/img/tick-round-white.png\\\"> Save\\n                    </button>\\n                    <button class=\\\"btn btn-cancel\\\" (click)='cancel()'><img\\n                            src=\\\"assets/img/close-white-ico.png\\\"> Cancel\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"flex addproduct-wrap\\\">\\n        <div class=\\\"card ap-general\\\">\\n            <div class=\\\"ap-header\\\">\\n                <span> 1 </span> General\\n            </div>\\n            <div class=\\\"flex ap-body\\\">\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Brand Name <sup>*</sup></label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Brand Name\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{'validationcolor':brandForm.get('name').hasError('required') && brandForm.get('name').touched && submitted}\\\">\\n                        <div class=\\\"error\\\" *ngIf=\\\"brandForm.get('name').hasError('required') && brandForm.get('name').touched && submitted\\\">\\n                            Brand Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- Col -->\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"image-upload-container\\\">Brand Image\\n                            <sup>{{updateManufacturerId ? '' : '*'}}</sup></label>\\n                        <input type=\\\"file\\\" accept=\\\"image/*\\\" class=\\\"form-control\\\" formControlName=\\\"image\\\" (change)='onUpload($event)' #filePath style=\\\"display:none\\\" [ngClass]=\\\"{'validationcolor':brandForm.get('image').hasError('required') && brandForm.get('image').touched && submitted}\\\">\\n                    </div>\\n                    <button class=\\\"btn btn-success\\\" (click)='uploadButtonClick()'>Upload Pic</button>\\n                    <div *ngIf=\\\"brandForm.controls['image'].hasError('required') && brandForm.controls['image'].touched\\\" class=\\\"error\\\">\\n                        Brand Image is required\\n                    </div>\\n                </div>\\n\\n                <!-- col for updating image -->\\n                <!--  -->\\n                <div *ngIf='captureUrl'>\\n                    <img [src]=captureUrl class=\\\"brand-img\\\" alt=\\\"\\\">\\n                </div>\\n\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Sort Order<sup>*</sup></label>\\n                        <input type=\\\"text\\\" appOnlyNumber class=\\\"form-control\\\" placeholder=\\\"sort Order\\\" formControlName=\\\"sortOrder\\\" [ngClass]=\\\"{'validationcolor':brandForm.get('sortOrder').hasError('required') && brandForm.get('sortOrder').touched && submitted}\\\">\\n                        <div class=\\\"error\\\" *ngIf=\\\"brandForm.get('sortOrder').hasError('required') && brandForm.get('sortOrder').touched && submitted\\\">\\n                            Sort Order is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label> Status<sup>*</sup></label>\\n                        <select class=\\\"form-control custom-select\\\" formControlName=\\\"status\\\" placeholder=\\\"status\\\" [ngClass]=\\\"{'validationcolor':!brandForm.get('status').valid && !brandForm.get('status').untouched && submitted}\\\">\\n                            <option value=''>- -Select Status- -</option>\\n                            <option value=\\\"1\\\">Enabled</option>\\n                            <option value=\\\"0\\\">Disabled</option>\\n                        </select>\\n                        <div class=\\\"error\\\" *ngIf=\\\"brandForm.get('status').hasError('required') && brandForm.get('status').touched && submitted\\\">\\n                            Status is required\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"","module.exports = \"/* LOGIN VALIDATION*/\\n.validationcolor {\\n  border-color: red;\\n}\\n.error {\\n  color: red;\\n}\\n/* input[type=text].ng-invalid.ng-touched{\\n  border: red solid 1px;\\n} */\\n.dark-modal .modal-content {\\n  background-color: #009efb;\\n  color: white;\\n}\\n.dark-modal .close {\\n  color: white;\\n}\\n.light-blue-backdrop {\\n  background-color: #5cb3fd;\\n}\\n.image-manager .modal-dialog {\\n  max-width: 70%;\\n}\\n.brand-img {\\n  width: 67px;\\n  height: 63px;\\n  padding-left: -3%;\\n  margin-left: -122px;\\n}\\n.disabled {\\n  pointer-events: all !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93ZWJyb290L3B1YmxpY19odG1sL3dlYnNpdGVzL29kei9tYXJrZXRwbGFjZS9hZG1pbi9zcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvYnJhbmQvYWRkL2FkZC5jb21wb25lbnQuc2NzcyIsInNyYy90aGVtZS9kZWZhdWx0L2FkbWluL2NhdGFsb2cvY29tcG9uZW50cy9icmFuZC9hZGQvYWRkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFBO0FBQ0E7RUFDRSxpQkFBQTtBQ0NGO0FER0E7RUFDRSxVQUFBO0FDQUY7QURHQTs7R0FBQTtBQUdBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FDQUY7QURHQTtFQUNFLFlBQUE7QUNBRjtBREdBO0VBQ0UseUJBQUE7QUNBRjtBREdBO0VBQ0UsY0FBQTtBQ0FGO0FER0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUNBRjtBREdBO0VBQ0UsOEJBQUE7QUNBRiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvYnJhbmQvYWRkL2FkZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIExPR0lOIFZBTElEQVRJT04qL1xuLnZhbGlkYXRpb25jb2xvciB7XG4gIGJvcmRlci1jb2xvcjogcmVkO1xuXG59XG5cbi5lcnJvciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi8qIGlucHV0W3R5cGU9dGV4dF0ubmctaW52YWxpZC5uZy10b3VjaGVke1xuICBib3JkZXI6IHJlZCBzb2xpZCAxcHg7XG59ICovXG4uZGFyay1tb2RhbCAubW9kYWwtY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDllZmI7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmRhcmstbW9kYWwgLmNsb3NlIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubGlnaHQtYmx1ZS1iYWNrZHJvcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1Y2IzZmQ7XG59XG5cbi5pbWFnZS1tYW5hZ2VyIC5tb2RhbC1kaWFsb2cge1xuICBtYXgtd2lkdGg6IDcwJTtcbn1cblxuLmJyYW5kLWltZyB7XG4gIHdpZHRoOiA2N3B4O1xuICBoZWlnaHQ6IDYzcHg7XG4gIHBhZGRpbmctbGVmdDogLTMlO1xuICBtYXJnaW4tbGVmdDogLTEyMnB4XG59XG5cbi5kaXNhYmxlZHtcbiAgcG9pbnRlci1ldmVudHM6IGFsbCAhaW1wb3J0YW50O1xufVxuIiwiLyogTE9HSU4gVkFMSURBVElPTiovXG4udmFsaWRhdGlvbmNvbG9yIHtcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XG59XG5cbi5lcnJvciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi8qIGlucHV0W3R5cGU9dGV4dF0ubmctaW52YWxpZC5uZy10b3VjaGVke1xuICBib3JkZXI6IHJlZCBzb2xpZCAxcHg7XG59ICovXG4uZGFyay1tb2RhbCAubW9kYWwtY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDllZmI7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmRhcmstbW9kYWwgLmNsb3NlIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubGlnaHQtYmx1ZS1iYWNrZHJvcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1Y2IzZmQ7XG59XG5cbi5pbWFnZS1tYW5hZ2VyIC5tb2RhbC1kaWFsb2cge1xuICBtYXgtd2lkdGg6IDcwJTtcbn1cblxuLmJyYW5kLWltZyB7XG4gIHdpZHRoOiA2N3B4O1xuICBoZWlnaHQ6IDYzcHg7XG4gIHBhZGRpbmctbGVmdDogLTMlO1xuICBtYXJnaW4tbGVmdDogLTEyMnB4O1xufVxuXG4uZGlzYWJsZWQge1xuICBwb2ludGVyLWV2ZW50czogYWxsICFpbXBvcnRhbnQ7XG59Il19 */\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  FormBuilder\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ConfigService } from './../../../../../../../core/admin/service/config.service';\nimport { BrandSandbox } from '../../../../../../../core/admin/catalog/brand/brand.sandbox';\nimport { BrandApiClient } from '../../../../../../../core/admin/catalog/brand/brandApiClientservice';\n\n@Component({\n  selector: 'app-catalog-brand-add',\n  templateUrl: 'add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class BrandAddComponent implements OnInit {\n  @ViewChild('filePath') filePath: ElementRef;\n\n  // VARIABLES\n  public brandForm: FormGroup;\n  private name: FormControl;\n  private image: FormControl;\n  private sortOrder: FormControl;\n  private status: FormControl;\n\n  public closeResult: string;\n  public params: any = {};\n  public manufacturerEditedValue: any;\n  public imageUrl: string;\n  public imageCaptureUrl: any;\n  public captureUrl: any;\n  public updateManufacturerId: number;\n  public submitted = false;\n\n  constructor(\n    private modalService: NgbModal,\n    private modalService2: NgbModal,\n    private fb: FormBuilder,\n    private sandBox: BrandSandbox,\n    private brandApi: BrandApiClient,\n    private router: Router,\n    private configService: ConfigService,\n    private changeDetectRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.imageUrl = this.configService.getImageUrl();\n    this.loadForm();\n    this.editManufacturerForm();\n  }\n\n  // STYLE PURPOSE\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  // STYLE PURPOSE\n  open2(content) {\n    this.modalService\n      .open(content, { windowClass: 'image-manager' })\n      .result.then(\n        result => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        reason => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  // STYLE PURPOSE\n  open(content) {\n    this.modalService2.open(content, {\n      windowClass: 'dark-modal,image-manager'\n    });\n  }\n\n  // STYLE PURPOSE\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // initial form created  with Validation\n  loadForm() {\n    this.name = new FormControl('', Validators.required);\n    this.image = new FormControl('', Validators.required);\n    this.sortOrder = new FormControl('', Validators.required);\n    this.status = new FormControl('', Validators.required);\n    this.brandForm = this.fb.group({\n      name: this.name,\n      image: this.image,\n      sortOrder: this.sortOrder,\n      status: this.status\n    });\n  }\n\n  /**\n   * Handles form 'onSubmit' event . Calls sandbox function addManufacturer updateManufactuer if form is valid.\n   * @param brandForm entire form value\n   * @param params storing entire form value\n   */\n  onSubmits() {\n    this.submitted = true;\n    if (!this.brandForm.valid) {\n      this.validateAllFormFields(this.brandForm);\n      return;\n    } else {\n      this.params.name = this.brandForm.value.name;\n      if (this.imageCaptureUrl != null && this.imageCaptureUrl !== undefined) {\n        const fileExtension = this.imageCaptureUrl.replace(/^.*\\./, '');\n        if (\n          fileExtension === 'jpeg' ||\n          fileExtension === 'png' ||\n          fileExtension === 'jpg'\n        ) {\n          this.params.image = '';\n          this.brandForm.controls['image'].clearValidators();\n          this.brandForm.controls['image'].updateValueAndValidity();\n        } else {\n          this.params.image = this.imageCaptureUrl;\n        }\n      }\n\n      this.params.sortOrder = this.brandForm.value.sortOrder;\n      this.params.status = this.brandForm.value.status;\n      if (this.manufacturerEditedValue) {\n        this.params.manufacturerId = this.manufacturerEditedValue.manufacturerId;\n        this.sandBox.updateManufactuer(this.params);\n      } else {\n        this.sandBox.addManufacturer(this.params);\n        this.imageCaptureUrl = '';\n        this.brandForm.reset();\n      }\n    }\n  }\n\n  /**\n   * A function 'editManufacturerForm' for update and add manufacturer list\n   * @param manufacturerEditedValue getting the manufacturer list data\n   */\n  editManufacturerForm() {\n    this.manufacturerEditedValue = this.brandApi.getManufacturerEditeValue();\n    if (\n      this.manufacturerEditedValue != null &&\n      this.manufacturerEditedValue !== undefined &&\n      this.manufacturerEditedValue\n    ) {\n      this.updateManufacturerId = this.manufacturerEditedValue.manufacturerId;\n      this.name.setValue(this.manufacturerEditedValue.name);\n      // tslint:disable-next-line:max-line-length\n      this.captureUrl =\n        this.imageUrl + '?path=' +\n        `${this.manufacturerEditedValue.imagePath}` + '&name=' +\n        `${this.manufacturerEditedValue.image}` +\n        '&width=160&height=150';\n      if (\n        this.manufacturerEditedValue.image ||\n        this.manufacturerEditedValue.image === ''\n      ) {\n        this.brandForm.controls['image'].clearValidators();\n        this.brandForm.controls['image'].updateValueAndValidity();\n      }\n      this.sortOrder.setValue(this.manufacturerEditedValue.sortOrder);\n      this.status.setValue(this.manufacturerEditedValue.isActive);\n    }\n  }\n\n  // cancel add brand form and navigate to brandList Page\n  cancel() {\n    this.brandForm.reset();\n    this.imageCaptureUrl = '';\n    this.updateManufacturerId = null;\n    this.router.navigate(['/catalog/brand/list']);\n  }\n\n  // show all validation at when invalid form\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  // image upload and base64 convert section\n  uploadButtonClick() {\n    const el: HTMLElement = this.filePath.nativeElement as HTMLElement;\n    el.click();\n  }\n\n  // A Function 'onUpload' getting upload file\n  onUpload(event): void {\n    this.convertBase64(event.target);\n  }\n\n  /**\n   * A function 'convertBase64' for converting image file into base64\n   * @param imageFile getting image file from input\n   */\n  convertBase64(imageFile: any) {\n    const file: File = imageFile.files[0];\n    const myReader: FileReader = new FileReader();\n    myReader.onloadend = e => {\n      this.imageCaptureUrl = myReader.result;\n      this.captureUrl = myReader.result;\n      // this.image = this.imageCaptureUrl;\n      this.brandForm.controls['image'].setErrors(null);\n      this.changeDetectRef.detectChanges();\n    };\n    myReader.readAsDataURL(file);\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DefaultCommonModule} from '../../../../default.common.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n// components\nimport {BrandAddComponent} from './add/add.component';\nimport {BrandListComponent} from './list/list.component';\n\n// Routing Module\nimport {BrandRoutingModule} from './brand.routing';\n\n// Shared Module\nimport {MaterialModule} from '../../../../default.material.module';\nimport {NumberAcceptModule} from '../../../../../../core/admin/shared/validation-directives/onlyNumber.module';\nimport {HttpClient} from '@angular/common/http';\nimport {BrandFilterComponent} from './filter/filter.component';\nimport {ProductSandbox} from '../../../../../../core/admin/catalog/product/product.sandbox';\n\n\n@NgModule({\n    declarations: [\n        BrandAddComponent,\n        BrandListComponent,\n        BrandFilterComponent\n    ],\n    imports: [\n        CommonModule,\n        DefaultCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        BrandRoutingModule,\n        NumberAcceptModule\n    ],\n    providers: [ProductSandbox],\n    bootstrap: [],\n    entryComponents: []\n})\n\nexport class BrandModule {\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport {NgModule} from '@angular/core';\nimport {\n    RouterModule,\n    Routes\n} from '@angular/router';\n\n// Component\nimport {BrandAddComponent} from './add/add.component';\nimport {BrandListComponent} from './list/list.component';\n\nconst brandRoutes: Routes = [\n    {path: '', redirectTo: 'list', pathMatch: 'full'},\n    {path: 'list', component: BrandListComponent},\n    {path: 'add', component: BrandAddComponent},\n    {\n        path: 'edit/:id',\n        component: BrandAddComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(brandRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class BrandRoutingModule {\n}\n","module.exports = \"<!--<div [formGroup]=\\\"prodfilter\\\" class=\\\"new-user\\\">-->\\n\\n<form [formGroup]=\\\"filterForm\\\">\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"keyword\\\">Brand Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"keyword\\\" class=\\\"form-control\\\" id=\\\"Keyword\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Brand Name\\\">\\n    </div>\\n\\n    <div class=\\\"text-right filter-btns\\\">\\n        <a (click)=\\\"resetFilter()\\\" style=\\\"cursor: pointer\\\">Reset</a>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"applyFilter()\\\">Apply Filters\\n        </button>\\n    </div>\\n</form>\"","module.exports = \".btn {\\n  background: #ed571f !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93ZWJyb290L3B1YmxpY19odG1sL3dlYnNpdGVzL29kei9tYXJrZXRwbGFjZS9hZG1pbi9zcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvYnJhbmQvZmlsdGVyL2ZpbHRlci5jb21wb25lbnQuc2NzcyIsInNyYy90aGVtZS9kZWZhdWx0L2FkbWluL2NhdGFsb2cvY29tcG9uZW50cy9icmFuZC9maWx0ZXIvZmlsdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQUE7QUNDRiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvYnJhbmQvZmlsdGVyL2ZpbHRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4ge1xuICBiYWNrZ3JvdW5kOiAjZWQ1NzFmICFpbXBvcnRhbnQ7XG59IiwiLmJ0biB7XG4gIGJhY2tncm91bmQ6ICNlZDU3MWYgIWltcG9ydGFudDtcbn0iXX0= */\"","/*\n * SpurtCommerce API\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProductSandbox} from '../../../../../../../core/admin/catalog/product/product.sandbox';\nimport {BrandSandbox} from '../../../../../../../core/admin/catalog/brand/brand.sandbox';\n// Store Module\n\n\n@Component({\n    selector: 'app-catalog-brand-filter',\n    templateUrl: './filter.component.html',\n    styleUrls: ['./filter.component.scss']\n\n\n})\nexport class BrandFilterComponent implements OnInit {\n    // reactive form\n    public filterForm: FormGroup;\n    public keyword: string;\n\n    // pagination\n    @Input() pageSize: any;\n    private price = 0;\n    public pagenationCount: boolean;\n    private selectedLink = 'Min';\n    @Output() progressEmits = new EventEmitter<string>();\n\n    constructor(public fb: FormBuilder, public sandbox: ProductSandbox , public brandSandBox: BrandSandbox)  {\n    }\n\n    // initially calling the reactive form by setting  pagination count\n    ngOnInit() {\n        this.pageSize = localStorage.getItem('itemsPerPage');\n\n        this.pagenationCount = true;\n        this.initFilterForm();\n    }\n\n    // reactive form\n    initFilterForm() {\n        this.filterForm = this.fb.group({\n            keyword: ['', Validators.required]\n        });\n    }\n\n    // selecting the price\n    selectPrice(e: string): void {\n        this.selectedLink = e;\n    }\n\n    /**\n     * Handles  'resetFilter' event. Calls  getProductList and reset().\n     *\n     * @param filterForm entire form value\n     */\n    resetFilter() {\n        this.filterForm.reset();\n        const param: any = {};\n        param.limit = this.pageSize;\n        param.offset = '';\n        param.keyword = '';\n        this.progressEmits.emit(param);\n        this.brandSandBox.manufacturerList(param);\n    }\n\n    /**\n     * Handles  'applyFilter' event. Calls  getProductList.\n     * if (selectedLink == 'Min') assign price value 1 ,\n     * else assign price value 1\n     */\n    applyFilter() {\n        this.keyword = this.filterForm.value.keyword;\n        this.getProductList();\n    }\n\n    /**\n     * Handles  'getProductList' event. Calls sandbox getProductList function ,\n     * if (pagenationCount) then calls sandbox getProductCount.\n     * @param params with pagination values\n     * @param form entire form value\n     */\n    getProductList() {\n        const params: any = {};\n        params.offset = '';\n        params.limit = this.pageSize;\n        params.keyword = this.keyword;\n        this.progressEmits.emit(params);\n        this.brandSandBox.manufacturerList(params);\n        params.limit = '';\n        params.count = true;\n        this.brandSandBox.manufacturerCountList(params);\n\n\n    }\n}\n","module.exports = \"<div class=\\\"row products-section products-sub-section\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"breadcrumbs-row\\\">\\n            <div class=\\\"bc-col\\\">\\n                <ul>\\n                    <li><a href=\\\"javascript:void(0)\\\"> Catalog </a></li>\\n                    <li> Brand</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"bc-col-btn\\\">\\n                <button class=\\\"btn\\\" (click)='addBrand()'><img\\n                        src=\\\"assets/img/add-white-ico.png\\\"> Add Brand\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Breadcrumbs-->\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"flex filter-row\\\">\\n            <div class=\\\"filter-lft\\\">\\n                <div class=\\\"toggle\\\">\\n                    <p>Filters</p>\\n                    <input class=\\\"tgl tgl-light\\\" id=\\\"cb1\\\" type=\\\"checkbox\\\" [checked]=\\\"true\\\" (change)=\\\"changeFilter($event)\\\" />\\n                    <label class=\\\"tgl-btn\\\" for=\\\"cb1\\\"></label>\\n                </div>\\n                <div class=\\\"order-status\\\">\\n                    <p>Status</p>\\n                    <li style=\\\"list-style: none\\\">\\n                        <span style=\\\"display: inline-block;width: 14px;height: 16px;margin-right: 6px;vertical-align: middle;background-color: #32b643;\\\"></span>Active\\n                        <span style=\\\"display: inline-block;width: 14px;height: 16px;margin-left: 3px;margin-right: 7px;vertical-align: middle;background-color: #ea5738e6;\\\"></span>In Active\\n\\n                    </li>\\n                </div>\\n            </div>\\n            <!--Lft-->\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"flex product-wrap example-full-width\\\">\\n    <div *ngIf=\\\"buttonCheck == true\\\" class=\\\"filter-section\\\">\\n        <div class=\\\"w3-container w3-animate-left\\\">\\n            <app-catalog-brand-filter (progressEmit)=\\\"receiveProgress($event)\\\"></app-catalog-brand-filter>\\n        </div>\\n    </div>\\n    <!--Filter-->\\n    <div class=\\\"product-table\\\" [ngClass]=\\\"{'changesize': buttonCheck == true }\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"text-center\\\" scope=\\\"col\\\">Brand Name</th>\\n                        <th class=\\\"text-center\\\" scope=\\\"col\\\">Brand Image</th>\\n                        <th class=\\\"text-center\\\" scope=\\\"col\\\">Sort Order</th>\\n                        <th class=\\\"text-center\\\" scope=\\\"col\\\">Action</th>\\n                        <th class=\\\"text-center\\\" scope=\\\"col\\\" width=\\\"100px\\\" class=\\\"text-center\\\">Status\\n                        </th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor='let arr of (sandbox.getManufactureList$|async)'>\\n\\n                        <td class=\\\"text-center\\\">{{arr.name}}\\n                        </td>\\n                        <td class=\\\"text-center\\\">\\n                            <img *ngIf=\\\"arr.image\\\" [src]=\\\"imageUrl + '?path=' + arr.imagePath + '&name=' + arr.image + '&width=60&height=60'\\\" onError=\\\"this.src='/assets/error-images/Load icon Products.png';\\\" (load)=\\\"brandListImageLoading(arr.manufacturerId)\\\" [hidden]=\\\"!brandListImage[arr.manufacturerId]\\\">\\n                            <img src=\\\"./assets/error-images/Load icon Products.png\\\" [hidden]=\\\"brandListImage[arr.manufacturerId]\\\">\\n                        </td>\\n                        <td class=\\\"text-center\\\">{{arr.sortOrder}}</td>\\n                        <td class=\\\"text-center\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)='editManufacture(arr)'> <img src=\\\"assets/img/edit-ico.png\\\"></a>\\n                            <a href=\\\"javascript:void(0)\\\">\\n                                <img src=\\\"assets/img/delete-file-ico.png\\\" [ngbPopover]=\\\"deleteContent\\\" placement=\\\"bottom\\\" #deletePop=\\\"ngbPopover\\\" style=\\\"margin-left: 15px;\\\">\\n                                <ng-template #deleteContent>\\n                                    <div class=\\\"style\\\">\\n                                        <div class=\\\"modal-header\\\">\\n                                            <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\">Do you want to delete ?\\n                                            </h6>\\n                                        </div>\\n                                        <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\" data-dismiss=\\\"modal\\\">No\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteBrand(arr.manufacturerId, deletePop)\\\" data-dismiss=\\\"modal\\\">Yes\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                </ng-template>\\n                            </a>\\n                        </td>\\n                        <td class=\\\"text-center\\\">\\n                            <div *ngIf=\\\"arr.isActive === 1\\\">\\n                                <span style=\\\"width: 41px;background: #32b643; color: white;display: inline-block;padding: 1px 4px;\\\"><b>Active</b></span>\\n\\n                            </div>\\n                            <div *ngIf=\\\"arr.isActive === 0\\\">\\n                                <span style=\\\"background: #ea5738e6; color: white;width: 63px;display: inline-block;padding: 1px 4px;\\\"><b>In-Active</b></span>\\n\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\"no_data\\\" *ngIf=\\\"(sandbox.getManufactureList$|async)?.length==0\\\">\\n                <p>Items not found</p>\\n            </div>\\n            <mat-paginator [length]='(sandbox.getManufacturercount$|async)' [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"[pageSize]\\\" (page)=\\\"onPageChange($event)\\\">\\n            </mat-paginator>\\n\\n        </div>\\n    </div>\\n    <!--Table-->\\n</div>\"","module.exports = \".custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {\\n  background-color: #ed571f !important;\\n  border: #ed571f !important;\\n}\\n\\n.toggle .tgl:checked + .tgl-btn:after {\\n  background-color: #ed571f !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93ZWJyb290L3B1YmxpY19odG1sL3dlYnNpdGVzL29kei9tYXJrZXRwbGFjZS9hZG1pbi9zcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jYXRhbG9nL2NvbXBvbmVudHMvYnJhbmQvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL3RoZW1lL2RlZmF1bHQvYWRtaW4vY2F0YWxvZy9jb21wb25lbnRzL2JyYW5kL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLG9DQUFBO0VBQ0EsMEJBQUE7QUNERjs7QURHQTtFQUNFLG9DQUFBO0FDQUYiLCJmaWxlIjoic3JjL3RoZW1lL2RlZmF1bHQvYWRtaW4vY2F0YWxvZy9jb21wb25lbnRzL2JyYW5kL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiNlZDU3MWYgIWltcG9ydGFudDtcbiAgYm9yZGVyOiNlZDU3MWYgICFpbXBvcnRhbnQ7XG59XG4udG9nZ2xlIC50Z2w6Y2hlY2tlZCArIC50Z2wtYnRuOmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkNTcxZiAhaW1wb3J0YW50O1xufSIsIi5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmNoZWNrZWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZDU3MWYgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAjZWQ1NzFmICFpbXBvcnRhbnQ7XG59XG5cbi50b2dnbGUgLnRnbDpjaGVja2VkICsgLnRnbC1idG46YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWQ1NzFmICFpbXBvcnRhbnQ7XG59Il19 */\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport { Component, OnInit } from '@angular/core';\n// Routing Module\nimport { Router } from '@angular/router';\n// Shared Module\nimport { ConfigService } from '../../../../../../../core/admin/service/config.service';\n\n// Store Module\nimport { BrandSandbox } from '../../../../../../../core/admin/catalog/brand/brand.sandbox';\nimport { BrandApiClient } from '../../../../../../../core/admin/catalog/brand/brandApiClientservice';\n\n@Component({\n  selector: 'app-catalog-brand-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class BrandListComponent implements OnInit {\n  // variables\n  public pageoffset: number;\n  public keyword = '';\n  public offset: number;\n  public pageSize = '10';\n  public pageSizeOptions: number[] = [10, 25, 100];\n  public length: number;\n  private pagenationcount: boolean;\n  public popoverContent: any;\n  // image\n  public imageUrl: string;\n  public brandListImage = {};\n  // condition for filter component\n  public buttonCheck = true;\n  public index: number;\n  private sortOrder: number;\n\n  constructor(\n    public sandbox: BrandSandbox,\n    private brandApi: BrandApiClient,\n    private route: Router,\n    public configService: ConfigService\n  ) {}\n\n  ngOnInit() {\n    this.pageSize = localStorage.getItem('itemsPerPage')\n      ? localStorage.getItem('itemsPerPage')\n      : this.pageSize;\n    this.pagenationcount = true;\n    this.getManufacturerList();\n    this.regSubscriptionEvents();\n    this.imageUrl = this.configService.getImageUrl();\n  }\n\n  /**\n   * Handles form 'getManufacturerList' event . Calls sandbox function manufacturerList manufacturerCountList if form is valid.\n   * @param offset intial offset value\n   */\n  getManufacturerList(offset: number = 0) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = '';\n    params.count = '';\n    this.sandbox.manufacturerList(params);\n    if (this.pagenationcount) {\n      params.limit = '';\n      params.count = 'true';\n      this.sandbox.manufacturerCountList(params);\n    }\n  }\n\n  /**\n   * A function 'onPageChange' handle the page change event\n   * @param event from event\n   */\n  onPageChange(event) {\n    this.pagenationcount = false;\n    this.pageoffset = event.pageSize * event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getManufacturerList(this.pageoffset);\n  }\n\n  /**\n   *  Handles form 'editManufacture' event. Calls brandApi Service setManufactureEditValue function if form is valid\n   * @param editValue brand list data value\n   */\n  editManufacture(editValue) {\n    this.brandApi.setManufactureEditValue(editValue);\n    this.route.navigate(['catalog/brand/edit', editValue.manufacturerId]);\n  }\n\n  // open add brand component form\n  addBrand() {\n    this.brandApi.setManufactureEditValue('');\n    this.route.navigate(['catalog/brand/add']);\n  }\n\n  /**\n   * A function 'deleteBrand' handle delete brandlist data\n   * @param manufacturerId From manufacturerId\n   */\n  deleteBrand(manufacturerId, deletePop) {\n    event.stopPropagation();\n    this.sandbox.deleteManufacturer({ manufacturerId: manufacturerId });\n  }\n\n  // A function 'regSubscribeEvents'  call after getting delete response for pagination purpose\n  regSubscriptionEvents() {\n    this.sandbox.getManufacturerDelete$.subscribe(_delete => {\n      if (_delete && _delete.status && _delete.status === 1) {\n        this.pagenationcount = true;\n        this.getManufacturerList(this.pageoffset);\n      }\n    });\n  }\n\n  // BrandList Image Loader\n  brandListImageLoading(id) {\n    this.brandListImage[id] = true;\n  }\n\n  // shows the filter component\n  changeFilter(event) {\n    this.buttonCheck = event.target.checked;\n  }\n\n  // receive param from filter component .And calls categoriesPagination event\n  receiveProgress(event) {\n    this.index = 0;\n    this.getManufacturerList();\n    this.keyword = event.keyword;\n    this.sortOrder = event.sortOrder;\n  }\n}\n"],"sourceRoot":""}