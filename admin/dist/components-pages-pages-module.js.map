{"version":3,"sources":["webpack:///./src/core/admin/cms/pages/page-effects/page.effects.ts","webpack:///./src/core/admin/cms/pages/pages-model/pagesadd.model.ts","webpack:///./src/core/admin/cms/pages/pages-model/pagescount.model.ts","webpack:///./src/core/admin/cms/pages/pages-model/pagescount.response.model.ts","webpack:///./src/core/admin/cms/pages/pages-model/pageslist.model.ts","webpack:///./src/core/admin/cms/pages/pages-model/pagesupdate.model.ts","webpack:///./src/core/admin/cms/pages/pages-model/pagesupdate.response.model.ts","webpack:///./src/core/admin/cms/pages/pages-reducer/page.selector.ts","webpack:///./src/core/admin/cms/pages/pages.ApiclientService.ts","webpack:///./src/core/admin/cms/pages/pages.sandbox.ts","webpack:///./src/theme/default/admin/cms/components/pages/add/add.component.html","webpack:///./src/theme/default/admin/cms/components/pages/add/add.component.ts","webpack:///./src/theme/default/admin/cms/components/pages/list/list.component.html","webpack:///./src/theme/default/admin/cms/components/pages/list/list.component.scss","webpack:///./src/theme/default/admin/cms/components/pages/list/list.component.ts","webpack:///./src/theme/default/admin/cms/components/pages/pages.module.ts","webpack:///./src/theme/default/admin/cms/components/pages/pages.routing.ts","webpack:///./src/theme/default/admin/cms/components/shared/pages-layout/pages-layout.component.html","webpack:///./src/theme/default/admin/cms/components/shared/pages-layout/pages-layout.component.scss","webpack:///./src/theme/default/admin/cms/components/shared/pages-layout/pages-layout.component.ts"],"names":[],"mappings":"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","file":"components-pages-pages-module.js","sourcesContent":["/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport * as actions from '../pagesaction/page.action';\nimport { catchError } from 'rxjs/internal/operators';\nimport { PagesApiclientService } from '../pages.ApiclientService';\nimport { PagesupdateResponseModel } from '../pages-model/pagesupdate.response.model';\nimport { PagescountResponseModel } from '../pages-model/pagescount.response.model';\nimport { Store } from '@ngrx/store';\nimport * as store from '../../../../app.state.interface';\n\n@Injectable()\nexport class PageEffects {\n  constructor(\n    private action$: Actions,\n    private apiCli: PagesApiclientService,\n    protected appState: Store<store.AppState>\n  ) {}\n\n  // PAGES LIST EFFECT\n  @Effect()\n  doPagesList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_PAGES_LIST_ACTION),\n    map((action: actions.DoPagesListAction) => action.payload),\n    switchMap(state => {\n      return this.apiCli.getpageslist(state).pipe(\n        switchMap(pages => [new actions.DoPagesSuccessAction(pages)]),\n        catchError(error => of(new actions.DoPagesFailAction(error)))\n      );\n    })\n  );\n\n  // PAGES  COUNT LIST EFFECT\n  @Effect()\n  doPagesCountList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_PAGES_COUNT_LIST_ACTION),\n    map((action: actions.DoPagescountListAction) => action.payload),\n    switchMap(state => {\n      return this.apiCli.getpageslist(state).pipe(\n        switchMap(pagesCount => [\n          new actions.DoPagescountSuccessAction(\n            new PagescountResponseModel(pagesCount)\n          )\n        ]),\n        catchError(error => of(new actions.DoPagescountFailAction(error)))\n      );\n    })\n  );\n\n  // ACTIVE PAGES  COUNT  EFFECT\n  @Effect()\n  activePageCount$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.GET_ACTIVE_COUNT),\n    map((action: actions.GetActiveCount) => action.payload),\n    switchMap(state => {\n      return this.apiCli.getpageslist(state).pipe(\n        switchMap(pagesCount => [\n          new actions.GetActiveCountSuccess(\n            new PagescountResponseModel(pagesCount)\n          )\n        ]),\n        catchError(error => of(new actions.GetActiveCountFail(error)))\n      );\n    })\n  );\n  // IN-ACTIVE PAGES  COUNT  EFFECT\n  @Effect()\n  in_activePageCount$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.GET_IN_ACTIVE_COUNT),\n    map((action: actions.GetInactiveCount) => action.payload),\n    switchMap(state => {\n      return this.apiCli.getpageslist(state).pipe(\n        switchMap(pagesCount => [\n          new actions.GetInactiveCountSuccess(\n            new PagescountResponseModel(pagesCount)\n          )\n        ]),\n        catchError(error => of(new actions.GetInactiveCountFail(error)))\n      );\n    })\n  );\n  // add - pages\n  @Effect()\n  doAddPagesList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_ADD_PAGES_LIST),\n    map((action: actions.DoAddPagesAction) => action.payload),\n    switchMap(state => {\n      return this.apiCli.Addpages(state).pipe(\n        tap(response => {\n          this.appState.dispatch(\n            new actions.GetActiveCount({ count: 1, status: 1 })\n          );\n          this.appState.dispatch(\n            new actions.GetInactiveCount({ count: 1, status: 1 })\n          );\n        }),\n        map(analysis => new actions.DoAddPagesSuccessAction(analysis)),\n        catchError(error => of(new actions.DoAddPagesFailAction(error)))\n      );\n    })\n  );\n  // update - pages\n  @Effect()\n  doUpdatePagesList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_UPDATE_PAGES_LIST),\n    map((action: actions.DoUpdatepagesAction) => action.payload),\n    switchMap(state => {\n      const pageId = state.pageId;\n      return this.apiCli.updatepages(state, pageId).pipe(\n        tap(response => {\n          this.appState.dispatch(\n            new actions.GetActiveCount({ count: 1, status: 1 })\n          );\n          this.appState.dispatch(\n            new actions.GetInactiveCount({ count: 1, status: 1 })\n          );\n        }),\n        map(\n          analysis =>\n            new actions.DoUpdatepagesSuccessAction(\n              new PagesupdateResponseModel(analysis)\n            )\n        ),\n        catchError(error => of(new actions.DoUpdatepagesFailAction(error)))\n      );\n    })\n  );\n  @Effect()\n  doPagesDelete$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_PAGES_DELETE),\n    map((action: actions.DoPagesDeleteAction) => action.payload),\n    switchMap(state => {\n      const pageId = state.pageId;\n\n      return this.apiCli.deletepageslist(state, pageId).pipe(\n        tap(response => {\n          this.appState.dispatch(\n            new actions.GetActiveCount({ count: 1, status: 1 })\n          );\n          this.appState.dispatch(\n            new actions.GetInactiveCount({ count: 1, status: 1 })\n          );\n        }),\n        switchMap(user => [new actions.DoPagesDeleteSuccessAction(user)]),\n        catchError(error => of(new actions.DoPagesDeleteFailAction(error)))\n      );\n    })\n  );\n\n  // Pages Bulk Delete\n  @Effect()\n  doPagesBulkDelete$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_PAGES_BULK_DELETE),\n    map((action: actions.DoPagesBulkDelete) => action.payload),\n    switchMap(state => {\n      return this.apiCli.pagesBulkDelete(state).pipe(\n        tap(response => {\n          this.appState.dispatch(\n            new actions.GetActiveCount({ count: 1, status: 1 })\n          );\n          this.appState.dispatch(\n            new actions.GetInactiveCount({ count: 1, status: 0 })\n          );\n        }),\n        switchMap(user => [new actions.DoPagesBulkDeleteSuccess(user)]),\n        catchError(error => of(new actions.DoPagesBulkDeleteFail(error)))\n      );\n    })\n  );\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nexport class PagesaddModel {\n  public title: string;\n  public content: string;\n  public metaTagTitle: string;\n  public metaTagContent: string;\n  public metaTagKeyword: string;\n  public active: number;\n  public pageId: number;\n\n  constructor(PagesAddForm: any) {\n    this.title = PagesAddForm.title || '';\n    this.content = PagesAddForm.content || '';\n    this.metaTagTitle = PagesAddForm.metaTagTitle || '';\n    this.metaTagContent = PagesAddForm.metaTagContent || '';\n    this.metaTagKeyword = PagesAddForm.metaTagKeyword || '';\n    this.active = PagesAddForm.active || 0;\n    if (PagesAddForm.bannerId) {\n      this.pageId = PagesAddForm.bannerId || 0;\n    }\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class PagescountModel {\n  public limit: number;\n  public offset: number;\n  public keyword: string;\n  public count: number;\n\n  constructor(PagesCountForm: any) {\n    this.limit = PagesCountForm.limit || 0;\n    this.offset = PagesCountForm.offset || 0;\n    this.keyword = PagesCountForm.keyword || '';\n    this.count = PagesCountForm.count || 0;\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class PagescountResponseModel {\n  public pagescount: any = {};\n\n  constructor(listResponse: any) {\n    this.pagescount = listResponse || '';\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class PageslistModel {\n  public limit: number;\n  public offset: number;\n  public keyword: string;\n\n  constructor(PagesListForm: any) {\n    this.limit = PagesListForm.limit || 0;\n    this.offset = PagesListForm.offset || 0;\n    this.keyword = PagesListForm.keyword || '';\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class PagesupdateModel {\n  public title: string;\n  public content: string;\n  public active: number;\n  public count: number;\n  public pageId: number;\n  public metaTagTitle: string;\n  public metaTagContent: string;\n  public metaTagKeyword: string;\n\n  constructor(PagesUpdateForm: any) {\n    this.title = PagesUpdateForm.title || '';\n    this.content = PagesUpdateForm.content || '';\n    this.active = PagesUpdateForm.active || 0;\n    this.pageId = PagesUpdateForm.pageId || 0;\n    this.metaTagTitle = PagesUpdateForm.metaTagTitle || '';\n    this.metaTagContent = PagesUpdateForm.metaTagContent || '';\n    this.metaTagKeyword = PagesUpdateForm.metaTagKeyword || '';\n    if (PagesUpdateForm.bannerId) {\n      this.pageId = PagesUpdateForm.pageId || 0;\n    }\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class PagesupdateResponseModel {\n  public pagesupdate: any = {};\n\n  constructor(updateResponse: any) {\n    this.pagesupdate = updateResponse || '';\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { AppState } from '../../../../app.state.interface';\nimport { createSelector } from 'reselect';\nimport * as frompages from './pages.reducer';\n// *************************** PUBLIC API's ****************************\n/**\n * Auth store functions\n */\n\nexport const getpageState = (state: AppState) => state.pages;\nexport const getpageslist = createSelector(\n  getpageState,\n  frompages.getpageslist\n);\nexport const getpageslistloading = createSelector(\n  getpageState,\n  frompages.getpageslistloading\n);\nexport const getpageslistloaded = createSelector(\n  getpageState,\n  frompages.getpageslistloaded\n);\nexport const getpageslistfailed = createSelector(\n  getpageState,\n  frompages.getpageslistfailed\n);\n\nexport const getpageslistcount = createSelector(\n  getpageState,\n  frompages.getpageslistcount\n);\nexport const getpagescountfailed = createSelector(\n  getpageState,\n  frompages.getpagescountfailed\n);\nexport const getpagescountloaded = createSelector(\n  getpageState,\n  frompages.getpagescountloaded\n);\nexport const getpagescountloading = createSelector(\n  getpageState,\n  frompages.getpagescountloading\n);\n\nexport const getaddPages = createSelector(\n  getpageState,\n  frompages.getaddPages\n);\nexport const getpagesaddloading = createSelector(\n  getpageState,\n  frompages.getpagesaddloading\n);\nexport const getpagesaddloaded = createSelector(\n  getpageState,\n  frompages.getpagesaddloaded\n);\nexport const getpagesaddfailed = createSelector(\n  getpageState,\n  frompages.getpagesaddfailed\n);\n\nexport const getpagesupdateloading = createSelector(\n  getpageState,\n  frompages.getpagesupdateloading\n);\nexport const getpagesupdateloaded = createSelector(\n  getpageState,\n  frompages.getpagesupdateloaded\n);\nexport const getpagesupdatefailed = createSelector(\n  getpageState,\n  frompages.getpagesupdatefailed\n);\n\nexport const getpagesdeleteloading = createSelector(\n  getpageState,\n  frompages.getpagesdeleteloading\n);\nexport const getpagesdeleteloaded = createSelector(\n  getpageState,\n  frompages.getpagesdeleteloaded\n);\nexport const getpagesdeletefailed = createSelector(\n  getpageState,\n  frompages.getpagesdeletefailed\n);\n\nexport const getaddpagesstatus = createSelector(\n  getpageState,\n  frompages.getaddpagesstatus\n);\nexport const getupdatepages = createSelector(\n  getpageState,\n  frompages.getupdatepages\n);\nexport const getpagesdelete = createSelector(\n  getpageState,\n  frompages.getpagesdelete\n);\nexport const getActivePageCount = createSelector(\n  getpageState,\n  frompages.getActiveCount\n);\nexport const getInactivePageCount = createSelector(\n  getpageState,\n  frompages.getInactiveCount\n);\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { PageslistModel } from './pages-model/pageslist.model';\nimport { PagesaddModel } from './pages-model/pagesadd.model';\nimport { PagesupdateModel } from './pages-model/pagesupdate.model';\nimport { Api } from '../../providers/api/api';\n\n@Injectable()\nexport class PagesApiclientService extends Api {\n  params: any = {};\n  private url: string = this.getBaseUrl();\n  private pagesData: any;\n\n  pagesGetData() {\n    return this.pagesData;\n  }\n\n  pagesSetData(data) {\n    this.pagesData = data;\n  }\n\n  // Pages List\n  public getpageslist(params: PageslistModel): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = params;\n    return this.http.get(this.url + '/page/pagelist', { params: reqOpts });\n  }\n\n  //  Add Pages\n  Addpages(param: PagesaddModel) {\n    return this.http.post(this.url + '/page/add-page', param);\n  }\n\n  // update\n  public updatepages(param: PagesupdateModel, Id: number): Observable<any> {\n    return this.http.put(this.url + '/page/update-page/' + Id, param);\n  }\n\n  // delete\n  public deletepageslist(param: any, Id: number): Observable<any> {\n    return this.http.delete(this.url + '/page/delete-page/' + Id, param);\n  }\n  /**\n   * Handles 'pagesBulkDelete' function. Calls post method with specific api address\n   * along its param.\n   *\n   * @param param from Model\n   */\n  pagesBulkDelete(param) {\n    return this.http.post(this.url + '/page/delete-page', param);\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as store from '../../../app.state.interface';\nimport { Router } from '@angular/router';\nimport * as pagesActions from './pagesaction/page.action';\nimport {\n  getaddPages,\n  getaddpagesstatus,\n  getpagesaddfailed,\n  getpagesaddloaded,\n  getpagesaddloading,\n  getpagescountfailed,\n  getpagescountloaded,\n  getpagescountloading,\n  getpagesdelete,\n  getpagesdeletefailed,\n  getpagesdeleteloaded,\n  getpagesdeleteloading,\n  getpageslist,\n  getpageslistcount,\n  getpageslistfailed,\n  getInactivePageCount,\n  getpageslistloaded,\n  getActivePageCount,\n  getpageslistloading,\n  getpagesupdatefailed,\n  getpagesupdateloaded,\n  getpagesupdateloading,\n  getupdatepages\n} from './pages-reducer/page.selector';\nimport { Subscription } from 'rxjs/index';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { PageslistModel } from './pages-model/pageslist.model';\nimport { PagesaddModel } from './pages-model/pagesadd.model';\nimport { PagesupdateModel } from './pages-model/pagesupdate.model';\nimport { PagescountModel } from './pages-model/pagescount.model';\nimport * as productActions from '../../catalog/product/product-action/product.action';\n\n@Injectable()\nexport class PagesSandbox implements OnDestroy {\n  private subscriptions: Array<Subscription> = [];\n\n  public getpageslist$ = this.appState.select(getpageslist);\n  public getpageslistloading$ = this.appState.select(getpageslistloading);\n  public getpageslistloaded$ = this.appState.select(getpageslistloaded);\n  public getpageslistfailed$ = this.appState.select(getpageslistfailed);\n\n  public getpageslistcount$ = this.appState.select(getpageslistcount);\n  public getaddPages$ = this.appState.select(getaddPages);\n  public getpagesaddloading$ = this.appState.select(getpagesaddloading);\n  public getpagesaddloaded$ = this.appState.select(getpagesaddloaded);\n  public getpagesaddfailed$ = this.appState.select(getpagesaddfailed);\n\n  public getpagesupdateloading$ = this.appState.select(getpagesupdateloading);\n  public getpagesupdateloaded$ = this.appState.select(getpagesupdateloaded);\n  public getpagesupdatefailed$ = this.appState.select(getpagesupdatefailed);\n\n  public getpagesdeleteloading$ = this.appState.select(getpagesdeleteloading);\n  public getpagesdeleteloaded$ = this.appState.select(getpagesdeleteloaded);\n  public getpagesdeletefailed$ = this.appState.select(getpagesdeletefailed);\n\n  public getaddpagesstatus$ = this.appState.select(getaddpagesstatus);\n  public getupdatepages$ = this.appState.select(getupdatepages);\n  public getpagesdelete$ = this.appState.select(getpagesdelete);\n\n  public getpagescountfailed$ = this.appState.select(getpagescountfailed);\n  public getpagescountloaded$ = this.appState.select(getpagescountloaded);\n  public getpagescountloading$ = this.appState.select(getpagescountloading);\n\n  public activePageCount$ = this.appState.select(getActivePageCount);\n  public inactivePageCount$ = this.appState.select(getInactivePageCount);\n\n  constructor(\n    protected appState: Store<store.AppState>,\n    private router: Router,\n    private toastr: ToastrManager\n  ) {\n    this.subscribe();\n  }\n\n  public getPagesList(value: any) {\n    this.appState.dispatch(\n      new pagesActions.DoPagesListAction(new PageslistModel(value))\n    );\n  }\n\n  //  update\n  public updatePagesList(value) {\n    this.appState.dispatch(\n      new pagesActions.DoUpdatepagesAction(new PagesupdateModel(value))\n    );\n  }\n\n  //  pagination\n\n  public getPagePagination(value: any) {\n    this.appState.dispatch(\n      new pagesActions.DoPagescountListAction(new PagescountModel(value))\n    );\n  }\n  //  active pages count\n\n  public getActivePageCount(value: any) {\n    this.appState.dispatch(new pagesActions.GetActiveCount(value));\n  }\n  //  inactive pages count\n\n  public getInactivePageCount(value: any) {\n    this.appState.dispatch(new pagesActions.GetInactiveCount(value));\n  }\n  //  add pages\n\n  public getAddpages(data) {\n    this.appState.dispatch(\n      new pagesActions.DoAddPagesAction(new PagesaddModel(data))\n    );\n  }\n\n  //  delete  list  page\n  public deletePagesList(value) {\n    this.appState.dispatch(new pagesActions.DoPagesDeleteAction(value));\n  }\n\n  // Do Product Bulk Delete\n  public bulkDelete(value) {\n    this.appState.dispatch(new pagesActions.DoPagesBulkDelete(value));\n  }\n\n  public subscribe() {\n    this.getpageslistcount$.subscribe(data => {});\n    this.subscriptions.push(\n      this.getaddpagesstatus$.subscribe(data => {\n        if (data && data.message) {\n          if (data.status === 1) {\n            this.router.navigate(['/cms/pages/list']);\n          }\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.getupdatepages$.subscribe(data => {\n        if (data && data.message) {\n          if (data.status === 1) {\n            this.router.navigate(['/cms/pages/list']);\n          }\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.getpagesdelete$.subscribe(data => {\n        if (data && data.message) {\n          if (data.status === 1) {\n            this.router.navigate(['/cms/pages/list']);\n          }\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n  }\n}\n","module.exports = \"<app-pages-layout></app-pages-layout>\\n<div class=\\\"row products-section\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"breadcrumbs-row noborder\\\">\\n            <div class=\\\"bc-col\\\">\\n                <ul>\\n                    <li><a href=\\\"javascript:void(0)\\\">CMS</a></li>\\n                    <li>\\n                        <a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/cms/pages']\\\"> Pages </a>\\n                    </li>\\n                    <li> Add Page</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"bc-col-btn ap-col-btn\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-save\\\" (click)=\\\"onSubmit()\\\"><img\\n                        src=\\\"assets/img/tick-round-white.png\\\"> Save\\n                </button>\\n                <button (click)=\\\"pagesCancel()\\\" class=\\\"btn btn-cancel\\\"><img\\n                        src=\\\"assets/img/close-white-ico.png\\\">Cancel\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Breadcrumbs-->\\n</div>\\n\\n<div class=\\\"flex addproduct-wrap addgroup-wrap\\\">\\n\\n    <div class=\\\"card ap-general\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"pagesForm\\\" class=\\\"form-horizontal m-t-20\\\">\\n            <div class=\\\"ap-header\\\">\\n                General Information\\n            </div>\\n            <div class=\\\"flex ap-body cmsap-body\\\">\\n\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Page Title <sup>*</sup></label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pageTitle\\\" placeholder=\\\"Page Title\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.pageTitle.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.pageTitle.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.pageTitle.errors.required\\\">Page Title is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!--Col-->\\n                <div class=\\\"ap-body-col width100\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Page Content<sup>*</sup></label>\\n                        <ckeditor formControlName='pageContent' name='pageContent' class=\\\"cms_pages_validation\\\" [ngClass]=\\\"{'Validationcolor': !pagesForm.get('pageContent').valid && pagesForm.get('pageContent').touched&&submitted==true}\\\">\\n                        </ckeditor>\\n                        <div style=\\\"color:red\\\" *ngIf=\\\"pagesForm.get('pageContent').hasError('required') && pagesForm.get('pageContent').touched && submitted==true\\\">\\n                            Page Content is required\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!--Col-->\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Active<sup>*</sup></label>\\n                        <select class=\\\"custom-select col-12\\\" formControlName=\\\"active\\\" id=\\\"inlineFormCustomSelect\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.active.errors }\\\">\\n                            <option value=\\\"\\\">- -select Active- -</option>\\n                            <option value=\\\"1\\\">Yes</option>\\n                            <option value=\\\"0\\\">No</option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && f.active.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.active.errors.required\\\">Status is required</div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!--col-->\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Meta Title</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaTitle\\\" placeholder=\\\"Meta Title\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.metaTitle.errors }\\\">\\n                        <div *ngIf=\\\"submitted && f.metaTitle.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.metaTitle.errors.required\\\">Meta Title is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--Col-->\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Meta Keyword</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaKeyword\\\" placeholder=\\\"Meta Keyword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.metaKeyword.errors }\\\">\\n                        <div *ngIf=\\\"submitted && f.metaKeyword.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.metaKeyword.errors.required\\\">Meta Keyword is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--Col-->\\n                <div class=\\\"ap-body-col\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Meta Content</label>\\n                        <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"metaContent\\\" placeholder=\\\"Meta Content\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.metaContent.errors }\\\"></textarea>\\n                        <div *ngIf=\\\"submitted && f.metaContent.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.metaContent.errors.required\\\">Meta Content is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--Col-->\\n\\n            </div>\\n        </form>\\n\\n    </div>\\n    <!--General-->\\n\\n</div>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  FormBuilder\n} from '@angular/forms';\nimport { PagesApiclientService } from '../../../../../../../core/admin/cms/pages/pages.ApiclientService';\nimport { PagesSandbox } from '../../../../../../../core/admin/cms/pages/pages.sandbox';\n\n@Component({\n  selector: 'app-cms-pages-add',\n  templateUrl: 'add.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    `\n      .dark-modal .modal-content {\n        background-color: #009efb;\n        color: white;\n      }\n\n      .dark-modal .close {\n        color: white;\n      }\n\n      .light-blue-backdrop {\n        background-color: #5cb3fd;\n      }\n\n      .image-manager .modal-dialog {\n        max-width: 70%;\n      }\n    `\n  ]\n})\nexport class PagesAddComponent implements OnInit {\n  // Variables\n  private closeResult: string;\n  public submitted = false;\n  public pagesForm: FormGroup;\n  public pageTitle: FormControl;\n  public pageContent: FormControl;\n  public active: FormControl;\n  public metaTitle: FormControl;\n  public metaKeyword: FormControl;\n  public metaContent: FormControl;\n  public pagesInfo: any = [];\n  public editPagesId: string;\n  public id: any = '';\n\n  constructor(\n    private modalService: NgbModal,\n    public appSandbox: PagesSandbox,\n    public service: PagesApiclientService,\n    public fb: FormBuilder,\n    private route: ActivatedRoute,\n    private modalService2: NgbModal,\n    private router: Router\n  ) {}\n\n  // initially calls initForm,editPages\n  ngOnInit() {\n    this.initForm();\n    this.editPages();\n    this.editPagesId = this.route.snapshot.paramMap.get('id');\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  open2(content) {\n    this.modalService\n      .open(content, { windowClass: 'image-manager' })\n      .result.then(\n        result => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        reason => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  open(content) {\n    this.modalService2.open(content, {\n      windowClass: 'dark-modal,image-manager'\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // Cancel It Navigate  to add page to List page\n  pagesCancel() {\n    this.router.navigate(['/cms/pages']);\n  }\n\n  // Form  Initialization\n  initForm() {\n    this.pageTitle = new FormControl('', [Validators.required]);\n    this.pageContent = new FormControl('', [Validators.required]);\n    this.active = new FormControl('', [Validators.required]);\n    this.metaTitle = new FormControl('');\n    this.metaKeyword = new FormControl('');\n    this.metaContent = new FormControl('');\n    this.pagesForm = this.fb.group({\n      pageTitle: this.pageTitle,\n      pageContent: this.pageContent,\n      active: this.active,\n      metaTitle: this.metaTitle,\n      metaKeyword: this.metaKeyword,\n      metaContent: this.metaContent\n    });\n  }\n\n  /**\n   * Handles form 'submit' event. Calls sandbox pages  function if form is valid.\n   *\n   * @param event form event\n   * @param form entire form value\n   */\n  onSubmit() {\n    this.submitted = true;\n    if (!this.pagesForm.valid) {\n      this.validateAllFormFields(this.pagesForm);\n      return;\n    }\n    if (\n      this.pagesForm.value.pageTitle !== '' &&\n      this.pagesForm.value.pageContent !== ''\n    ) {\n      const params: any = {};\n      params.title = this.pagesForm.value.pageTitle;\n      params.content = this.pagesForm.value.pageContent;\n      params.active = this.pagesForm.value.active;\n      params.metaTagTitle = this.pagesForm.value.metaTitle;\n      params.metaTagKeyword = this.pagesForm.value.metaKeyword;\n      params.metaTagContent = this.pagesForm.value.metaContent;\n      if (this.pagesInfo[0]) {\n        if (this.pagesInfo[0].pageId) {\n          params.pageId = this.pagesInfo[0].pageId;\n          this.appSandbox.updatePagesList(params);\n        }\n      } else {\n        this.appSandbox.getAddpages(params);\n      }\n    }\n  }\n\n  // edit function for pages\n  editPages() {\n    this.pagesInfo.push(this.service.pagesGetData());\n    if (this.pagesInfo[0] !== null) {\n      if (this.pagesInfo[0] && this.pagesInfo[0].title) {\n        this.pageTitle = this.pagesInfo[0].title;\n        this.pageContent = this.pagesInfo[0].content;\n        this.active = this.pagesInfo[0].isActive;\n        this.metaTitle = this.pagesInfo[0].metaTagTitle;\n        this.metaContent = this.pagesInfo[0].metaTagContent;\n        this.metaKeyword = this.pagesInfo[0].metaTagKeyword;\n\n        this.pagesForm.controls['pageTitle'].setValue(this.pagesInfo[0].title);\n        this.pagesForm.controls['pageContent'].setValue(\n          this.pagesInfo[0].content\n        );\n        this.pagesForm.controls['active'].setValue(this.pagesInfo[0].isActive);\n        this.pagesForm.controls['metaTitle'].setValue(\n          this.pagesInfo[0].metaTagTitle\n        );\n        this.pagesForm.controls['metaContent'].setValue(\n          this.pagesInfo[0].metaTagContent\n        );\n        this.pagesForm.controls['metaKeyword'].setValue(\n          this.pagesInfo[0].metaTagKeyword\n        );\n      }\n    } else {\n      this.pagesInfo = null;\n    }\n  }\n\n  // Form  Controls Using  in Add Pages  html\n  get f() {\n    return this.pagesForm.controls;\n  }\n\n  // show all validation at when invalid form\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\n","module.exports = \"<app-pages-layout></app-pages-layout>\\n<div class=\\\"row products-section products-sub-section\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"breadcrumbs-row\\\">\\n            <div class=\\\"bc-col\\\">\\n                <ul>\\n                    <li><a href=\\\"javascript:void(0)\\\"> CMS</a></li>\\n                    <li> Pages</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"bc-col-btn\\\">\\n                <button class=\\\"btn cms-btn\\\" (click)=\\\"addpage()\\\"><img\\n                        src=\\\"assets/img/add-white-ico.png\\\">New Page</button>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Breadcrumbs-->\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"flex filter-row\\\">\\n            <div class=\\\"filter-lft\\\">\\n            </div>\\n            <!--Lft-->\\n            <div class=\\\"filter-nav-list\\\">\\n                <ul class=\\\"flex\\\">\\n                    <li *ngIf=\\\"checkedData.length==0\\\" style=\\\"margin-left: 15px;\\\">\\n                        <a (click)=\\\"bulkDeleteEmpty()\\\"><img src=\\\"assets/img/delete-ico-pink.png\\\"> Delete\\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"checkedData.length>0\\\" style=\\\"margin-left: 15px;\\\" [ngbPopover]=\\\"deleteContent1\\\" placement=\\\"left\\\" #deletePop=\\\"ngbPopover\\\">\\n                        <a><img src=\\\"assets/img/delete-ico-pink.png\\\"> Delete\\n                        </a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!--Right-->\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"flex product-wrap\\\">\\n\\n    <div class=\\\"product-table\\\" style=\\\"width:100%\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\" width=\\\"5%\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"custom-control custom-checkbox mr-sm-2\\\">\\n                                </div>\\n                            </div>\\n                        </th>\\n                        <th scope=\\\"col\\\">Title</th>\\n                        <th scope=\\\"col\\\" width=\\\"100\\\">Action</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let pagesList of appSandbox.getpageslist$ | async; let i=index\\\">\\n                        <th scope=\\\"row\\\" class=\\\"text-center\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"custom-control custom-checkbox mr-sm-2\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" (click)=\\\"selectChkBox($event, pagesList.pageId)\\\" id={{pagesList.pageId}} [checked]=\\\"checkCondition[pagesList.pageId]\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"checkmodules[pagesList.pageId]\\\">\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id={{pagesList.pageId}}  value=\\\"check\\\" >-->\\n                                    <label class=\\\"custom-control-label\\\" for={{pagesList.pageId}}></label>\\n                                </div>\\n                            </div>\\n                        </th>\\n                        <td>{{pagesList.title}}</td>\\n                        <td>\\n                            <a href=\\\"javascript:void(0)\\\"> <img src=\\\"assets/img/edit-ico.png\\\" (click)=\\\"editpagessList(pagesList)\\\"> </a>\\n                            <i style=\\\"margin-left: 15px;\\\" [ngbPopover]=\\\"deleteContent\\\" placement=\\\"left\\\" #deletePop=\\\"ngbPopover\\\" class=\\\"fas fa-trash\\\"></i>\\n                            <ng-template #deleteContent>\\n                                <div class=\\\"style\\\">\\n                                    <div class=\\\"modal-header\\\">\\n                                        <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\n                                    </div>\\n                                    <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\" data-dismiss=\\\"modal\\\">No\\n                                    </button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deletePages(pagesList.pageId, deletePop)\\\" data-dismiss=\\\"modal\\\">Yes\\n                                    </button>\\n                                    </div>\\n                                </div>\\n                            </ng-template>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\"no_data\\\" *ngIf=\\\"(appSandbox.getpageslist$ | async)?.length==0\\\">\\n                <p>Items not found</p>\\n            </div>\\n        </div>\\n        <mat-paginator [length]=\\\"appSandbox.getpageslistcount$ | async\\\" [pageSizeOptions]=\\\"[pageSize]\\\" [pageSize]=\\\"pageSize\\\" [pageIndex]=\\\"index\\\" (page)=\\\"onPageChange($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\\n<ng-template #deleteContent1>\\n    <div class=\\\"style\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\n\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\" data-dismiss=\\\"modal\\\">No\\n                </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"bulkDelete()\\\" data-dismiss=\\\"modal\\\">\\n                    Yes\\n                </button>\\n        </div>\\n    </div>\\n</ng-template>\"","module.exports = \".custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {\\n  background-color: #f2086d !important;\\n  border: #f2086d !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvbWFya2V0cGxhY2UvYWRtaW4vc3JjL3RoZW1lL2RlZmF1bHQvYWRtaW4vY21zL2NvbXBvbmVudHMvcGFnZXMvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL3RoZW1lL2RlZmF1bHQvYWRtaW4vY21zL2NvbXBvbmVudHMvcGFnZXMvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0NBQUE7RUFDQSwwQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy90aGVtZS9kZWZhdWx0L2FkbWluL2Ntcy9jb21wb25lbnRzL3BhZ2VzL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmNoZWNrZWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMjA4NmQgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAjZjIwODZkICFpbXBvcnRhbnQ7XG59IiwiLmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyMDg2ZCAhaW1wb3J0YW50O1xuICBib3JkZXI6ICNmMjA4NmQgIWltcG9ydGFudDtcbn0iXX0= */\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  ModalDismissReasons,\n  NgbModal,\n  NgbPanelChangeEvent\n} from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n// Store Module\nimport { PagesSandbox } from '../../../../../../../core/admin/cms/pages/pages.sandbox';\nimport { PagesApiclientService } from '../../../../../../../core/admin/cms/pages/pages.ApiclientService';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-spurt-cms-page-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    `\n      .dark-modal .modal-content {\n        background-color: #009efb;\n        color: white;\n      }\n\n      .dark-modal .close {\n        color: white;\n      }\n\n      .light-blue-backdrop {\n        background-color: #5cb3fd;\n      }\n\n      .image-manager .modal-dialog {\n        max-width: 70%;\n      }\n    `\n  ]\n})\nexport class PageListComponent implements OnInit {\n  // Variable\n  public pageSize: any = 5;\n  public keyword: any = '';\n  public offset: number;\n  public closeResult: string;\n  public pageId: number;\n  public currentPage: number;\n  public index: number;\n  public popoverContent: any;\n  public checkarray: any[] = [];\n  public checkCondition: any = [];\n  public checkmodules: any = [];\n  public checkedData: any = [];\n  public unCheckData: any = [];\n\n  constructor(\n    private modalService: NgbModal,\n    private toastr: ToastrManager,\n    public service: PagesApiclientService,\n    public appSandbox: PagesSandbox,\n    private router: Router\n  ) {}\n\n  // initially calls getPagesList,getPagesPagination,regSubscriptionEvents\n  ngOnInit() {\n    this.pageSize = localStorage.getItem('itemsPerPage')\n      ? localStorage.getItem('itemsPerPage')\n      : this.pageSize;\n    this.getPagesList(this.offset, this.keyword);\n    this.getPagesPagination(this.offset, this.keyword);\n    this.regSubscriptionEvents();\n    this.index = 0;\n  }\n\n  open2(content) {\n    this.modalService\n      .open(content, { windowClass: 'view-address' })\n      .result.then(\n        result => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        reason => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  // calls getPagesList,getPagesPagination\n  regSubscriptionEvents() {\n    this.appSandbox.getpagesdelete$.subscribe(_delete => {\n      if (_delete && _delete.status && _delete.status === 1) {\n        this.getPagesList(this.offset, this.keyword);\n        this.getPagesPagination(this.offset, this.keyword);\n      }\n    });\n  }\n\n  //  pages list\n  getPagesList(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.appSandbox.getPagesList(params);\n  }\n\n  // pagination\n  getPagesPagination(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    params.count = true;\n    this.appSandbox.getPagePagination(params);\n  }\n\n  // mat pagination\n  onPageChange(event: any) {\n    this.currentPage = event.offset;\n    this.pageSize = event.pageSize;\n    this.index = event.pageIndex;\n    const offset = event.pageSize * event.pageIndex;\n    this.getPagesList(offset, this.pageSize);\n  }\n\n  // # edit\n  editpagessList(pagesList) {\n    this.service.pagesSetData(pagesList);\n    this.router.navigate(['/cms/pages/edit', pagesList.pageId]);\n  }\n\n  // navigate- list page to add page\n  addpage() {\n    this.service.pagesSetData('');\n    this.router.navigate(['/cms/pages/add']);\n  }\n\n  // delete  by using  id\n  deletePages(pageId, deletePop) {\n    this.popoverContent = deletePop;\n    event.stopPropagation();\n    this.appSandbox.deletePagesList({ pageId: pageId });\n    this.getPagesList(this.offset, this.keyword);\n    this.getPagesPagination(this.offset, this.keyword);\n  }\n\n  // bulkDelete\n  bulkDelete() {\n    const param: any = {};\n    param.pageId = this.checkedData;\n    this.appSandbox.bulkDelete(param);\n    this.checkedData = [];\n    this.appSandbox.getpagesdelete$.subscribe(_delete => {\n      if (_delete) {\n        if (_delete.status === 1) {\n          this.getPagesList(this.offset, this.keyword);\n        }\n      }\n    });\n  }\n\n  selectChkBox(event, pageId) {\n    if (event.target.checked === true) {\n      this.checkedData.push(pageId);\n    }\n    if (event.target.checked === false) {\n      this.unCheckData.push(pageId);\n      this.unCheckData.forEach((value, index) => {\n        this.checkedData = this.checkedData.filter(_value => {\n          if (value === _value) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      });\n    }\n    this.unCheckData = [];\n  }\n\n  // bulkDeleteEmpty\n  bulkDeleteEmpty() {\n    this.showNotificationError('Choose atleast one Page');\n  }\n\n  /**\n   * Shows error notification with given title and message\n   *\n   * @params message\n   */\n  private showNotificationError(message: string): void {\n    this.toastr.errorToastr(message);\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultCommonModule } from '../../../../default.common.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// components\nimport { PagesAddComponent } from './add/add.component';\nimport { PageListComponent } from './list/list.component';\n\n// Store Actions\nimport { EffectsModule } from '@ngrx/effects';\nimport { PageEffects } from '../../../../../../core/admin/cms/pages/page-effects/page.effects';\nimport { PagesSandbox } from '../../../../../../core/admin/cms/pages/pages.sandbox';\n\n// Routing Module\nimport { PagesRoutingModule } from './pages.routing';\n\n// Shared Module\nimport { MaterialModule } from '../../../../default.material.module';\nimport { PagesApiclientService } from '../../../../../../core/admin/cms/pages/pages.ApiclientService';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { HttpClient } from '@angular/common/http';\nimport { PagesLayoutComponent } from '../shared/pages-layout/pages-layout.component';\n\n@NgModule({\n  declarations: [PagesAddComponent, PageListComponent, PagesLayoutComponent],\n  imports: [\n    CommonModule,\n    DefaultCommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    PagesRoutingModule,\n    EffectsModule.forRoot([PageEffects]),\n    CKEditorModule\n  ],\n  providers: [PagesApiclientService, PagesSandbox],\n  bootstrap: [],\n  entryComponents: []\n})\nexport class PagesModule {}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Component\nimport { PagesAddComponent } from './add/add.component';\nimport { PageListComponent } from './list/list.component';\n\nconst pagesRoutes: Routes = [\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\n  { path: 'list', component: PageListComponent },\n  { path: 'add', component: PagesAddComponent },\n  {\n    path: 'edit/:id',\n    component: PagesAddComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(pagesRoutes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule {}\n","module.exports = \"<div class=\\\"row products-section\\\">\\n    <div class=\\\"col-12 layout-mar\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"product-ts-left\\\">\\n                <ul>\\n                    <li>\\n                        <p>Total Pages</p>\\n                        <h3>{{pageSandbox.getpageslistcount$ | async}}\\n\\n                        </h3>\\n                    </li>\\n                    <li>\\n                        <p>Active Pages</p>\\n                        <h3>{{pageSandbox.activePageCount$ | async}}\\n\\n                        </h3>\\n                    </li>\\n                    <li>\\n                        <p>In-Active Pages</p>\\n                        <h3>{{pageSandbox.inactivePageCount$ | async}}\\n\\n                        </h3>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9jbXMvY29tcG9uZW50cy9zaGFyZWQvcGFnZXMtbGF5b3V0L3BhZ2VzLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { PagesSandbox } from '../../../../../../../core/admin/cms/pages/pages.sandbox';\n\n@Component({\n  selector: 'app-pages-layout',\n  templateUrl: './pages-layout.component.html',\n  styleUrls: ['./pages-layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PagesLayoutComponent implements OnInit {\n  constructor(public pageSandbox: PagesSandbox) {}\n  ngOnInit() {\n    this.getPagesLists();\n  }\n  getPagesLists() {\n    this.pageSandbox.getPagePagination({ count: 1 });\n    this.pageSandbox.getActivePageCount({ count: 1, status: 1 });\n    this.pageSandbox.getInactivePageCount({ count: 1, status: 0 });\n  }\n}\n"],"sourceRoot":""}