{"version":3,"sources":["webpack:///./src/core/admin/settings/user/user-effect/user.effect.ts","webpack:///./src/core/admin/settings/user/user-model/user.model.ts","webpack:///./src/core/admin/settings/user/user-model/userlist.model.ts","webpack:///./src/core/admin/settings/user/user-reducer/user.selector.ts","webpack:///./src/core/admin/settings/user/user.sandbox.ts","webpack:///./src/core/admin/settings/user/user.service.ts","webpack:///./src/theme/default/admin/settings/components/user/add/add.component.html","webpack:///./src/theme/default/admin/settings/components/user/add/add.component.ts","webpack:///./src/theme/default/admin/settings/components/user/list/list.component.html","webpack:///./src/theme/default/admin/settings/components/user/list/list.component.ts","webpack:///./src/theme/default/admin/settings/components/user/user.module.ts","webpack:///./src/theme/default/admin/settings/components/user/user.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;GAOG;AACwC;AACa;AAElB;AACU;AACK;AACC;AACR;AAG9C;IACE,oBAAoB,OAAgB,EAAU,OAAoB;QAAlE,iBAAsE;QAAlD,YAAO,GAAP,OAAO,CAAS;QAAU,YAAO,GAAP,OAAO,CAAa;QAElE,WAAW;QAEX,eAAU,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CAChD,4DAAM,CAAC,oEAAmB,CAAC,WAAW,CAAC,EACvC,0DAAG,CAAC,UAAC,MAA+B,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EACxD,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CACrC,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,+EAA8B,CAAC,IAAI,CAAC,CAAC,EAA1C,CAA0C,CAAC,EAC7D,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,4EAA2B,CAAC,KAAK,CAAC,CAAC,EAA1C,CAA0C,CAAC,CAChE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,cAAc;QAEd,kBAAa,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACnD,4DAAM,CAAC,oEAAmB,CAAC,cAAc,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAAkC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC3D,gEAAS,CAAC,eAAK;YACb,IAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;YACpB,OAAO,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAC5C,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,kFAAiC,CAAC,IAAI,CAAC,CAAC,EAA7C,CAA6C,CAAC,EAChE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,+EAA8B,CAAC,KAAK,CAAC,CAAC,EAA7C,CAA6C,CAAC,CACnE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAEF,qBAAgB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACtD,4DAAM,CAAC,oEAAmB,CAAC,mBAAmB,CAAC,EAC/C,0DAAG,CAAC,UAAC,MAAqC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC9D,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAC3C,0DAAG,CAAC,kBAAQ,IAAI,WAAI,qFAAoC,CAAC,QAAQ,CAAC,EAAlD,CAAkD,CAAC,EACnE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,kFAAiC,CAAC,KAAK,CAAC,CAAC,EAAhD,CAAgD,CAAC,CACtE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,kBAAkB;QAClB,gBAAgB;QAEhB,gBAAW,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACjD,4DAAM,CAAC,oEAAmB,CAAC,aAAa,CAAC,EACzC,0DAAG,CAAC,UAAC,MAAgC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EACzD,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,kBAAQ,IAAI,WAAI,gFAA+B,CAAC,QAAQ,CAAC,EAA7C,CAA6C,CAAC,EAC9D,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,6EAA4B,CAAC,KAAK,CAAC,CAAC,EAA3C,CAA2C,CAAC,CACjE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,uBAAuB;QAEvB,sBAAiB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACvD,4DAAM,CAAC,oEAAmB,CAAC,oBAAoB,CAAC,EAChD,0DAAG,CAAC,UAAC,MAAsC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC/D,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAC5C,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,sFAAqC,CAAC,IAAI,CAAC,CAAC,EAAjD,CAAiD,CAAC,EACpE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,mFAAkC,CAAC,KAAK,CAAC,CAAC,EAAjD,CAAiD,CAAC,CACvE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,cAAc;QAEd,gBAAW,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACjD,4DAAM,CAAC,oEAAmB,CAAC,WAAW,CAAC,EACvC,0DAAG,CAAC,UAAC,MAA0B,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EACnD,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CACxC,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,0EAAyB,CAAC,IAAI,CAAC,CAAC,EAArC,CAAqC,CAAC,EACxD,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,uEAAsB,CAAC,KAAK,CAAC,CAAC,EAArC,CAAqC,CAAC,CAC3D,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IA1EmE,CAAC;IAItE;QADC,4DAAM,EAAE;wEACG,+CAAU;kDASpB;IAGF;QADC,4DAAM,EAAE;wEACM,+CAAU;qDAUvB;IAEF;QADC,4DAAM,EAAE;wEACS,+CAAU;wDAS1B;IAIF;QADC,4DAAM,EAAE;wEACI,+CAAU;mDASrB;IAGF;QADC,4DAAM,EAAE;wEACU,+CAAU;yDAS3B;IAGF;QADC,4DAAM,EAAE;wEACI,+CAAU;mDASrB;IA3ES,UAAU;QADtB,gEAAU,EAAE;+EAEkB,qDAAO,EAAmB,yDAAW;OADvD,UAAU,CA4EtB;IAAD,iBAAC;CAAA;AA5EsB;;;;;;;;;;;;;AClBvB;AAAA;AAAA;;;;;;;GAOG;AACH;IASE,kBAAY,QAAa;QACvB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;QACxC,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC;SACjC;IACH,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;;;;;;;GAOG;AACH;IAME,sBAAY,YAAiB;QAC3B,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC;IACxC,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACC;AAEpC,IAAM,YAAY,GAAG,UAAC,KAAe,IAAK,YAAK,CAAC,IAAI,EAAV,CAAU,CAAC;AACrD,IAAM,YAAY,GAAG,+DAAc,CACxC,YAAY,EACZ,8DAAyB,CAC1B,CAAC;AACK,IAAM,YAAY,GAAG,+DAAc,CACxC,YAAY,EACZ,yDAAoB,CACrB,CAAC;AACK,IAAM,UAAU,GAAG,+DAAc,CACtC,YAAY,EACZ,wDAAmB,CACpB,CAAC;AACK,IAAM,cAAc,GAAG,+DAAc,CAC1C,YAAY,EACZ,4DAAuB,CACxB,CAAC;AACK,IAAM,aAAa,GAAG,+DAAc,CACzC,YAAY,EACZ,2DAAsB,CACvB,CAAC;AACK,IAAM,iBAAiB,GAAG,+DAAc,CAC7C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AAEK,IAAM,eAAe,GAAG,+DAAc,CAC3C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AACK,IAAM,cAAc,GAAG,+DAAc,CAC1C,YAAY,EACZ,+DAA0B,CAC3B,CAAC;AACK,IAAM,cAAc,GAAG,+DAAc,CAC1C,YAAY,EACZ,+DAA0B,CAC3B,CAAC;AAEK,IAAM,gBAAgB,GAAG,+DAAc,CAC5C,YAAY,EACZ,iEAA4B,CAC7B,CAAC;AACK,IAAM,eAAe,GAAG,+DAAc,CAC3C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AACK,IAAM,eAAe,GAAG,+DAAc,CAC3C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AAEK,IAAM,cAAc,GAAG,+DAAc,CAC1C,YAAY,EACZ,+DAA0B,CAC3B,CAAC;AACK,IAAM,aAAa,GAAG,+DAAc,CACzC,YAAY,EACZ,8DAAyB,CAC1B,CAAC;AACK,IAAM,aAAa,GAAG,+DAAc,CACzC,YAAY,EACZ,8DAAyB,CAC1B,CAAC;AAEK,IAAM,gBAAgB,GAAG,+DAAc,CAC5C,YAAY,EACZ,iEAA4B,CAC7B,CAAC;AACK,IAAM,eAAe,GAAG,+DAAc,CAC3C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AACK,IAAM,eAAe,GAAG,+DAAc,CAC3C,YAAY,EACZ,gEAA2B,CAC5B,CAAC;AAEK,IAAM,iBAAiB,GAAG,+DAAc,CAC7C,YAAY,EACZ,kEAA6B,CAC9B,CAAC;AACK,IAAM,gBAAgB,GAAG,+DAAc,CAC5C,YAAY,EACZ,iEAA4B,CAC7B,CAAC;AACK,IAAM,gBAAgB,GAAG,+DAAc,CAC5C,YAAY,EACZ,iEAA4B,CAC7B,CAAC;AACK,IAAM,UAAU,GAAG,+DAAc,CACtC,YAAY,EACZ,2DAAsB,CACvB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGF;;;;;;;GAOG;AACwC;AACP;AACqB;AACM;AAGtB;AACU;AACQ;AAoBrB;AACuB;AACI;AACL;AACA;AACQ;AAGpE;IA2BE,qBACY,QAA+B,EACjC,MAAc,EACd,MAAqB;QAFnB,aAAQ,GAAR,QAAQ,CAAuB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QA7BxB,gBAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,sEAAU,CAAC,CAAC;QAC/C,uBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,6EAAiB,CAAC,CAAC;QAC7D,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yEAAa,CAAC,CAAC;QACrD,kBAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wEAAY,CAAC,CAAC;QACnD,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wEAAY,CAAC,CAAC;QACvD,iBAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0EAAc,CAAC,CAAC;QAEpD,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2EAAe,CAAC,CAAC;QACzD,oBAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0EAAc,CAAC,CAAC;QACvD,oBAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0EAAc,CAAC,CAAC;QACvD,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4EAAgB,CAAC,CAAC;QAC3D,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2EAAe,CAAC,CAAC;QACzD,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2EAAe,CAAC,CAAC;QACzD,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4EAAgB,CAAC,CAAC;QAC3D,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2EAAe,CAAC,CAAC;QACzD,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2EAAe,CAAC,CAAC;QACzD,oBAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0EAAc,CAAC,CAAC;QACvD,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yEAAa,CAAC,CAAC;QACrD,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yEAAa,CAAC,CAAC;QACrD,uBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,6EAAiB,CAAC,CAAC;QAC7D,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4EAAgB,CAAC,CAAC;QAC3D,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4EAAgB,CAAC,CAAC;QAC3D,gBAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,sEAAU,CAAC,CAAC;QAE9C,kBAAa,GAAwB,EAAE,CAAC;QAO9C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEM,6BAAO,GAAd,UAAe,KAAK;QAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,6EAA2B,CAAC,IAAI,+DAAQ,CAAC,KAAK,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAEM,gCAAU,GAAjB,UAAkB,KAAK;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,gFAA8B,CAAC,IAAI,+DAAQ,CAAC,KAAK,CAAC,CAAC,CACxD,CAAC;IACJ,CAAC;IAEM,uCAAiB,GAAxB,UAAyB,KAAK;QAC5B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,oFAAkC,CAAC,IAAI,uEAAY,CAAC,KAAK,CAAC,CAAC,CAChE,CAAC;IACJ,CAAC;IAEM,iCAAW,GAAlB,UAAmB,KAAU;QAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,8EAA4B,CAAC,IAAI,uEAAY,CAAC,KAAK,CAAC,CAAC,CAC1D,CAAC;IACJ,CAAC;IAEM,sCAAgB,GAAvB,UAAwB,KAAU;QAChC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,mFAAiC,CAAC,IAAI,+EAAa,CAAC,KAAK,CAAC,CAAC,CAChE,CAAC;IACJ,CAAC;IACM,gCAAU,GAAjB,UAAkB,KAAU;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,wEAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAS,GAAT;QAAA,iBAoBC;QAnBC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAI;YAC7B,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;iBAC1C;aACF;QACH,CAAC,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAI;YAChC,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;iBAC1C;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAxFU,WAAW;QADvB,gEAAU,EAAE;+EA6BW,iDAAK;YACT,sDAAM;YACN,sEAAa;OA9BpB,WAAW,CAyFvB;IAAD,kBAAC;CAAA;AAzFuB;;;;;;;;;;;;;;;;;;;;AC5CxB;;;;;;;GAOG;AACwC;AAEQ;AAEL;AAG9C;IAAiC,qEAAG;IADpC;QAAA,qEAwDC;QApDQ,YAAM,GAAQ,EAAE,CAAC;QAChB,SAAG,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;;IAmDlC,CAAC;IAjDC,oBAAoB;IACpB,6BAAO,GAAP;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,WAAW;IACX,6BAAO,GAAP,UAAQ,KAAe;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,mBAAmB,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEM,gCAAU,GAAjB,UAAkB,KAAe,EAAE,EAAU;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,oBAAoB,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB;IAClB,mCAAa,GAAb,UAAc,MAAW;QACvB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,YAAY;IACZ,8BAAQ,GAAR,UAAS,MAAW;QAClB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;IACzE,CAAC;IACD,gCAAU,GAAV,UAAW,MAAM;QACf,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,MAAM;SACb,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CACrB,IAAI,CAAC,GAAG,GAAG,oBAAoB,GAAG,MAAM,CAAC,EAAE,EAC3C,WAAW,CACZ,CAAC;IACJ,CAAC;IACM,oCAAc,GAArB,UAAsB,KAAU;QAC9B,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,KAAK,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;IACzE,CAAC;IAtDU,WAAW;QADvB,gEAAU,EAAE;OACA,WAAW,CAuDvB;IAAD,kBAAC;CAAA,CAvDgC,sDAAG,GAuDnC;AAvDuB;;;;;;;;;;;;ACfxB,yGAAyG,0CAA0C,qmBAAqmB,gDAAgD,irBAAirB,+CAA+C,iqBAAiqB,4CAA4C,syBAAsyB,2CAA2C,mSAAmS,kBAAkB,uCAAuC,eAAe,ivBAAivB,+CAA+C,00BAA00B,+CAA+C,mfAAmf,uCAAuC,gS;;;;;;;;;;;;;;;;;;;;;ACApkL;;;;;;;GAOG;AACyE;AASpD;AACiC;AAEgC;AACA;AAkBzF;IAqBE,0BACS,EAAe,EACd,KAAqB,EACtB,OAAoB,EACnB,MAAc,EACf,OAAoB;QAJpB,OAAE,GAAF,EAAE,CAAa;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAa;QACnB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAa;QAvBtB,cAAS,GAAG,KAAK,CAAC;QAQlB,aAAQ,GAAG,CAAC,CAAC;QACZ,YAAO,GAAQ,EAAE,CAAC;QACnB,OAAE,GAAQ,EAAE,CAAC;QAEb,aAAQ,GAAQ,EAAE,CAAC;IAYvB,CAAC;IAEJ;;;SAGK;IACL,mCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,uCAAY,GAAZ,UAAa,MAA2B;QACtC,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,EAAE;YACxC,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;YACtE,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;IACH,CAAC;IAED,aAAa;IACb,mCAAQ,GAAR;QAAA,iBAiCC;QAhCC,IAAM,UAAU,GACd,yCAAyC;YACzC,mDAAmD,CAAC;QAEtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE;gBACL,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;oBAC9B,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC;aACH;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;oBAC9B,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC;aACH;YACD,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE;gBACR,EAAE;gBACF,IAAI,CAAC,oBAAoB,CACvB,cAAM,YAAI,CAAC,aAAa,KAAK,KAAK,EAA5B,CAA4B,EAClC,yDAAU,CAAC,QAAQ,CACpB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,+CAAoB,GAApB,UACE,SAAwB,EACxB,SAAsB;QAEtB,OAAO,UAAC,OAAwB;YAC9B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAED;;;;SAIK;IACL,mCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACD,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC7C,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC3C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACrC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACnC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC3C,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAChE,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,sBAAsB;IACtB,2CAAgB,GAAhB,UAAiB,MAAkB,EAAE,OAAO;QAA3B,mCAAkB;QACjC,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,SAAS;IACT,qCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS;IACT,uCAAY,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAC1C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;wBAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;qBAChD;iBACF;aACF;SACF;IACH,CAAC;IAGD,sBAAI,+BAAC;QADL,aAAa;aACb;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC;;;OAAA;IA/KQ;QAAR,2DAAK,EAAE;;sDAAe;IADZ,gBAAgB;QAhB5B,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,sIAAiC;;SAYlC,CAAC;+EAuBa,0DAAW;YACP,8DAAc;YACb,kFAAW;YACX,sDAAM;YACN,kFAAW;OA1BlB,gBAAgB,CAiL5B;IAAD,uBAAC;CAAA;AAjL4B;;;;;;;;;;;;ACvC7B,qvBAAqvB,6CAA6C,oBAAoB,GAAG,mBAAmB,mCAAmC,gBAAgB,mCAAmC,yBAAyB,oOAAoO,kSAAkS,4KAA4K,0+B;;;;;;;;;;;;;;;;;;;;;ACA7mD;;;;;;;GAOG;AAC0D;AAEpB;AACgD;AACA;AAEhC;AAiBzD;IAcE,2BACU,MAAc,EACf,OAAoB,EACpB,OAAoB,EACnB,MAAqB;QAHrB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAa;QACpB,YAAO,GAAP,OAAO,CAAa;QACnB,WAAM,GAAN,MAAM,CAAe;QAjBxB,gBAAW,GAAQ,EAAE,CAAC;QACtB,aAAQ,GAAG,GAAG,CAAC;QACd,YAAO,GAAQ,EAAE,CAAC;QACnB,OAAE,GAAQ,EAAE,CAAC;QAGZ,eAAU,GAAG,CAAC,CAAC;QAGhB,eAAU,GAAG,KAAK,CAAC;QAElB,kBAAa,GAAwB,EAAE,CAAC;QAQ9C,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IACD,sDAAsD;IACtD,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IACD,mBAAmB;IACnB,wCAAY,GAAZ,UAAa,MAA2B;QACtC,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,EAAE;YACxC,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;YACtE,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;IACH,CAAC;IAED,WAAW;IAEX,uCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,YAAY;IACZ,uCAAW,GAAX,UAAY,MAAkB,EAAE,OAAO;QAA3B,mCAAkB;QAC5B,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SACxC;IACH,CAAC;IAED,cAAc;IACd,oCAAQ,GAAR,UAAS,QAAQ;QACf,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aAC9D,WAAW,CAAC;QACf,IAAI,UAAU,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,wCAAwC,CAAC,CAAC;YAClE,OAAO;SACR;QACD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IACzE,CAAC;IAED;;;SAGK;IACL,wCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;QAC7B,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IACD;;;OAGG;IACH,sCAAU,GAAV,UAAW,MAAM,EAAE,SAAS;QAC1B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,kCAAkC;IAClC,8CAAkB,GAAlB;QAAA,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAO;YACxC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,uCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAvGU,iBAAiB;QAf7B,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,yIAAoC;;SAYrC,CAAC;+EAgBkB,sDAAM;YACN,kFAAW;YACX,kFAAW;YACX,sEAAa;OAlBpB,iBAAiB,CAwG7B;IAAD,wBAAC;CAAA;AAxG6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B9B;;;;;;;GAOG;AACsC;AACM;AACyB;AACN;AAElE,aAAa;AAC0C;AACG;AAE1D,gBAAgB;AAC8B;AACkD;AACV;AACA;AAEtF,iBAAiB;AACkC;AAEnD,gBAAgB;AACqD;AAkBrE;IAAA;IAAyB,CAAC;IAAb,UAAU;QAftB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,EAAE,sEAAiB,CAAC;YACnD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;gBACnB,0DAAW;gBACX,kEAAmB;gBACnB,wEAAc;gBACd,gEAAiB;gBACjB,2DAAa,CAAC,OAAO,CAAC,CAAC,4FAAU,CAAC,CAAC;aACpC;YACD,SAAS,EAAE,CAAC,kFAAW,EAAE,mFAAW,CAAC;YACrC,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,EAAE;SACpB,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;AC7CvB;;;;;;;GAOG;AACsC;AACc;AAEvD,YAAY;AAC2C;AACG;AAE1D,IAAM,UAAU,GAAW;IACzB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sEAAiB,EAAE;IAC9C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,mEAAgB,EAAE;IAC5C;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH","file":"components-user-user-module.js","sourcesContent":["/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport * as actions from '../user-action/user.action';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n  constructor(private action$: Actions, private service: UserService) {}\r\n\r\n  // NEW USER\r\n  @Effect()\r\n  doAddUser$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_NEW_USER),\r\n    map((action: actions.DoNewUserAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.addUser(state).pipe(\r\n        switchMap(user => [new actions.DoNewUserSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoNewUserFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // UPDATE USER\r\n  @Effect()\r\n  doUpdateUser$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_UPDATE_USER),\r\n    map((action: actions.DoUpdateUserAction) => action.payload),\r\n    switchMap(state => {\r\n      const Id = state.id;\r\n      return this.service.updateUser(state, Id).pipe(\r\n        switchMap(user => [new actions.DoUpdateUserSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoUpdateUserFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  @Effect()\r\n  doUserGroupList$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_USER_GROUP_LIST),\r\n    map((action: actions.DoUserGroupListAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.userGrouplist(state).pipe(\r\n        map(analysis => new actions.DoUserGroupListSuccessAction(analysis)),\r\n        catchError(error => of(new actions.DoUserGroupListFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // LIST-USER GROUP\r\n  // LIST-USERLIST\r\n  @Effect()\r\n  doUserList$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_USER_LIST),\r\n    map((action: actions.DoUserListAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.userlist(state).pipe(\r\n        map(analysis => new actions.DoUserListSuccessAction(analysis)),\r\n        catchError(error => of(new actions.DoUserListFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // USER LIST PAGINATION\r\n  @Effect()\r\n  douserpagination$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_USER_COUNT_ACTION),\r\n    map((action: actions.DoUserPaginationAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.userpagiantion(state).pipe(\r\n        switchMap(user => [new actions.DoUserPaginationSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoUserPaginationFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // USER DELATE\r\n  @Effect()\r\n  userDelate$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DELETE_USER),\r\n    map((action: actions.UserDelete) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.userDelete(state).pipe(\r\n        switchMap(user => [new actions.UserDeleteSuccess(user)]),\r\n        catchError(error => of(new actions.UserDeleteFail(error)))\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class UserForm {\r\n  public firstName: String;\r\n  public lastName: String;\r\n  public email: String;\r\n  public userGroupId: number;\r\n  public username: String;\r\n  public password: String;\r\n  public id: number;\r\n\r\n  constructor(userForm: any) {\r\n    this.firstName = userForm.firstName || '';\r\n    this.lastName = userForm.lastName || '';\r\n    this.email = userForm.email || '';\r\n    this.userGroupId = userForm.role || 0;\r\n    this.username = userForm.username || '';\r\n    this.password = userForm.password || '';\r\n    if (userForm.userID) {\r\n      this.id = userForm.userID || '';\r\n    }\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class UserlistForm {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public count: number;\r\n\r\n  constructor(userlistForm: any) {\r\n    this.limit = userlistForm.limit || '';\r\n    this.offset = userlistForm.offset || '';\r\n    this.keyword = userlistForm.keyword || '';\r\n    this.count = userlistForm.count || '';\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { AppState } from '../../../../app.state.interface';\r\nimport { createSelector } from 'reselect';\r\nimport * as fromUser from './user.reducer';\r\n\r\nexport const getUserState = (state: AppState) => state.user;\r\nexport const getGroupList = createSelector(\r\n  getUserState,\r\n  fromUser.getUserGroupList\r\n);\r\nexport const getUsersList = createSelector(\r\n  getUserState,\r\n  fromUser.getUserList\r\n);\r\nexport const getAddUser = createSelector(\r\n  getUserState,\r\n  fromUser.getNewUser\r\n);\r\nexport const getAddUserData = createSelector(\r\n  getUserState,\r\n  fromUser.getNewUserData\r\n);\r\nexport const getUpdateUser = createSelector(\r\n  getUserState,\r\n  fromUser.getUpdateUser\r\n);\r\nexport const getuserpagination = createSelector(\r\n  getUserState,\r\n  fromUser.getuserspagination\r\n);\r\n\r\nexport const UserListLoading = createSelector(\r\n  getUserState,\r\n  fromUser.getUserListLoading\r\n);\r\nexport const UserListLoaded = createSelector(\r\n  getUserState,\r\n  fromUser.getUserListLoaded\r\n);\r\nexport const UserListFailed = createSelector(\r\n  getUserState,\r\n  fromUser.getUserListFailed\r\n);\r\n\r\nexport const UserCountLoading = createSelector(\r\n  getUserState,\r\n  fromUser.getUserCountLoading\r\n);\r\nexport const UserCountLoaded = createSelector(\r\n  getUserState,\r\n  fromUser.getUserCountLoaded\r\n);\r\nexport const UserCountFailed = createSelector(\r\n  getUserState,\r\n  fromUser.getUserCountFailed\r\n);\r\n\r\nexport const UserAddLoading = createSelector(\r\n  getUserState,\r\n  fromUser.getUserAddLoading\r\n);\r\nexport const UserAddLoaded = createSelector(\r\n  getUserState,\r\n  fromUser.getUserAddLoaded\r\n);\r\nexport const UserAddFailed = createSelector(\r\n  getUserState,\r\n  fromUser.getUserAddFailed\r\n);\r\n\r\nexport const UserGroupLoading = createSelector(\r\n  getUserState,\r\n  fromUser.getUserGroupLoading\r\n);\r\nexport const UserGroupLoaded = createSelector(\r\n  getUserState,\r\n  fromUser.getUserGroupLoaded\r\n);\r\nexport const UserGroupFailed = createSelector(\r\n  getUserState,\r\n  fromUser.getUserGroupFailed\r\n);\r\n\r\nexport const UserUpdateLoading = createSelector(\r\n  getUserState,\r\n  fromUser.getUserUpdateLoading\r\n);\r\nexport const UserUpdateLoaded = createSelector(\r\n  getUserState,\r\n  fromUser.getUserUpdateLoaded\r\n);\r\nexport const UserUpdateFailed = createSelector(\r\n  getUserState,\r\n  fromUser.getUserUpdateFailed\r\n);\r\nexport const UserDelate = createSelector(\r\n  getUserState,\r\n  fromUser.getUserDelate\r\n);\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport * as userActions from '../user/user-action/user.action';\r\nimport { Subscription } from 'rxjs/index';\r\nimport * as store from '../../../app.state.interface';\r\nimport { Router } from '@angular/router';\r\nimport { UserForm } from './user-model/user.model';\r\nimport { UserlistForm } from './user-model/userlist.model';\r\nimport {\r\n  getAddUser,\r\n  getAddUserData,\r\n  UserAddFailed,\r\n  UserAddLoaded,\r\n  UserAddLoading,\r\n  UserCountFailed,\r\n  UserCountLoaded,\r\n  UserCountLoading,\r\n  UserGroupFailed,\r\n  UserGroupLoaded,\r\n  UserGroupLoading,\r\n  UserListFailed,\r\n  UserListLoaded,\r\n  UserListLoading,\r\n  UserUpdateFailed,\r\n  UserUpdateLoaded,\r\n  UserUpdateLoading,\r\n  UserDelate\r\n} from './user-reducer/user.selector';\r\nimport { getUpdateUser } from './user-reducer/user.selector';\r\nimport { getuserpagination } from './user-reducer/user.selector';\r\nimport { getUsersList } from './user-reducer/user.selector';\r\nimport { getGroupList } from './user-reducer/user.selector';\r\nimport { RoleListModel } from '../role/role.models/role-list.model';\r\n\r\n@Injectable()\r\nexport class UserSandbox {\r\n  public getAddUser$ = this.appState.select(getAddUser);\r\n  public getuserpagelength$ = this.appState.select(getuserpagination);\r\n  public getupdateuser$ = this.appState.select(getUpdateUser);\r\n  public getUsersList$ = this.appState.select(getUsersList);\r\n  public getGroupRoleList$ = this.appState.select(getGroupList);\r\n  public newUserData$ = this.appState.select(getAddUserData);\r\n\r\n  public userListLoading$ = this.appState.select(UserListLoading);\r\n  public userListLoaded$ = this.appState.select(UserListLoaded);\r\n  public userListFailed$ = this.appState.select(UserListFailed);\r\n  public userGroupLoading$ = this.appState.select(UserGroupLoading);\r\n  public userGroupLoaded$ = this.appState.select(UserGroupLoaded);\r\n  public userGroupFailed$ = this.appState.select(UserGroupFailed);\r\n  public userCountLoading$ = this.appState.select(UserCountLoading);\r\n  public userCountLoaded$ = this.appState.select(UserCountLoaded);\r\n  public userCountFailed$ = this.appState.select(UserCountFailed);\r\n  public userAddLoading$ = this.appState.select(UserAddLoading);\r\n  public userAddLoaded$ = this.appState.select(UserAddLoaded);\r\n  public userAddFailed$ = this.appState.select(UserAddFailed);\r\n  public userUpdateLoading$ = this.appState.select(UserUpdateLoading);\r\n  public userUpdateLoaded$ = this.appState.select(UserUpdateLoaded);\r\n  public userUpdateFailed$ = this.appState.select(UserUpdateFailed);\r\n  public userDelate$ = this.appState.select(UserDelate);\r\n\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    protected appState: Store<store.AppState>,\r\n    private router: Router,\r\n    private toastr: ToastrManager\r\n  ) {\r\n    this.subscribe();\r\n  }\r\n\r\n  public addUser(value) {\r\n    this.appState.dispatch(\r\n      new userActions.DoNewUserAction(new UserForm(value))\r\n    );\r\n  }\r\n\r\n  public updateUser(value) {\r\n    this.appState.dispatch(\r\n      new userActions.DoUpdateUserAction(new UserForm(value))\r\n    );\r\n  }\r\n\r\n  public getuserpagination(value) {\r\n    this.appState.dispatch(\r\n      new userActions.DoUserPaginationAction(new UserlistForm(value))\r\n    );\r\n  }\r\n\r\n  public getUserlist(value: any) {\r\n    this.appState.dispatch(\r\n      new userActions.DoUserListAction(new UserlistForm(value))\r\n    );\r\n  }\r\n\r\n  public getUserGrouplist(value: any) {\r\n    this.appState.dispatch(\r\n      new userActions.DoUserGroupListAction(new RoleListModel(value))\r\n    );\r\n  }\r\n  public deleteUser(value: any) {\r\n    this.appState.dispatch(new userActions.UserDelete(value));\r\n  }\r\n\r\n  subscribe() {\r\n    this.subscriptions.push(\r\n      this.getAddUser$.subscribe(data => {\r\n        if (data) {\r\n          if (data && data.status === 1) {\r\n            this.router.navigate(['/settings/user']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.push(\r\n      this.getupdateuser$.subscribe(data => {\r\n        if (data) {\r\n          if (data && data.status === 1) {\r\n            this.router.navigate(['/settings/user']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserForm } from './user-model/user.model';\r\nimport { Api } from '../../providers/api/api';\r\n\r\n@Injectable()\r\nexport class UserService extends Api {\r\n  public userdata: any;\r\n\r\n  public params: any = {};\r\n  private url = this.getBaseUrl();\r\n\r\n  // SET & GET SERVICE\r\n  getdata() {\r\n    return this.userdata;\r\n  }\r\n\r\n  setdata(data) {\r\n    this.userdata = data;\r\n  }\r\n\r\n  // new user\r\n  addUser(param: UserForm): Observable<any> {\r\n    return this.http.post(this.url + '/auth/create-user', param);\r\n  }\r\n\r\n  public updateUser(param: UserForm, Id: number): Observable<any> {\r\n    return this.http.put(this.url + '/auth/update-user/' + Id, param);\r\n  }\r\n\r\n  // user group list\r\n  userGrouplist(params: any): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/role/rolelist', { params: reqOpts });\r\n  }\r\n\r\n  // user list\r\n  userlist(params: any): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/auth/userlist', { params: reqOpts });\r\n  }\r\n  userDelete(params) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      withCredentials: false,\r\n      body: params\r\n    };\r\n    return this.http.delete(\r\n      this.url + '/auth/delete-user/' + params.id,\r\n      httpOptions\r\n    );\r\n  }\r\n  public userpagiantion(param: any): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = param;\r\n    return this.http.get(this.url + '/auth/userlist', { params: reqOpts });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"flex setting1-inner-header\\\" style=\\\"margin-bottom: 22px\\\">\\r\\n    <h3> {{updatetitle ? 'Update User' : 'Add User'}} </h3>\\r\\n</div>\\r\\n<div class=\\\"settings-right-wrapper\\\">\\r\\n\\r\\n    <!---->\\r\\n    <div class=\\\"new-user\\\">\\r\\n        <form (ngSubmit)=\\\"onSubmit(user.value)\\\" [formGroup]=\\\"user\\\" class=\\\"form-horizontal m-t-20\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>First Name<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Last Name<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Email<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.email.errors.required\\\">Email is required\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"f.email.errors\\\">Email must be a valid email address'\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"control-label\\\">Role<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <select [(ngModel)]=\\\"role\\\" class=\\\"form-control custom-select\\\" data-placeholder=\\\"Choose Role\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.role.errors }\\\" formControlName=\\\"role\\\" placeholder=\\\"Role\\\">\\r\\n                            <option [ngValue]=\\\"undefined\\\" selected>- -Select- -</option>\\r\\n                            <option *ngFor=\\\"let rolelist of sandbox.getGroupRoleList$ | async\\\"\\r\\n                                    value={{rolelist.groupId}}>\\r\\n                                {{rolelist.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.email.errors.required\\\">Role is required\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>User Name<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <input type=\\\"email\\\" [(ngModel)]=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"User Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.username.errors.required\\\">User Name Email is required\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"f.username.errors\\\">User Name Email must be a valid email address\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Password<sup class=\\\"supvalidation\\\">*</sup></label>\\r\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"flex user-btn\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-add\\\">{{updatetitle ? 'Update User' : 'Save' }}\\r\\n                        </button>\\r\\n                        <button (click)=\\\"UserCancle()\\\" class=\\\"btn btn-cancel\\\">Cancle\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, ViewEncapsulation, Input, OnInit } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Validators,\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  ValidatorFn,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { patternValidator } from '../../../../../../../core/admin/providers/patternValidator';\r\nimport { UserSandbox } from '../../../../../../../core/admin/settings/user/user.sandbox';\r\nimport { UserService } from '../../../../../../../core/admin/settings/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-spurt-settings-user-add',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: 'add.component.html',\r\n  styles: [\r\n    `\r\n      .settings-right-wrapper {\r\n        margin-top: 0px !important;\r\n      }\r\n\r\n      .setting1-inner-header {\r\n        margin-top: 40px !important;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n  @Input() userlist: any;\r\n  public user: FormGroup;\r\n  public submitted = false;\r\n  public firstName: FormControl;\r\n  public lastName: FormControl;\r\n  public email: FormControl;\r\n  public role: FormControl;\r\n  public username: FormControl;\r\n  public password: FormControl;\r\n  private valid: boolean;\r\n  public pageSize = 5;\r\n  private keyword: any = '';\r\n  public id: any = '';\r\n  private offset: any;\r\n  public UserInfo: any = [];\r\n  private update_UserId: boolean;\r\n  private servicedata: any;\r\n  public updatetitle: any;\r\n  private edituserId: any;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public sandbox: UserSandbox,\r\n    private router: Router,\r\n    public service: UserService\r\n  ) {}\r\n\r\n  /**\r\n   *initially  calls editUserList,getuserGrouplist with argument(this.offset, this.keyword),\r\n   *  initForm\r\n   * */\r\n  ngOnInit() {\r\n    this.UserInfo = [];\r\n    this.update_UserId = false;\r\n    this.edituserId = this.route.snapshot.paramMap.get('id');\r\n\r\n    this.editUserList();\r\n    if (this.UserInfo && this.UserInfo[0]) {\r\n      this.update_UserId = true;\r\n    }\r\n    this.getuserGrouplist(this.offset, this.keyword);\r\n    this.initForm();\r\n  }\r\n\r\n  beforeChange($event: NgbPanelChangeEvent) {\r\n    if ($event.panelId === 'preventchange-2') {\r\n      $event.preventDefault();\r\n    }\r\n\r\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\r\n      $event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // FORM GROUP\r\n  initForm() {\r\n    const emailRegex =\r\n      '^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' +\r\n      '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$';\r\n\r\n    this.user = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(emailRegex),\r\n          Validators.minLength(5)\r\n        ])\r\n      ],\r\n      username: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(emailRegex),\r\n          Validators.minLength(5)\r\n        ])\r\n      ],\r\n      role: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        this.conditionalValidator(\r\n          () => this.update_UserId === false,\r\n          Validators.required\r\n        )\r\n      ]\r\n    });\r\n  }\r\n\r\n  // Conditional Validator\r\n  conditionalValidator(\r\n    condition: () => boolean,\r\n    validator: ValidatorFn\r\n  ): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!condition()) {\r\n        return null;\r\n      }\r\n      return validator(control);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handles form onSubmit .calls sandbox updateUser and addUser if valid.\r\n   *\r\n   * @param user from entire form.\r\n   * */\r\n  onSubmit(user) {\r\n    this.submitted = true;\r\n    if (this.user.invalid) {\r\n      return;\r\n    }\r\n    const params: any = {};\r\n    params.firstName = this.user.value.firstName;\r\n    params.lastName = this.user.value.lastName;\r\n    params.email = this.user.value.email;\r\n    params.role = this.user.value.role;\r\n    params.username = this.user.value.username;\r\n    params.password = this.user.value.password;\r\n    if (this.UserInfo && this.UserInfo[0] && this.UserInfo[0].userId) {\r\n      params.userID = this.UserInfo[0].userId;\r\n      this.sandbox.updateUser(params);\r\n      this.service.setdata('');\r\n    } else {\r\n      this.sandbox.addUser(params);\r\n    }\r\n  }\r\n\r\n  // DROP DOWN ROLE LIST\r\n  getuserGrouplist(offset: number = 0, keyword) {\r\n    const params: any = {};\r\n    params.limit = this.pageSize;\r\n    params.offset = offset;\r\n    params.keyword = this.keyword;\r\n    params.count = '';\r\n    params.status = 1;\r\n    this.sandbox.getUserGrouplist(params);\r\n  }\r\n\r\n  // CANCLE\r\n  UserCancle() {\r\n    this.UserInfo = ' ';\r\n    this.service.setdata(this.UserInfo);\r\n    this.router.navigate(['/settings/user']);\r\n  }\r\n\r\n  // UPDATE\r\n  editUserList() {\r\n    this.servicedata = this.service.getdata();\r\n    if (this.servicedata) {\r\n      this.UserInfo.push(this.servicedata);\r\n      this.update_UserId = false;\r\n    }\r\n    if (this.UserInfo && this.UserInfo[0]) {\r\n      this.update_UserId = false;\r\n      if (this.edituserId) {\r\n        for (let i = 0; i < this.UserInfo.length; i++) {\r\n          this.updatetitle = 1;\r\n          this.firstName = this.UserInfo[0].firstName;\r\n          this.lastName = this.UserInfo[0].lastName;\r\n          this.email = this.UserInfo[0].email;\r\n          this.username = this.UserInfo[0].username;\r\n          if (this.UserInfo[0] && this.UserInfo[0].usergroup) {\r\n            this.role = this.UserInfo[0].usergroup.groupId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // VALIDATION\r\n  get f() {\r\n    return this.user.controls;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"flex setting1-inner-header\\\">\\r\\n    <h3>User List</h3>\\r\\n    <button class=\\\"btn\\\" (click)=\\\" AddeNewUser()\\\"><img\\r\\n            src=\\\"assets/img/add-white-ico.png\\\">Add User</button>\\r\\n</div>\\r\\n<div class=\\\"settings-right-wrapper\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">User Name</th>\\r\\n                    <th scope=\\\"col\\\">Email Id</th>\\r\\n                    <th scope=\\\"col\\\">Role</th>\\r\\n                    <th scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let userlist of sandbox.getUsersList$ | async; let i=index\\\">\\r\\n                    <td>{{userlist.firstName}} {{userlist.lastName}}</td>\\r\\n                    <td>{{userlist.email}}</td>\\r\\n                    <td>{{userlist.usergroup.name}}</td>\\r\\n                    <td><i (click)=\\\"editUser(userlist)\\\" class=\\\"fas fa-edit\\\"></i>\\r\\n                        <i [ngbPopover]=\\\"deleteContent\\\" placement=\\\"bottom\\\" #deletePop=\\\"ngbPopover\\\" style=\\\"margin-left: 15px;\\\" class=\\\"fas fa-trash\\\">\\r\\n                        <ng-template #deleteContent>\\r\\n                            <div class=\\\"style\\\">\\r\\n                                <div class=\\\"modal-header\\\">\\r\\n                                    <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\"\\r\\n                                            data-dismiss=\\\"modal\\\">No\\r\\n                                    </button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                                            (click)=\\\"deleteUser(userlist.userId, deletePop)\\\"\\r\\n                                            data-dismiss=\\\"modal\\\">Yes\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </i>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<mat-paginator [length]=\\\"sandbox.getuserpagelength$ | async\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"[pageSize]\\\" (page)=\\\"onPageChange($event)\\\">\\r\\n</mat-paginator>\"","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { UserSandbox } from '../../../../../../../core/admin/settings/user/user.sandbox';\r\nimport { UserService } from '../../../../../../../core/admin/settings/user/user.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n\r\n@Component({\r\n  selector: 'app-settings-user-list',\r\n  templateUrl: './list.component.html',\r\n  styles: [\r\n    `\r\n      .settings-right-wrapper {\r\n        margin-top: 0px !important;\r\n      }\r\n\r\n      .setting1-inner-header {\r\n        margin-top: 40px !important;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class UserListComponent implements OnInit, OnDestroy {\r\n  public userdetails: any = {};\r\n  public pageSize = '5';\r\n  private keyword: any = '';\r\n  public id: any = '';\r\n  private offset: any;\r\n  private page: any;\r\n  private pagination = 1;\r\n  private currentPage: any;\r\n  private index: any;\r\n  public addnewuser = false;\r\n  private popoverContent: string;\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public sandbox: UserSandbox,\r\n    public service: UserService,\r\n    private toastr: ToastrManager\r\n  ) {\r\n    this.regSubscribeEvents();\r\n  }\r\n  // initially getUserList with argument(offset,keyword)\r\n  ngOnInit() {\r\n    this.pageSize = localStorage.getItem('itemsPerPage');\r\n    this.getUserList(this.offset, this.keyword);\r\n  }\r\n  // STYLING PUROPOSE\r\n  beforeChange($event: NgbPanelChangeEvent) {\r\n    if ($event.panelId === 'preventchange-2') {\r\n      $event.preventDefault();\r\n    }\r\n\r\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\r\n      $event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // ADD USER\r\n\r\n  AddeNewUser() {\r\n    this.router.navigate(['/settings/user/add']);\r\n  }\r\n\r\n  // USER LIST\r\n  getUserList(offset: number = 0, keyword) {\r\n    const params: any = {};\r\n    params.limit = this.pageSize;\r\n    params.offset = offset;\r\n    params.keyword = this.keyword;\r\n    this.sandbox.getUserlist(params);\r\n    if (this.pagination) {\r\n      params.count = 'true';\r\n      this.sandbox.getuserpagination(params);\r\n    }\r\n  }\r\n\r\n  // UPDATE USER\r\n  editUser(userinfo) {\r\n    const userDetail = JSON.parse(localStorage.getItem('userdetail'))\r\n      .userdetails;\r\n    if (userDetail.userId === userinfo.userId) {\r\n      this.toastr.errorToastr('You cannot edit current logged in user');\r\n      return;\r\n    }\r\n    this.userdetails = userinfo;\r\n    this.service.setdata(this.userdetails);\r\n    this.router.navigate(['/settings/user/edit', this.userdetails.userId]);\r\n  }\r\n\r\n  /**calls getUserList for pagination\r\n   *\r\n   * @param event from material paginator\r\n   * */\r\n  onPageChange(event: any) {\r\n    this.currentPage = event.offset;\r\n    this.pageSize = event.pageSize;\r\n    this.index = event.pageIndex;\r\n    const offset = event.pageSize * event.pageIndex;\r\n    this.getUserList(offset, this.pageSize);\r\n  }\r\n  /**\r\n   * Handles form 'delete' event. Calls sandbox delete the perticular country.\r\n   *\r\n   */\r\n  deleteUser(userId, deletePop) {\r\n    this.popoverContent = deletePop;\r\n    this.sandbox.deleteUser({ id: userId });\r\n  }\r\n  // delete event , subscripe status\r\n  regSubscribeEvents() {\r\n    this.subscriptions.push(\r\n      this.sandbox.userDelate$.subscribe(_delete => {\r\n        if (_delete && _delete.status === 1) {\r\n          this.getUserList(this.offset, '');\r\n        }\r\n      })\r\n    );\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(each => {\r\n      each.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultCommonModule } from '../../../../default.common.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// components\r\nimport { UserAddComponent } from './add/add.component';\r\nimport { UserListComponent } from './list/list.component';\r\n\r\n// Store Actions\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { UserEffect } from '../../../../../../core/admin/settings/user/user-effect/user.effect';\r\nimport { UserService } from '../../../../../../core/admin/settings/user/user.service';\r\nimport { UserSandbox } from '../../../../../../core/admin/settings/user/user.sandbox';\r\n\r\n// Routing Module\r\nimport { UserRoutingModule } from './user.routing';\r\n\r\n// Shared Module\r\nimport { MaterialModule } from '../../../../default.material.module';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [UserAddComponent, UserListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DefaultCommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    UserRoutingModule,\r\n    EffectsModule.forRoot([UserEffect])\r\n  ],\r\n  providers: [UserService, UserSandbox],\r\n  bootstrap: [],\r\n  entryComponents: []\r\n})\r\nexport class UserModule {}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Component\r\nimport { UserAddComponent } from './add/add.component';\r\nimport { UserListComponent } from './list/list.component';\r\n\r\nconst userRoutes: Routes = [\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n  { path: 'list', component: UserListComponent },\r\n  { path: 'add', component: UserAddComponent },\r\n  {\r\n    path: 'edit/:id',\r\n    component: UserAddComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(userRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule {}\r\n"],"sourceRoot":""}