{"version":3,"sources":["webpack:///./src/core/admin/catalog/brand/brand.sandbox.ts","webpack:///./src/core/admin/catalog/brand/brandApiClientservice.ts","webpack:///./src/core/admin/catalog/brand/models/manufacture-Add.model.ts","webpack:///./src/core/admin/catalog/brand/models/manufacture-list.model.ts","webpack:///./src/core/admin/catalog/brand/models/manufacturer-Update.model.ts","webpack:///./src/core/admin/catalog/brand/models/manufacturer-count.model.ts","webpack:///./src/core/admin/catalog/brand/models/manufacturer-delete.model.ts","webpack:///./src/core/admin/catalog/brand/reducer/brand.selector.ts"],"names":[],"mappings":"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","file":"default~catalog-catalog-module~components-brand-brand-module~components-product-product-module.js","sourcesContent":["/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n// routing\r\nimport { Router } from '@angular/router';\r\n// store\r\nimport { Store } from '@ngrx/store';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n// app state\r\nimport * as store from '../../../app.state.interface';\r\n// actions\r\nimport * as brandActions from '../brand/action/brand.actions';\r\n// model\r\nimport { ManufacturerCountModel } from './models/manufacturer-count.model';\r\nimport { ManufacturerUpdateModel } from './models/manufacturer-Update.model';\r\nimport { ManufactureAddModel } from './models/manufacture-Add.model';\r\nimport { ManufacturerListModel } from './models/manufacture-list.model';\r\nimport {\r\n  // Manufacturer list selectors\r\n  getManufacturerList,\r\n  manufacturerListLoading,\r\n  manufacturerListLoaded,\r\n  manufacturerListFailed,\r\n  // Manufacturer add selectors\r\n  getManufacturerAdd,\r\n  manufacturerAddLoading,\r\n  manufacturerAddFailed,\r\n  manufacturerAddLoaded,\r\n  // Manufacturer update selectors\r\n  getManufacturerUpdate,\r\n  manufacturerUpdateLoading,\r\n  manufacturerUpdateLoaded,\r\n  manufacturerUpdateFailed,\r\n  // Manufacturer count\r\n  getManufacturerContdata,\r\n  manufacturerCountFailed,\r\n  manufacturerCountLoading,\r\n  manufacturerCountLoaded,\r\n  // Manufacturer delete\r\n  getManufacturerDelete,\r\n  manufacturerDeleteLoading,\r\n  manufacturerDeleteLoaded,\r\n  manufacturerDeleteFailed\r\n} from './reducer/brand.selector';\r\nimport { ManufacturerDeleteModel } from './models/manufacturer-delete.model';\r\n\r\n@Injectable()\r\nexport class BrandSandbox {\r\n  public getManufactureList$ = this.appState.select(getManufacturerList);\r\n  public manufacturerListLoading$ = this.appState.select(\r\n    manufacturerListLoading\r\n  );\r\n  public manufacturerListLoaded$ = this.appState.select(manufacturerListLoaded);\r\n  public manufacturerListFailed$ = this.appState.select(manufacturerListFailed);\r\n\r\n  public getManufacturercount$ = this.appState.select(getManufacturerContdata);\r\n  public manufacturerCountLoading$ = this.appState.select(\r\n    manufacturerCountLoading\r\n  );\r\n  public manufacturerCountLoaded$ = this.appState.select(\r\n    manufacturerCountLoaded\r\n  );\r\n  public manufacturerCountFailed$ = this.appState.select(\r\n    manufacturerCountFailed\r\n  );\r\n\r\n  public getManufacturerAdd$ = this.appState.select(getManufacturerAdd);\r\n  public manufacturerAddLoading$ = this.appState.select(manufacturerAddLoading);\r\n  public manufacturerAddLoaded$ = this.appState.select(manufacturerAddLoaded);\r\n  public manufacturerAddFailed$ = this.appState.select(manufacturerAddFailed);\r\n\r\n  public getManufacturerUpdate$ = this.appState.select(getManufacturerUpdate);\r\n  public manufacturerUpdateLoading$ = this.appState.select(\r\n    manufacturerUpdateLoading\r\n  );\r\n  public manufacturerUpdateLoaded$ = this.appState.select(\r\n    manufacturerUpdateLoaded\r\n  );\r\n  public manufacturerUpdateFailed$ = this.appState.select(\r\n    manufacturerUpdateFailed\r\n  );\r\n\r\n  public getManufacturerDelete$ = this.appState.select(getManufacturerDelete);\r\n  public manufacturerDeleteLoading$ = this.appState.select(\r\n    manufacturerDeleteLoading\r\n  );\r\n  public manufacturerDeleteLoaded$ = this.appState.select(\r\n    manufacturerDeleteLoaded\r\n  );\r\n  public manufacturerDeleteFailed$ = this.appState.select(\r\n    manufacturerDeleteFailed\r\n  );\r\n\r\n  public subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    protected appState: Store<store.AppState>,\r\n    private router: Router,\r\n    private toastr: ToastrManager\r\n  ) {\r\n    this.subscribeData();\r\n  }\r\n\r\n  public manufacturerCountList(value: any) {\r\n    this.appState.dispatch(\r\n      new brandActions.DoManufactCountAction(new ManufacturerCountModel(value))\r\n    );\r\n  }\r\n\r\n  public updateManufactuer(value: any) {\r\n    this.appState.dispatch(\r\n      new brandActions.DoManufacturerUpdateAction(\r\n        new ManufacturerUpdateModel(value)\r\n      )\r\n    );\r\n  }\r\n\r\n  public addManufacturer(value: any) {\r\n    this.appState.dispatch(\r\n      new brandActions.DoAddManufacturerAction(new ManufactureAddModel(value))\r\n    );\r\n  }\r\n\r\n  public manufacturerList(value: any) {\r\n    this.appState.dispatch(\r\n      new brandActions.DOManufacturerListAction(\r\n        new ManufacturerListModel(value)\r\n      )\r\n    );\r\n  }\r\n\r\n  deleteManufacturer(value) {\r\n    this.appState.dispatch(\r\n      new brandActions.ManufacturerDeleteAction(\r\n        new ManufacturerDeleteModel(value)\r\n      )\r\n    );\r\n  }\r\n\r\n  public subscribeData() {\r\n    this.subscriptions.push(\r\n      this.getManufacturerAdd$.subscribe(data => {\r\n        if (data) {\r\n          if (data.name) {\r\n            this.router.navigate(['/catalog/brand/list']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.push(\r\n      this.getManufacturerUpdate$.subscribe(data => {\r\n        if (data) {\r\n          if (data.message) {\r\n            this.router.navigate(['/catalog/brand/list']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\n// model\r\nimport { ManufacturerListModel } from './models/manufacture-list.model';\r\nimport { ManufacturerCountModel } from './models/manufacturer-count.model';\r\nimport { Api } from '../../providers/api/api';\r\n\r\n@Injectable()\r\nexport class BrandApiClient extends Api {\r\n  // url address\r\n  private url: string = this.getBaseUrl();\r\n  public editData: any;\r\n  public delManufactvalue: any;\r\n  public pageoffset: any;\r\n  public pagesize: any;\r\n  public ischecked: any;\r\n  public imageValue: any;\r\n  public checkLength: any = [];\r\n\r\n  deletePagerefresh(pageoffset, pagesize) {\r\n    this.pageoffset = pageoffset;\r\n    this.pagesize = pagesize;\r\n  }\r\n\r\n  // delete data value\r\n  setDelManufact(value: any, checked: any, checkLength: any) {\r\n    this.delManufactvalue = value;\r\n    this.ischecked = checked;\r\n    this.checkLength = checkLength;\r\n  }\r\n\r\n  getDelManufact() {\r\n    return this.delManufactvalue;\r\n  }\r\n\r\n  // passing manufacture editdata\r\n  setManufactureEditValue(editdata) {\r\n    this.editData = editdata;\r\n  }\r\n\r\n  getManufacturerEditeValue() {\r\n    return this.editData;\r\n  }\r\n\r\n  /**\r\n   * Handles 'manufacturerList' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params form ManufacturerListModel\r\n   */\r\n\r\n  public manufacturerList(params: ManufacturerListModel): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.url + '/manufacturer/manufacturerlist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles 'manufacturerCount' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from model\r\n   */\r\n  manufacturerCount(params: ManufacturerCountModel) {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n\r\n    return this.http.get(this.url + '/manufacturer/manufacturerlist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles 'updateManufacturer' function. Calls put method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param value from model\r\n   */\r\n  updateManufacturer(value: any) {\r\n    return this.http.put(\r\n      this.url + '/manufacturer/update-manufacturer/' + value.manufacturerId,\r\n      value\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'addManufactureData' function. Calls post method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param value from model\r\n   */\r\n  addManufactureData(value: any) {\r\n    return this.http.post(\r\n      this.url + '/manufacturer/create-manufacturer',\r\n      value\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'deleteManufacturer' function. Calls delete method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param value from model\r\n   */\r\n\r\n  deleteManufacturer(value: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      withCredentials: false,\r\n      body: { manufacturerId: value.manufacturerId }\r\n    };\r\n\r\n    return this.http.delete(\r\n      this.url + '/manufacturer/delete-manufacturer/' + value.manufacturerId,\r\n      httpOptions\r\n    );\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class ManufactureAddModel {\r\n  public name: string;\r\n  public image: string;\r\n  public sortOrder: number;\r\n  public status: number;\r\n\r\n  constructor(manufactureAddForm: any) {\r\n    this.name = manufactureAddForm.name || '';\r\n    this.image = manufactureAddForm.image || '';\r\n    this.sortOrder = manufactureAddForm.sortOrder || 0;\r\n    this.status = manufactureAddForm.status || 0;\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class ManufacturerListModel {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public count: boolean;\r\n  public status: any;\r\n\r\n  constructor(manufactuerListFrom: any) {\r\n    this.limit = manufactuerListFrom.limit || 0;\r\n    this.offset = manufactuerListFrom.offset || 0;\r\n    this.keyword = manufactuerListFrom.keyword || '';\r\n    this.count = manufactuerListFrom.count || false;\r\n    this.status = manufactuerListFrom.status || '';\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class ManufacturerUpdateModel {\r\n  public manufacturerId: number;\r\n  public name: string;\r\n  public image: string;\r\n  public sortOrder: number;\r\n  public status: number;\r\n\r\n  constructor(manufacturerUpdate: any) {\r\n    this.name = manufacturerUpdate.name || '';\r\n    this.manufacturerId = manufacturerUpdate.manufacturerId || 0;\r\n    this.image = manufacturerUpdate.image || '';\r\n    this.sortOrder = manufacturerUpdate.sortOrder || 0;\r\n    this.status = manufacturerUpdate.status || 0;\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class ManufacturerCountModel {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public count: boolean;\r\n\r\n  constructor(manufactuerCountFrom: any) {\r\n    this.limit = manufactuerCountFrom.limit || 0;\r\n    this.offset = manufactuerCountFrom.offset || 0;\r\n    this.keyword = manufactuerCountFrom.keyword || '';\r\n    this.count = manufactuerCountFrom.count || false;\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class ManufacturerDeleteModel {\r\n  public manufacturerId: number;\r\n\r\n  constructor(manufacturerdeleteForm: any) {\r\n    this.manufacturerId = manufacturerdeleteForm.manufacturerId || '';\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { createSelector } from 'reselect';\r\nimport * as fromBrand from './brand.reducer';\r\nimport { AppState } from '../../../../app.state.interface';\r\n\r\nexport const getBrandState = (state: AppState) => state.brand;\r\n// manufacturer list\r\nexport const getManufacturerList = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerList\r\n);\r\nexport const manufacturerListLoading = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerListLoading\r\n);\r\nexport const manufacturerListLoaded = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufactuerListLoaded\r\n);\r\nexport const manufacturerListFailed = createSelector(\r\n  getBrandState,\r\n  fromBrand.getmanufacturerListFailed\r\n);\r\n// manufacturer count\r\nexport const getManufacturerContdata = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerCount\r\n);\r\nexport const manufacturerCountLoading = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerCountLoading\r\n);\r\nexport const manufacturerCountLoaded = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerCountLoaded\r\n);\r\nexport const manufacturerCountFailed = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerCountFailed\r\n);\r\n// manufacturer add\r\nexport const getManufacturerAdd = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerAdd\r\n);\r\nexport const manufacturerAddLoading = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerAddLoading\r\n);\r\nexport const manufacturerAddLoaded = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerAddLoaded\r\n);\r\nexport const manufacturerAddFailed = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerAddFailed\r\n);\r\n// manufacturer update\r\nexport const getManufacturerUpdate = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerUpdate\r\n);\r\nexport const manufacturerUpdateLoading = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerUpdateLoading\r\n);\r\nexport const manufacturerUpdateLoaded = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerUpdateLoaded\r\n);\r\nexport const manufacturerUpdateFailed = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerUpdateFailed\r\n);\r\n// manufacturer delete\r\nexport const getManufacturerDelete = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerDelete\r\n);\r\nexport const manufacturerDeleteLoading = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerDeleteLoading\r\n);\r\nexport const manufacturerDeleteLoaded = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerDeleteLoaded\r\n);\r\nexport const manufacturerDeleteFailed = createSelector(\r\n  getBrandState,\r\n  fromBrand.getManufacturerDeleteFailed\r\n);\r\n"],"sourceRoot":""}