{"version":3,"sources":["webpack:///./src/core/admin/catalog/layout/layout.sandbox.ts","webpack:///./src/core/admin/catalog/layout/models/category.model.ts","webpack:///./src/core/admin/catalog/layout/models/index.ts","webpack:///./src/core/admin/catalog/layout/models/product.model.ts","webpack:///./src/core/admin/catalog/layout/reducer/selectors.ts","webpack:///./src/core/admin/catalog/product/product.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;GAOG;;AAEwC;AACP;AAE2B;AAEtB;AACgB;AAEF;AAmB1B;AAG7B;IAmCE,wBACY,QAA+B,EACjC,MAAc,EACd,MAAqB;QAFnB,aAAQ,GAAR,QAAQ,CAAuB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QArCxB,uBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,uEAAoB,CAAC,CAAC;QAChE,8BAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrD,8EAA2B,CAC5B,CAAC;QACK,6BAAwB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACpD,6EAA0B,CAC3B,CAAC;QAEK,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wEAAqB,CAAC,CAAC;QAClE,+BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACtD,+EAA4B,CAC7B,CAAC;QACK,8BAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrD,8EAA2B,CAC5B,CAAC;QAEK,0BAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0EAAuB,CAAC,CAAC;QACtE,iCAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACxD,iFAA8B,CAC/B,CAAC;QACK,gCAA2B,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACvD,gFAA6B,CAC9B,CAAC;QAEK,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wEAAqB,CAAC,CAAC;QAClE,+BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACtD,+EAA4B,CAC7B,CAAC;QACK,8BAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrD,8EAA2B,CAC5B,CAAC;QAEM,kBAAa,GAAwB,EAAE,CAAC;QAO9C,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,4CAAmB,GAA1B,UAA2B,MAAgB;QAAhB,oCAAgB;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,gFAA+C,CACjD,IAAI,oDAAY,CAAC,MAAM,CAAC,CACzB,CACF,CAAC;IACJ,CAAC;IAEM,kDAAyB,GAAhC,UAAiC,MAAgB;QAAhB,oCAAgB;QAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,iFAAgD,CAClD,IAAI,oDAAY,CAAC,MAAM,CAAC,CACzB,CACF,CAAC;IACJ,CAAC;IAEM,oDAA2B,GAAlC,UAAmC,MAAgB;QAAhB,oCAAgB;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,mFAAkD,CACpD,IAAI,oDAAY,CAAC,MAAM,CAAC,CACzB,CACF,CAAC;IACJ,CAAC;IAEM,6CAAoB,GAA3B,UAA4B,MAAgB;QAAhB,oCAAgB;QAC1C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,iFAAgD,CAClD,IAAI,qDAAa,CAAC,MAAM,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,2CAAkB,GAA1B,cAAoC,CAAC;IA9E1B,cAAc;QAD1B,gEAAU,EAAE;+EAqCW,iDAAK;YACT,sDAAM;YACN,sEAAa;OAtCpB,cAAc,CA+E1B;IAAD,qBAAC;CAAA;AA/E0B;;;;;;;;;;;;;ACvC3B;AAAA;AAAA;;;;;;;GAOG;AAEH;IAOE,uBAAY,gBAAqB;QAC/B,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,IAAI,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,IAAI,KAAK,CAAC;IAC/C,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;GAOG;AAE6B;AACC;;;;;;;;;;;;;ACVjC;AAAA;AAAA;;;;;;;GAOG;AAEH;IASE,sBAAY,MAAW;QACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;IACrC,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;GAOG;AAGuC;AACQ;AAElD,wEAAwE;AACxE;;GAEG;AACI,IAAM,qBAAqB,GAAG,UAAC,KAAe,IAAK,YAAK,CAAC,aAAa,EAAnB,CAAmB,CAAC;AACvE,IAAM,oBAAoB,GAAG,+DAAc,CAChD,qBAAqB,EACrB,oEAAkC,CACnC,CAAC;AACK,IAAM,0BAA0B,GAAG,+DAAc,CACtD,qBAAqB,EACrB,0EAAwC,CACzC,CAAC;AACK,IAAM,2BAA2B,GAAG,+DAAc,CACvD,qBAAqB,EACrB,2EAAyC,CAC1C,CAAC;AACK,IAAM,0BAA0B,GAAG,+DAAc,CACtD,qBAAqB,EACrB,0EAAwC,CACzC,CAAC;AAEK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,qBAAqB,EACrB,qEAAmC,CACpC,CAAC;AACK,IAAM,2BAA2B,GAAG,+DAAc,CACvD,qBAAqB,EACrB,2EAAyC,CAC1C,CAAC;AACK,IAAM,4BAA4B,GAAG,+DAAc,CACxD,qBAAqB,EACrB,4EAA0C,CAC3C,CAAC;AACK,IAAM,2BAA2B,GAAG,+DAAc,CACvD,qBAAqB,EACrB,2EAAyC,CAC1C,CAAC;AAEK,IAAM,uBAAuB,GAAG,+DAAc,CACnD,qBAAqB,EACrB,uEAAqC,CACtC,CAAC;AACK,IAAM,6BAA6B,GAAG,+DAAc,CACzD,qBAAqB,EACrB,6EAA2C,CAC5C,CAAC;AACK,IAAM,8BAA8B,GAAG,+DAAc,CAC1D,qBAAqB,EACrB,8EAA4C,CAC7C,CAAC;AACK,IAAM,6BAA6B,GAAG,+DAAc,CACzD,qBAAqB,EACrB,6EAA2C,CAC5C,CAAC;AAEK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,qBAAqB,EACrB,qEAAmC,CACpC,CAAC;AACK,IAAM,2BAA2B,GAAG,+DAAc,CACvD,qBAAqB,EACrB,2EAAyC,CAC1C,CAAC;AACK,IAAM,4BAA4B,GAAG,+DAAc,CACxD,qBAAqB,EACrB,4EAA0C,CAC3C,CAAC;AACK,IAAM,2BAA2B,GAAG,+DAAc,CACvD,qBAAqB,EACrB,2EAAyC,CAC1C,CAAC;;;;;;;;;;;;;ACpFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;GAOG;;AAEwC;AAEoB;AACb;AACJ;AAO9C;IAAoC,wEAAG;IADvC;QAAA,qEA2IC;QAzIC,iBAAiB;QACV,YAAM,GAAQ,EAAE,CAAC;QACxB,MAAM;QACE,YAAM,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;;IAsIrC,CAAC;IApIC;;;;;OAKG;IACI,oCAAW,GAAlB,UAAmB,MAAwB;QACzC,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE;YACzD,MAAM,EAAE,OAAO;SAChB,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACI,qCAAY,GAAnB,UAAoB,MAAwB;QAC1C,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE;YACzD,MAAM,EAAE,OAAO;SAChB,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,sCAAa,GAAb,UAAc,MAA0B;QACtC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE;SACtC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CACrB,IAAI,CAAC,MAAM,GAAG,0BAA0B,GAAG,MAAM,CAAC,SAAS,EAC3D,WAAW,CACZ,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mCAAU,GAAV,UAAW,KAAK;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAED;;;;;OAKG;IACH,sCAAa,GAAb,UAAc,KAAK;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,MAAM,GAAG,0BAA0B,GAAG,KAAK,CAAC,SAAS,EAC1D,KAAK,CACN,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,sCAAa,GAAb,UAAc,KAAkB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,0BAA0B,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED;;;;;OAKG;IAEH,0CAAiB,GAAjB,UAAkB,MAAM;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,GAAG,6BAA6B,GAAG,MAAM,CAAC,SAAS,EAC9D,MAAM,CACP,CAAC;IACJ,CAAC;IAED,uBAAuB;IAChB,yCAAgB,GAAvB,UAAwB,MAAM;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,IAAG,kCAAgC,MAAQ,EACvD,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,0CAAiB,GAAjB,UAAkB,KAAK;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAED;;;;;OAKG;IACI,qCAAY,GAAnB,UAAoB,MAAM;QACxB,IAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,OAAO,CAAC,YAAY,GAAG,aAAa,CAAC;QACrC,IAAI,MAAM,EAAE;YACV,OAAO,CAAC,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;YAClC,KAAK,IAAM,CAAC,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,EAAE;oBACL,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnD;aACF;SACF;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,8BAA8B,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAzIU,cAAc;QAD1B,gEAAU,EAAE;OACA,cAAc,CA0I1B;IAAD,qBAAC;CAAA,CA1ImC,sDAAG,GA0ItC;AA1I0B","file":"default~catalog-catalog-module~components-product-product-module.js","sourcesContent":["/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as store from '../../../app.state.interface';\r\nimport * as catalogLayoutActions from './action/layout.action';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n\r\nimport { ProductModel, CategoryModel } from './models';\r\n\r\nimport {\r\n  /* Active Product Count */\r\n  getActiveProductCount,\r\n  getActiveProductCountLoading,\r\n  getActiveProductCountLoaded,\r\n  /* In Active Product Count */\r\n  getInActiveProductCount,\r\n  getInActiveProductCountLoading,\r\n  getInActiveProductCountLoaded,\r\n  /* Product Count */\r\n  getTotalProductCount,\r\n  getTotalProductCountLoading,\r\n  getTotalProductCountLoaded,\r\n  /* Catagory Count */\r\n  getTotalCategoryCount,\r\n  getTotalCategoryCountLoading,\r\n  getTotalCategoryCountLoaded\r\n} from './reducer/selectors';\r\n\r\n@Injectable()\r\nexport class LayoutsSandbox {\r\n  public totalProductCount$ = this.appState.select(getTotalProductCount);\r\n  public totalProductCountLoading$ = this.appState.select(\r\n    getTotalProductCountLoading\r\n  );\r\n  public totalProductCountLoaded$ = this.appState.select(\r\n    getTotalProductCountLoaded\r\n  );\r\n\r\n  public activeProductCount$ = this.appState.select(getActiveProductCount);\r\n  public activeProductCountLoading$ = this.appState.select(\r\n    getActiveProductCountLoading\r\n  );\r\n  public activeProductCountLoaded$ = this.appState.select(\r\n    getActiveProductCountLoaded\r\n  );\r\n\r\n  public inActiveProductCount$ = this.appState.select(getInActiveProductCount);\r\n  public inActiveProductCountLoading$ = this.appState.select(\r\n    getInActiveProductCountLoading\r\n  );\r\n  public inActiveProductCountLoaded$ = this.appState.select(\r\n    getInActiveProductCountLoaded\r\n  );\r\n\r\n  public totalCatagoryCount$ = this.appState.select(getTotalCategoryCount);\r\n  public totalCatagoryCountLoading$ = this.appState.select(\r\n    getTotalCategoryCountLoading\r\n  );\r\n  public totalCatagoryCountLoaded$ = this.appState.select(\r\n    getTotalCategoryCountLoaded\r\n  );\r\n\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    protected appState: Store<store.AppState>,\r\n    private router: Router,\r\n    private toastr: ToastrManager\r\n  ) {\r\n    this.registerAuthEvents();\r\n  }\r\n\r\n  public getProductListCount(params: any = {}) {\r\n    this.appState.dispatch(\r\n      new catalogLayoutActions.GetTotalProductCountAction(\r\n        new ProductModel(params)\r\n      )\r\n    );\r\n  }\r\n\r\n  public getActiveProductListCount(params: any = {}) {\r\n    this.appState.dispatch(\r\n      new catalogLayoutActions.GetActiveProductCountAction(\r\n        new ProductModel(params)\r\n      )\r\n    );\r\n  }\r\n\r\n  public getInActiveProductListCount(params: any = {}) {\r\n    this.appState.dispatch(\r\n      new catalogLayoutActions.GetInActiveProductCountAction(\r\n        new ProductModel(params)\r\n      )\r\n    );\r\n  }\r\n\r\n  public getCatagoryListCount(params: any = {}) {\r\n    this.appState.dispatch(\r\n      new catalogLayoutActions.GetTotalCatagoryCountAction(\r\n        new CategoryModel(params)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Registers events\r\n   */\r\n  private registerAuthEvents(): void {}\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class CategoryModel {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public sortOrder: string;\r\n  public count: boolean;\r\n\r\n  constructor(categorylistForm: any) {\r\n    this.limit = categorylistForm.limit || '';\r\n    this.offset = categorylistForm.offset || '';\r\n    this.keyword = categorylistForm.keyword || '';\r\n    this.sortOrder = categorylistForm.sortOrder || '';\r\n    this.count = categorylistForm.count || false;\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport * from './product.model';\r\nexport * from './category.model';\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport class ProductModel {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public sku: string;\r\n  public status: string;\r\n  public price: number;\r\n  public count: boolean;\r\n\r\n  constructor(params: any) {\r\n    this.limit = params.limit || 0;\r\n    this.offset = params.offset || 0;\r\n    this.keyword = params.keyword || '';\r\n    this.sku = params.sku || '';\r\n    this.status = params.status || '';\r\n    this.price = params.price || '';\r\n    this.count = params.count || false;\r\n  }\r\n}\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { AppState } from '../../../../app.state.interface';\r\nimport { createSelector } from 'reselect';\r\nimport * as fromDashboard from './layout.reducer';\r\n\r\n// *************************** PUBLIC API's ****************************\r\n/**\r\n * Auth store functions\r\n */\r\nexport const getCatalogLayoutState = (state: AppState) => state.catalogLayout;\r\nexport const getTotalProductCount = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalProductCount\r\n);\r\nexport const getTotalProductCountLoaded = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalProductCountLoaded\r\n);\r\nexport const getTotalProductCountLoading = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalProductCountLoading\r\n);\r\nexport const getTotalProductCountFailed = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalProductCountFailed\r\n);\r\n\r\nexport const getActiveProductCount = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getActiveProductCount\r\n);\r\nexport const getActiveProductCountLoaded = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getActiveProductCountLoaded\r\n);\r\nexport const getActiveProductCountLoading = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getActiveProductCountLoading\r\n);\r\nexport const getActiveProductCountFailed = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getActiveProductCountFailed\r\n);\r\n\r\nexport const getInActiveProductCount = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getInActiveProductCount\r\n);\r\nexport const getInActiveProductCountLoaded = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getInActiveProductCountLoaded\r\n);\r\nexport const getInActiveProductCountLoading = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getInActiveProductCountLoading\r\n);\r\nexport const getInActiveProductCountFailed = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getInActiveProductCountFailed\r\n);\r\n\r\nexport const getTotalCategoryCount = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalCategoryCount\r\n);\r\nexport const getTotalCategoryCountLoaded = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalCategoryCountLoaded\r\n);\r\nexport const getTotalCategoryCountLoading = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalCategoryCountLoading\r\n);\r\nexport const getTotalCategoryCountFailed = createSelector(\r\n  getCatalogLayoutState,\r\n  fromDashboard.getTotalCategoryCountFailed\r\n);\r\n","/*\r\n * SpurtCommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 PICCOSOFT\r\n * Author piccosoft <support@spurtcommerce.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Api } from '../../providers/api/api';\r\n// model\r\nimport { ProductListModel } from './product-model/Product-list.model';\r\nimport { ProductDeleteModel } from './product-model/product-delete.model';\r\nimport { DetailModel } from './product-model/detail.model';\r\n\r\n@Injectable()\r\nexport class ProductService extends Api {\r\n  // for get method\r\n  public params: any = {};\r\n  // url\r\n  private basUrl = this.getBaseUrl();\r\n\r\n  /**\r\n   * Handles 'productList' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from RatingReviewListModel\r\n   */\r\n  public productList(params: ProductListModel): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.basUrl + '/product/productlist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles 'productCount' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from RatingReviewListModel\r\n   */\r\n  public productCount(params: ProductListModel): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n    return this.http.get(this.basUrl + '/product/productlist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles 'productDelete' function. Calls delete method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from ProductDeleteModel\r\n   */\r\n  productDelete(params: ProductDeleteModel): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      withCredentials: false,\r\n      body: { productId: params.productId }\r\n    };\r\n\r\n    return this.http.delete(\r\n      this.basUrl + '/product/delete-product/' + params.productId,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'productAdd' function. Calls post method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param param from Model\r\n   */\r\n  productAdd(param) {\r\n    return this.http.post(this.basUrl + '/product/add-product', param);\r\n  }\r\n\r\n  /**\r\n   * Handles 'productDetail' function. Calls post method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param param from Model\r\n   */\r\n  productUpdate(param) {\r\n    return this.http.post(\r\n      this.basUrl + '/product/update-product/' + param.productId,\r\n      param\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'productDetail' function. Calls get method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param param from DetailModel\r\n   */\r\n  productDetail(param: DetailModel) {\r\n    return this.http.get(this.basUrl + '/product/product-detail/' + param.Id);\r\n  }\r\n\r\n  /**\r\n   * Handles 'productTodayDeals' function. Calls put method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from model\r\n   */\r\n\r\n  productTodayDeals(params): Observable<any> {\r\n    return this.http.put(\r\n      this.basUrl + '/product/update-todayDeals/' + params.productId,\r\n      params\r\n    );\r\n  }\r\n\r\n  // getting option value\r\n  public gettingOptionApi(params) {\r\n    return this.http.get(\r\n      this.basUrl + `/option/getting-option-value/${params}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles 'productBulkDelete' function. Calls post method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param param from Model\r\n   */\r\n  productBulkDelete(param) {\r\n    return this.http.post(this.basUrl + '/product/delete-product', param);\r\n  }\r\n\r\n  /**\r\n   * Handles 'ProductExcel' function. Calls put method with specific api address\r\n   * along its param.\r\n   *\r\n   * @param params from model\r\n   */\r\n  public productExcel(params): Observable<any> {\r\n    const reqOpts: any = {};\r\n    reqOpts.responseType = 'arraybuffer';\r\n    if (params) {\r\n      reqOpts.params = new HttpParams();\r\n      for (const k in params) {\r\n        if (k) {\r\n          reqOpts.params = reqOpts.params.set(k, params[k]);\r\n        }\r\n      }\r\n    }\r\n    return this.http.get(this.basUrl + '/product/product-excel-list/', reqOpts);\r\n  }\r\n}\r\n"],"sourceRoot":""}