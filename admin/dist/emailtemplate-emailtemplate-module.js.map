{"version":3,"sources":["webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp-effect/emailtemp.effect.ts","webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp-model/emailtemp.model.ts","webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp-model/emailtemplist.model.ts","webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp-reducer/emailtemp.selector.ts","webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp.sandbox.ts","webpack:///./src/core/admin/settings/localizations/emailtemplate/emailtemp.service.ts","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/add/add.component.html","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/add/add.component.ts","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/emailtemplate.module.ts","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/emailtemplate.routing.ts","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/list/list.component.html","webpack:///./src/theme/default/admin/settings/components/localizations/emailtemplate/list/list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;GAOG;AACwC;AACa;AAElB;AACU;AACK;AACW;AACR;AAIxD;IACE,yBAAoB,OAAgB,EAAU,OAAyB;QAAvE,iBAA2E;QAAvD,YAAO,GAAP,OAAO,CAAS;QAAU,YAAO,GAAP,OAAO,CAAkB;QAEvE,iBAAiB;QAEjB,oBAAe,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACrD,4DAAM,CAAC,8EAAmB,CAAC,wBAAwB,CAAC,EACpD,0DAAG,CAAC,UAAC,MAAoC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC7D,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAC1C,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,8FAAmC,CAAC,IAAI,CAAC,CAAC,EAA/C,CAA+C,CAAC,EAClE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,2FAAgC,CAAC,KAAK,CAAC,CAAC,EAA/C,CAA+C,CAAC,CACrE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAEF,uBAAkB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACxD,4DAAM,CAAC,8EAAmB,CAAC,2BAA2B,CAAC,EACvD,0DAAG,CAAC,UAAC,MAAuC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAChE,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAC7C,gEAAS,CAAC,cAAI;gBACZ,OAAO,CAAC,IAAI,iGAAsC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,EACF,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,8FAAmC,CAAC,KAAK,CAAC,CAAC,EAAlD,CAAkD,CAAC,CACxE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAEF,kBAAkB;QAElB,sBAAiB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACvD,4DAAM,CAAC,8EAAmB,CAAC,0BAA0B,CAAC,EACtD,0DAAG,CAAC,UAAC,MAAqC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC9D,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAC3C,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,+FAAoC,CAAC,IAAI,CAAC,CAAC,EAAhD,CAAgD,CAAC,EACnE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,4FAAiC,CAAC,KAAK,CAAC,CAAC,EAAhD,CAAgD,CAAC,CACtE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,wBAAwB;QAExB,2BAAsB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CAC5D,4DAAM,CAAC,8EAAmB,CAAC,2BAA2B,CAAC,EACvD,0DAAG,CAAC,UAAC,MAA2C,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EACpE,gEAAS,CAAC,eAAK;YACb,OAAO,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CACjD,gEAAS,CAAC,cAAI,IAAI;gBAChB,IAAI,qGAA0C,CAAC,IAAI,CAAC;aACrD,EAFiB,CAEjB,CAAC,EACF,0EAAU,CAAC,eAAK;gBACd,sDAAE,CAAC,IAAI,kGAAuC,CAAC,KAAK,CAAC,CAAC;YAAtD,CAAsD,CACvD,CACF,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QACF,oBAAoB;QAEpB,uBAAkB,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACxD,4DAAM,CAAC,8EAAmB,CAAC,oBAAoB,CAAC,EAChD,0DAAG,CAAC,UAAC,MAAuC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAChE,gEAAS,CAAC,eAAK;YACb,IAAM,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;YAE9C,OAAO,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,IAAI,CAC9D,gEAAS,CAAC,cAAI,IAAI,QAAC,IAAI,iGAAsC,CAAC,IAAI,CAAC,CAAC,EAAlD,CAAkD,CAAC,EACrE,0EAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,IAAI,8FAAmC,CAAC,KAAK,CAAC,CAAC,EAAlD,CAAkD,CAAC,CACxE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IArEwE,CAAC;IAI3E;QADC,4DAAM,EAAE;wEACQ,+CAAU;4DASzB;IAEF;QADC,4DAAM,EAAE;wEACW,+CAAU;+DAW5B;IAIF;QADC,4DAAM,EAAE;wEACU,+CAAU;8DAS3B;IAGF;QADC,4DAAM,EAAE;wEACe,+CAAU;mEAahC;IAGF;QADC,4DAAM,EAAE;wEACW,+CAAU;+DAW5B;IAtES,eAAe;QAD3B,gEAAU,EAAE;+EAEkB,qDAAO,EAAmB,mEAAgB;OAD5D,eAAe,CAuE3B;IAAD,sBAAC;CAAA;AAvE2B;;;;;;;;;;;;;ACnB5B;AAAA;AAAA;;;;;;;GAOG;AACH;IAOE,uBAAY,aAAkB;QAC5B,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC;QACxC,IAAI,aAAa,IAAI,aAAa,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,EAAE,GAAG,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;;;;;;;GAOG;AACH;IAME,2BAAY,iBAAsB;QAChC,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,IAAI,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,OAAO,IAAI,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAI,EAAE,CAAC;IAC7C,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC8B;AAExE,wEAAwE;AACxE;;GAEG;AACI,IAAM,iBAAiB,GAAG,UAAC,KAAe,IAAK,YAAK,CAAC,SAAS,EAAf,CAAe,CAAC;AAC/D,IAAM,eAAe,GAAG,+DAAc,CAC3C,iBAAiB,EACjB,qFAA8B,CAC/B,CAAC;AACK,IAAM,sBAAsB,GAAG,+DAAc,CAClD,iBAAiB,EACjB,0FAAmC,CACpC,CAAC;AACK,IAAM,eAAe,GAAG,+DAAc,CAC3C,iBAAiB,EACjB,oFAA6B,CAC9B,CAAC;AACK,IAAM,kBAAkB,GAAG,+DAAc,CAC9C,iBAAiB,EACjB,uFAAgC,CACjC,CAAC;AACK,IAAM,kBAAkB,GAAG,+DAAc,CAC9C,iBAAiB,EACjB,uFAAgC,CACjC,CAAC;AAEK,IAAM,oBAAoB,GAAG,+DAAc,CAChD,iBAAiB,EACjB,4FAAqC,CACtC,CAAC;AACK,IAAM,mBAAmB,GAAG,+DAAc,CAC/C,iBAAiB,EACjB,2FAAoC,CACrC,CAAC;AACK,IAAM,mBAAmB,GAAG,+DAAc,CAC/C,iBAAiB,EACjB,2FAAoC,CACrC,CAAC;AAEK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,iBAAiB,EACjB,6FAAsC,CACvC,CAAC;AACK,IAAM,oBAAoB,GAAG,+DAAc,CAChD,iBAAiB,EACjB,4FAAqC,CACtC,CAAC;AACK,IAAM,oBAAoB,GAAG,+DAAc,CAChD,iBAAiB,EACjB,4FAAqC,CACtC,CAAC;AAEK,IAAM,mBAAmB,GAAG,+DAAc,CAC/C,iBAAiB,EACjB,2FAAoC,CACrC,CAAC;AACK,IAAM,kBAAkB,GAAG,+DAAc,CAC9C,iBAAiB,EACjB,0FAAmC,CACpC,CAAC;AACK,IAAM,kBAAkB,GAAG,+DAAc,CAC9C,iBAAiB,EACjB,0FAAmC,CACpC,CAAC;AAEK,IAAM,sBAAsB,GAAG,+DAAc,CAClD,iBAAiB,EACjB,8FAAuC,CACxC,CAAC;AACK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,iBAAiB,EACjB,6FAAsC,CACvC,CAAC;AACK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,iBAAiB,EACjB,6FAAsC,CACvC,CAAC;AAEK,IAAM,sBAAsB,GAAG,+DAAc,CAClD,iBAAiB,EACjB,8FAAuC,CACxC,CAAC;AACK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,iBAAiB,EACjB,6FAAsC,CACvC,CAAC;AACK,IAAM,qBAAqB,GAAG,+DAAc,CACjD,iBAAiB,EACjB,6FAAsC,CACvC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACrGF;;;;;;;GAOG;AACwC;AACP;AACqB;AAC8B;AAG9C;AAsBO;AACkB;AACQ;AAG1E;IAyBE,0BACY,QAA+B,EACjC,MAAc,EACd,MAAqB;QAFnB,aAAQ,GAAR,QAAQ,CAAuB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QA3BxB,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,qFAAe,CAAC,CAAC;QAC1D,4BAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4FAAsB,CAAC,CAAC;QACvE,qBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,qFAAe,CAAC,CAAC;QACzD,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wFAAkB,CAAC,CAAC;QAC/D,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wFAAkB,CAAC,CAAC;QAE/D,0BAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0FAAoB,CAAC,CAAC;QACnE,yBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yFAAmB,CAAC,CAAC;QACjE,yBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yFAAmB,CAAC,CAAC;QACjE,4BAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4FAAsB,CAAC,CAAC;QACvE,2BAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2FAAqB,CAAC,CAAC;QACrE,2BAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2FAAqB,CAAC,CAAC;QACrE,2BAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2FAAqB,CAAC,CAAC;QACrE,0BAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0FAAoB,CAAC,CAAC;QACnE,0BAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,0FAAoB,CAAC,CAAC;QACnE,yBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,yFAAmB,CAAC,CAAC;QACjE,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wFAAkB,CAAC,CAAC;QAC/D,wBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,wFAAkB,CAAC,CAAC;QAC/D,4BAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,4FAAsB,CAAC,CAAC;QACvE,2BAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2FAAqB,CAAC,CAAC;QACrE,2BAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,2FAAqB,CAAC,CAAC;QAEpE,kBAAa,GAAwB,EAAE,CAAC;QAO9C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEM,uCAAY,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,qGAAqC,CAAC,IAAI,8EAAa,CAAC,KAAK,CAAC,CAAC,CACpE,CAAC;IACJ,CAAC;IAEM,0CAAe,GAAtB,UAAuB,KAAK;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,wGAAwC,CAAC,IAAI,8EAAa,CAAC,KAAK,CAAC,CAAC,CACvE,CAAC;IACJ,CAAC;IAEM,2CAAgB,GAAvB,UAAwB,KAAU;QAChC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,sGAAsC,CAAC,IAAI,sFAAiB,CAAC,KAAK,CAAC,CAAC,CACzE,CAAC;IACJ,CAAC;IAEM,0CAAe,GAAtB,UAAuB,KAAK;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,wGAAwC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEM,8CAAmB,GAA1B,UAA2B,KAAK;QAC9B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,4GAA4C,CAC9C,IAAI,sFAAiB,CAAC,KAAK,CAAC,CAC7B,CACF,CAAC;IACJ,CAAC;IAED,oCAAS,GAAT;QAAA,iBAsBC;QArBC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,cAAI;YAClC,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;iBACrD;aACF;QACH,CAAC,CAAC,CACH,CAAC;QAEF,sBAAsB;QAEtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,cAAI;YACrC,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;iBACrD;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IArFU,gBAAgB;QAD5B,gEAAU,EAAE;+EA2BW,iDAAK;YACT,sDAAM;YACN,sEAAa;OA5BpB,gBAAgB,CAsF5B;IAAD,uBAAC;CAAA;AAtF4B;;;;;;;;;;;;;;;;;;;ACzC7B;;;;;;;GAOG;AACwC;AAIM;AAGjD;IAAsC,0EAAG;IADzC;QAAA,qEA2DC;QAxDS,SAAG,GAAW,KAAI,CAAC,UAAU,EAAE,CAAC;;IAwD1C,CAAC;IAtDC,uBAAuB;IACvB,+CAAoB,GAApB,UAAqB,IAAI;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,+CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,gBAAgB;IAChB,uCAAY,GAAZ,UAAa,KAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,GAAG,GAAG,oCAAoC,EAC/C,KAAK,CACN,CAAC;IACJ,CAAC;IAED,oBAAoB;IAEpB,0CAAe,GAAf,UAAgB,MAAM;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,GAAG,GAAG,wCAAwC,GAAG,MAAM,CAAC,EAAE,EAC/D,MAAM,CACP,CAAC;IACJ,CAAC;IAED,iBAAiB;IAEV,wCAAa,GAApB,UAAqB,MAAyB;QAC5C,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,oCAAoC,EAAE;YACpE,MAAM,EAAE,OAAO;SAChB,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IAChB,8CAAmB,GAA1B,UAA2B,MAAyB;QAClD,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,MAAM,CAAC;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,oCAAoC,EAAE;YACpE,MAAM,EAAE,OAAO;SAChB,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;IACV,0CAAe,GAAtB,UAAuB,KAAU,EAAE,EAAU;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CACrB,IAAI,CAAC,GAAG,GAAG,wCAAwC,GAAG,EAAE,EACxD,KAAK,CACN,CAAC;IACJ,CAAC;IAzDU,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CA0D5B;IAAD,uBAAC;CAAA,CA1DqC,sDAAG,GA0DxC;AA1D4B;;;;;;;;;;;;ACf7B,0EAA0E,8DAA8D,qgBAAqgB,4CAA4C,sjBAAsjB,8CAA8C,0iBAA0iB,8CAA8C,qrBAAqrB,6CAA6C,m4B;;;;;;;;;;;;;;;;;;;;;ACAvlF;;;;;;;GAOG;AAC+C;AAO1B;AACiC;AACoE;AACA;AAU7H;IAcE,+BACS,EAAe,EACd,KAAqB,EACtB,OAAyB,EACxB,MAAc,EACf,OAAyB;QAJzB,OAAE,GAAF,EAAE,CAAa;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAkB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAkB;QAT1B,sBAAiB,GAAQ,EAAE,CAAC;QAE7B,cAAS,GAAG,KAAK,CAAC;IAQtB,CAAC;IAGJ,sBAAI,oCAAC;QADL,aAAa;aACb;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACrC,CAAC;;;OAAA;IAED,8DAA8D;IAC9D,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,4CAAY,GAAZ,UAAa,MAA2B;QACtC,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,EAAE;YACxC,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;YACtE,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;IACH,CAAC;IAED,gDAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,YAAY;IACZ,wCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;IAChB,+CAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACH,wCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC9B,OAAO;SACR;QACD,IAAM,IAAI,GAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC;QAE9C,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAED,sCAAsC;IACtC,iDAAiB,GAAjB;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,CAAC;QACjE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YACtC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBAChE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAC3C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAChC,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAC7C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAC7C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAC5C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CACnC,CAAC;aACH;SACF;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IA/GU,qBAAqB;QARjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,6JAAiC;;SAKlC,CAAC;+EAgBa,0DAAW;YACP,8DAAc;YACb,mHAAgB;YAChB,sDAAM;YACN,mHAAgB;OAnBvB,qBAAqB,CAgHjC;IAAD,4BAAC;CAAA;AAhHiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BlC;;;;;;;GAOG;AACsC;AACM;AAC4B;AACT;AAClE,aAAa;AAC+C;AACG;AAC/D,gBAAgB;AAC8B;AAC4E;AACA;AACe;AACzI,iBAAiB;AACoD;AACrE,gBAAgB;AACwD;AAC1B;AAmB9C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAhB/B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,wEAAqB,EAAE,2EAAsB,CAAC;YAC7D,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;gBACnB,0DAAW;gBACX,kEAAmB;gBACnB,wEAAc;gBACd,kFAA0B;gBAC1B,2DAAa,CAAC,OAAO,CAAC,CAAC,mIAAe,CAAC,CAAC;gBACxC,4DAAc;aACf;YACD,SAAS,EAAE,CAAC,mHAAgB,EAAE,mHAAgB,CAAC;YAC/C,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,EAAE;SACpB,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;AC3ChC;;;;;;;GAOG;AACsC;AACc;AACQ;AACH;AAE5D,YAAY;AAEZ,IAAM,eAAe,GAAW;IAC9B,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2EAAsB,EAAE;IACnD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,wEAAqB,EAAE;IACjD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,wEAAqB;KACjC;CACF,CAAC;AAMF;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QAJtC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACjD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;;;;AC7BvC,itBAAitB,iFAAiF,iBAAiB,mCAAmC,mBAAmB,yiBAAyiB,kSAAkS,4KAA4K,s0BAAs0B,uV;;;;;;;;;;;;;;;;;;;;ACAtqF;;;;;;;GAOG;AAC+C;AAET;AACoF;AACA;AAU7H;IAQE,gCACU,MAAc,EACf,OAAyB,EACzB,OAAyB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAkB;QACzB,YAAO,GAAP,OAAO,CAAkB;QAT3B,aAAQ,GAAQ,EAAE,CAAC;QACnB,UAAK,GAAG,CAAC,CAAC;QACT,YAAO,GAAG,EAAE,CAAC;QAEb,oBAAe,GAAG,IAAI,CAAC;QAO7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,0DAA0D;IAC1D,yCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;YAClD,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;YACtC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,mBAAmB;IACnB,6CAAY,GAAZ,UAAa,MAA2B;QACtC,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,EAAE;YACxC,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAI,MAAM,CAAC,OAAO,KAAK,iBAAiB,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;YACtE,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;IACH,CAAC;IAED;;;;OAIG;IACH,iDAAgB,GAAhB,UAAiB,MAAkB,EAAE,QAAQ;QAA5B,mCAAkB;QACjC,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,sCAAsC;IACtC,gDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAsC;IACtC,8CAAa,GAAb,UAAc,IAAI;QAChB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,gCAAgC;YAChC,IAAI,CAAC,eAAe;SACrB,CAAC,CAAC;IACL,CAAC;IAED,qCAAqC;IACrC,gDAAe,GAAf,UAAgB,eAAe,EAAE,SAAS;QACxC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,oCAAoC;IACpC,mDAAkB,GAAlB;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,iBAAO;YAChD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,6CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAzFU,sBAAsB;QARlC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,gKAAkC;;SAKnC,CAAC;+EAUkB,sDAAM;YACN,mHAAgB;YAChB,mHAAgB;OAXvB,sBAAsB,CA0FlC;IAAD,6BAAC;CAAA;AA1FkC","file":"emailtemplate-emailtemplate-module.js","sourcesContent":["/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport * as actions from '../emailtemp-action/emailtemp.action';\r\nimport { EmailTempService } from '../emailtemp.service';\r\nimport { EmailTempListResponseModel } from '../emailtemp-model/emailtemplist.response.model';\r\n\r\n@Injectable()\r\nexport class EmailTempEffect {\r\n  constructor(private action$: Actions, private service: EmailTempService) {}\r\n\r\n  // NEW EMAIL_TEMP\r\n  @Effect()\r\n  doAddEmailTemp$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_NEW_EMAIL_TEMP_ACTION),\r\n    map((action: actions.DoNewEmailTempAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.addEmailtemp(state).pipe(\r\n        switchMap(role => [new actions.DoNewEmailTempSuccessAction(role)]),\r\n        catchError(error => of(new actions.DoNewEmailTempFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  @Effect()\r\n  doUpdateEmailTemp$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_UPDATE_EMAIL_TEMP_ACTION),\r\n    map((action: actions.DoUpdateEmailTempAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.updateEmailTemp(state).pipe(\r\n        switchMap(user => {\r\n          return [new actions.DoUpdateEmailTempSuccessAction(user)];\r\n        }),\r\n        catchError(error => of(new actions.DoUpdateEmailTempFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  // EMAIL TEMP LIST\r\n  @Effect()\r\n  doemailtemplists$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_EMAIL_TEMP_LIST_ACTION),\r\n    map((action: actions.DoEmailTemplistAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.emailtemplist(state).pipe(\r\n        switchMap(user => [new actions.DoEmailTemplistSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoEmailTemplistFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n  // PAGINATION EMAIL_TEMP\r\n  @Effect()\r\n  doemailtemppagination$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.GET_EMAIL_TEMP_COUNT_ACTION),\r\n    map((action: actions.DoEmailTempPaginationAction) => action.payload),\r\n    switchMap(state => {\r\n      return this.service.emailtempPagiantion(state).pipe(\r\n        switchMap(user => [\r\n          new actions.DoEmailTempPaginationSuccessAction(user)\r\n        ]),\r\n        catchError(error =>\r\n          of(new actions.DoEmailTempPaginationFailAction(error))\r\n        )\r\n      );\r\n    })\r\n  );\r\n  // EMAIL_TEMP DELETE\r\n  @Effect()\r\n  doEmailtempDelete$: Observable<Action> = this.action$.pipe(\r\n    ofType(actions.ActionTypes.DO_EMAIL_TEMP_DELETE),\r\n    map((action: actions.DoEmailTempDeleteAction) => action.payload),\r\n    switchMap(state => {\r\n      const emailTemplateId = state.emailTemplateId;\r\n\r\n      return this.service.deleteEmailtemp(state, emailTemplateId).pipe(\r\n        switchMap(user => [new actions.DoEmailTempDeleteSuccessAction(user)]),\r\n        catchError(error => of(new actions.DoEmailTempDeleteFailAction(error)))\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class EmailTempForm {\r\n  public title: String;\r\n  public subject: string;\r\n  public content: String;\r\n  public status: number;\r\n  public Id: number;\r\n\r\n  constructor(emailtempForm: any) {\r\n    this.title = emailtempForm.title || '';\r\n    this.subject = emailtempForm.subject || '';\r\n    this.content = emailtempForm.content || '';\r\n    this.status = emailtempForm.status || 0;\r\n    if (emailtempForm && emailtempForm.id) {\r\n      this.Id = emailtempForm.id || 0;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class EmailTempListForm {\r\n  public limit: number;\r\n  public offset: number;\r\n  public keyword: string;\r\n  public count: number;\r\n\r\n  constructor(emailtemplistForm: any) {\r\n    this.limit = emailtemplistForm.limit || '';\r\n    this.offset = emailtemplistForm.offset || '';\r\n    this.keyword = emailtemplistForm.keyword || '';\r\n    this.count = emailtemplistForm.count || '';\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { AppState } from '../../../../../app.state.interface';\r\nimport { createSelector } from 'reselect';\r\nimport * as fromEmailTemp from '../emailtemp-reducer/emailtemp.reducer';\r\n\r\n// *************************** PUBLIC API's ****************************\r\n/**\r\n * Auth store functions\r\n */\r\nexport const getEmailTempState = (state: AppState) => state.emailtemp;\r\nexport const getemailtemplst = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getemailtemplist\r\n);\r\nexport const getemailtemppagination = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getemailtempagination\r\n);\r\nexport const getaddemailtemp = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getAddEmailTemp\r\n);\r\nexport const getupdateemailtemp = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getupdateemailtemp\r\n);\r\nexport const getdeleteemailtemp = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getdeleteemailtemp\r\n);\r\n\r\nexport const EmailTempListLoading = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempListLoading\r\n);\r\nexport const EmailTempListLoaded = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempListLoaded\r\n);\r\nexport const EmailTempListFailed = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempListFailed\r\n);\r\n\r\nexport const EmailTempCountLoading = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempCountLoading\r\n);\r\nexport const EmailTempCountLoaded = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempCountLoaded\r\n);\r\nexport const EmailTempCountFailed = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempCountFailed\r\n);\r\n\r\nexport const EmailTempAddLoading = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempAddLoading\r\n);\r\nexport const EmailTempAddLoaded = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempAddLoaded\r\n);\r\nexport const EmailTempAddFailed = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempAddFailed\r\n);\r\n\r\nexport const EmailTempDeleteLoading = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempDeleteLoading\r\n);\r\nexport const EmailTempDeleteLoaded = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempDeleteLoaded\r\n);\r\nexport const EmailTempDeleteFailed = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempDeleteFailed\r\n);\r\n\r\nexport const EmailTempUpdateLoading = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempUpdateLoading\r\n);\r\nexport const EmailTempUpdateLoaded = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempUpdateLoaded\r\n);\r\nexport const EmailTempUpdateFailed = createSelector(\r\n  getEmailTempState,\r\n  fromEmailTemp.getEmailTempUpdateFailed\r\n);\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport * as emailtempActions from '../emailtemplate/emailtemp-action/emailtemp.action';\r\nimport { Subscription } from 'rxjs/index';\r\nimport * as store from '../../../../app.state.interface';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  EmailTempAddFailed,\r\n  EmailTempAddLoaded,\r\n  EmailTempAddLoading,\r\n  EmailTempCountFailed,\r\n  EmailTempCountLoaded,\r\n  EmailTempCountLoading,\r\n  EmailTempDeleteFailed,\r\n  EmailTempDeleteLoaded,\r\n  EmailTempDeleteLoading,\r\n  EmailTempListFailed,\r\n  EmailTempListLoaded,\r\n  EmailTempListLoading,\r\n  EmailTempUpdateFailed,\r\n  EmailTempUpdateLoaded,\r\n  EmailTempUpdateLoading,\r\n  getaddemailtemp,\r\n  getdeleteemailtemp,\r\n  getemailtemplst,\r\n  getemailtemppagination,\r\n  getupdateemailtemp\r\n} from './emailtemp-reducer/emailtemp.selector';\r\nimport { EmailTempForm } from './emailtemp-model/emailtemp.model';\r\nimport { EmailTempListForm } from './emailtemp-model/emailtemplist.model';\r\n\r\n@Injectable()\r\nexport class EmailTempSandbox {\r\n  public getemailtemplist$ = this.appState.select(getemailtemplst);\r\n  public getemailtemppagelength$ = this.appState.select(getemailtemppagination);\r\n  public getaddemailtemp$ = this.appState.select(getaddemailtemp);\r\n  public getupdateemailtemp$ = this.appState.select(getupdateemailtemp);\r\n  public getdeleteemailtemp$ = this.appState.select(getdeleteemailtemp);\r\n\r\n  public emailTempListLoading$ = this.appState.select(EmailTempListLoading);\r\n  public emailTempListLoaded$ = this.appState.select(EmailTempListLoaded);\r\n  public emailTempListFailed$ = this.appState.select(EmailTempListFailed);\r\n  public emailTempDeleteLoading$ = this.appState.select(EmailTempDeleteLoading);\r\n  public emailTempDeleteLoaded$ = this.appState.select(EmailTempDeleteLoaded);\r\n  public emailTempDeleteFailed$ = this.appState.select(EmailTempDeleteFailed);\r\n  public emailTempCountLoading$ = this.appState.select(EmailTempCountLoading);\r\n  public emailTempCountLoaded$ = this.appState.select(EmailTempCountLoaded);\r\n  public emailTempCountFailed$ = this.appState.select(EmailTempCountFailed);\r\n  public emailTempAddLoading$ = this.appState.select(EmailTempAddLoading);\r\n  public emailTempAddLoaded$ = this.appState.select(EmailTempAddLoaded);\r\n  public emailTempAddFailed$ = this.appState.select(EmailTempAddFailed);\r\n  public emailTempUpdateLoading$ = this.appState.select(EmailTempUpdateLoading);\r\n  public emailTempUpdateLoaded$ = this.appState.select(EmailTempUpdateLoaded);\r\n  public emailTempUpdateFailed$ = this.appState.select(EmailTempUpdateFailed);\r\n\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    protected appState: Store<store.AppState>,\r\n    private router: Router,\r\n    private toastr: ToastrManager\r\n  ) {\r\n    this.subscribe();\r\n  }\r\n\r\n  public addEmailtemp(value) {\r\n    this.appState.dispatch(\r\n      new emailtempActions.DoNewEmailTempAction(new EmailTempForm(value))\r\n    );\r\n  }\r\n\r\n  public updateemailtemp(value) {\r\n    this.appState.dispatch(\r\n      new emailtempActions.DoUpdateEmailTempAction(new EmailTempForm(value))\r\n    );\r\n  }\r\n\r\n  public getemailtemplist(value: any) {\r\n    this.appState.dispatch(\r\n      new emailtempActions.DoEmailTemplistAction(new EmailTempListForm(value))\r\n    );\r\n  }\r\n\r\n  public emailtempDelete(value) {\r\n    this.appState.dispatch(new emailtempActions.DoEmailTempDeleteAction(value));\r\n  }\r\n\r\n  public emailtemppagination(value) {\r\n    this.appState.dispatch(\r\n      new emailtempActions.DoEmailTempPaginationAction(\r\n        new EmailTempListForm(value)\r\n      )\r\n    );\r\n  }\r\n\r\n  subscribe() {\r\n    this.subscriptions.push(\r\n      this.getaddemailtemp$.subscribe(data => {\r\n        if (data) {\r\n          if (data.message) {\r\n            this.router.navigate(['/settings/local/emailtemp']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    // getupdateemailtemp$\r\n\r\n    this.subscriptions.push(\r\n      this.getupdateemailtemp$.subscribe(data => {\r\n        if (data) {\r\n          if (data.message && data.status === 1) {\r\n            this.router.navigate(['/settings/local/emailtemp']);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailTempListForm } from './emailtemp-model/emailtemplist.model';\r\nimport { EmailTempForm } from './emailtemp-model/emailtemp.model';\r\nimport { Api } from '../../../providers/api/api';\r\n\r\n@Injectable()\r\nexport class EmailTempService extends Api {\r\n  public emailtemplistdata: any;\r\n  private url: string = this.getBaseUrl();\r\n\r\n  // setemailtemplistdata\r\n  setemailtemplistdata(data) {\r\n    this.emailtemplistdata = data;\r\n  }\r\n\r\n  getemailtemplistdata() {\r\n    return this.emailtemplistdata;\r\n  }\r\n\r\n  // new emailtemp\r\n  addEmailtemp(param: EmailTempForm): Observable<any> {\r\n    return this.http.post(\r\n      this.url + '/email-template/add-email-template',\r\n      param\r\n    );\r\n  }\r\n\r\n  // Email temp update\r\n\r\n  updateEmailTemp(params): Observable<any> {\r\n    return this.http.put(\r\n      this.url + '/email-template/update-email-template/' + params.Id,\r\n      params\r\n    );\r\n  }\r\n\r\n  // emailtemp list\r\n\r\n  public emailtemplist(params: EmailTempListForm): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n\r\n    return this.http.get(this.url + '/email-template/email-templatelist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  // emailtemp pagination\r\n  public emailtempPagiantion(params: EmailTempListForm): Observable<any> {\r\n    let reqOpts: any = {};\r\n    reqOpts = params;\r\n\r\n    return this.http.get(this.url + '/email-template/email-templatelist', {\r\n      params: reqOpts\r\n    });\r\n  }\r\n\r\n  // delete emptemp\r\n  public deleteEmailtemp(param: any, Id: number): Observable<any> {\r\n    return this.http.delete(\r\n      this.url + '/email-template/delete-email-template/' + Id,\r\n      param\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"flex setting2-inner-header\\\">\\r\\n    <h3>{{updatetitle ? 'Update Email Template' : 'Add Email Template'}}</h3>\\r\\n</div>\\r\\n<div class=\\\"settings-right-wrapper addnewuser\\\">\\r\\n\\r\\n    <div class=\\\"new-user\\\">\\r\\n        <form (ngSubmit)=\\\"onSubmit(emailtempForm.value)\\\" [formGroup]=\\\"emailtempForm\\\" class=\\\"form-horizontal m-t-20\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Title<sup>*</sup></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"title\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" class=\\\"form-control\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Subject<sup>*</sup></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"subject\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.subject.errors }\\\" class=\\\"form-control\\\">\\r\\n                        <div *ngIf=\\\"submitted && f.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.subject.errors.required\\\">Subject is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Content<sup>*</sup></label>\\r\\n                        <ckeditor formControlName=\\\"content\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.content.errors }\\\"></ckeditor>\\r\\n                        <div *ngIf=\\\"submitted && f.content.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.content.errors.required\\\">Content is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"control-label\\\">Status\\r\\n                            <sup>*</sup></label>\\r\\n                        <select class=\\\"form-control custom-select\\\" formControlName=\\\"status\\\" data-placeholder=\\\"Choose Role\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\" placeholder=\\\"status\\\">\\r\\n                            <option value=\\\"1\\\">Enabled</option>\\r\\n                            <option value=\\\"0\\\">Disabled</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && f.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.status.errors.required\\\">Status is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"flex user-btn\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-add\\\">Save</button>\\r\\n                        <button (click)=\\\"emailtempcancel()\\\" class=\\\"btn btn-cancel\\\">Cancel</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Validators,\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EmailTempSandbox } from '../../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.sandbox';\r\nimport { EmailTempService } from '../../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.service';\r\n\r\n@Component({\r\n  selector: 'app-spurt-addemail',\r\n  templateUrl: 'add.component.html',\r\n  styles: [`\r\n  .settings-right-wrapper {\r\n    margin-top: 0px !important;\r\n}`]\r\n})\r\nexport class EmailTempAddComponent implements OnInit {\r\n  // FormGroup Variable\r\n  public emailtempForm: FormGroup;\r\n  public title: FormControl;\r\n  public subject: FormControl;\r\n  public content: FormControl;\r\n  public status: FormControl;\r\n  // Variable\r\n  public updatetitle: number;\r\n  private EditEmailTempId: string;\r\n  private editemailtempinfo: any = [];\r\n  public price: string;\r\n  public submitted = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public sandbox: EmailTempSandbox,\r\n    private router: Router,\r\n    public service: EmailTempService\r\n  ) {}\r\n\r\n  // VALIDATION\r\n  get f() {\r\n    return this.emailtempForm.controls;\r\n  }\r\n\r\n  // initially calls initForm,setDefaultValues,editEmailtempList\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.EditEmailTempId = this.route.snapshot.paramMap.get('id');\r\n    this.setDefaultValues();\r\n    this.editEmailtempList();\r\n  }\r\n\r\n  beforeChange($event: NgbPanelChangeEvent) {\r\n    if ($event.panelId === 'preventchange-2') {\r\n      $event.preventDefault();\r\n    }\r\n\r\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\r\n      $event.preventDefault();\r\n    }\r\n  }\r\n\r\n  setDefaultValues() {\r\n    this.emailtempForm.patchValue({ postalcode: 'Yes', tc: true });\r\n  }\r\n\r\n  // FormGroup\r\n  initForm() {\r\n    this.emailtempForm = this.fb.group({\r\n      title: [null, [Validators.required]],\r\n      subject: [null, [Validators.required]],\r\n      content: [null, [Validators.required]],\r\n      status: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  // Cancle Action\r\n  emailtempcancel() {\r\n    this.router.navigate(['/settings/local/emailtemp']);\r\n  }\r\n\r\n  /**\r\n   * Handles form 'submit' event. Calls sandbox EmailtempAdd  and EmailtempUpdate function if form is valid.\r\n   *\r\n   * @param emailtempForm entire form value\r\n   * @param para storing entire value\r\n   */\r\n  onSubmit(data) {\r\n    this.submitted = true;\r\n    if (this.emailtempForm.invalid) {\r\n      return;\r\n    }\r\n    const para: any = {};\r\n    para.title = this.emailtempForm.value.title;\r\n    para.subject = this.emailtempForm.value.subject;\r\n    para.content = this.emailtempForm.value.content;\r\n    para.status = this.emailtempForm.value.status;\r\n\r\n    if (this.editemailtempinfo && this.editemailtempinfo[0]) {\r\n      para.id = this.editemailtempinfo[0].emailTemplateId;\r\n      this.sandbox.updateemailtemp(para);\r\n    } else {\r\n      this.sandbox.addEmailtemp(para);\r\n    }\r\n  }\r\n\r\n  // Edit EmailTemp Bind All FormControl\r\n  editEmailtempList() {\r\n    this.editemailtempinfo.push(this.service.getemailtemplistdata());\r\n    if (this.editemailtempinfo[0] !== null) {\r\n      if (this.editemailtempinfo[0] && this.editemailtempinfo[0].title) {\r\n        this.updatetitle = 1;\r\n        this.emailtempForm.controls['title'].setValue(\r\n          this.editemailtempinfo[0].title\r\n        );\r\n        this.emailtempForm.controls['subject'].setValue(\r\n          this.editemailtempinfo[0].subject\r\n        );\r\n        this.emailtempForm.controls['content'].setValue(\r\n          this.editemailtempinfo[0].content\r\n        );\r\n        this.emailtempForm.controls['status'].setValue(\r\n          this.editemailtempinfo[0].isActive\r\n        );\r\n      }\r\n    } else {\r\n      this.emailtempForm = null;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultCommonModule } from '../../../../../default.common.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// components\r\nimport { EmailTempAddComponent } from './add/add.component';\r\nimport { EmailTempListComponent } from './list/list.component';\r\n// Store Actions\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { EmailTempService } from '../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.service';\r\nimport { EmailTempSandbox } from '../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.sandbox';\r\nimport { EmailTempEffect } from '../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp-effect/emailtemp.effect';\r\n// Routing Module\r\nimport { EmailTemplateRoutingModule } from './emailtemplate.routing';\r\n// Shared Module\r\nimport { MaterialModule } from '../../../../../default.material.module';\r\nimport { CKEditorModule } from 'ng2-ckeditor';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [EmailTempAddComponent, EmailTempListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DefaultCommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    EmailTemplateRoutingModule,\r\n    EffectsModule.forRoot([EmailTempEffect]),\r\n    CKEditorModule\r\n  ],\r\n  providers: [EmailTempService, EmailTempSandbox],\r\n  bootstrap: [],\r\n  entryComponents: []\r\n})\r\nexport class EmailTemplateModule {}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmailTempListComponent } from './list/list.component';\r\nimport { EmailTempAddComponent } from './add/add.component';\r\n\r\n// Component\r\n\r\nconst emailtempRoutes: Routes = [\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n  { path: 'list', component: EmailTempListComponent },\r\n  { path: 'add', component: EmailTempAddComponent },\r\n  {\r\n    path: 'edit/:id',\r\n    component: EmailTempAddComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(emailtempRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailTemplateRoutingModule {}\r\n","module.exports = \"<div class=\\\"flex setting2-inner-header\\\">\\r\\n    <h3>Email Template</h3>\\r\\n</div>\\r\\n<div class=\\\"settings-right-wrapper\\\">\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Title</th>\\r\\n                    <th scope=\\\"col\\\">Subject</th>\\r\\n                    <th scope=\\\"col\\\">Content</th>\\r\\n                    <th scope=\\\"col\\\">Status</th>\\r\\n                    <th scope=\\\"col\\\">Action</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let emailtemp of sandbox.getemailtemplist$ | async; let i=index\\\">\\r\\n                    <td class=\\\"text-center\\\" scope=\\\"row\\\">{{emailtemp.title}}</td>\\r\\n                    <td>{{emailtemp.subject}}</td>\\r\\n                    <td [innerHtml]='emailtemp.content'></td>\\r\\n                    <td>\\r\\n\\r\\n                        <div *ngIf=\\\"emailtemp.isActive == 1\\\">Enabled</div>\\r\\n                        <div *ngIf=\\\"emailtemp.isActive == 0\\\">Disabled</div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <i (click)=\\\"editEmailtemp(emailtemp)\\\" class=\\\"fas fa-edit\\\"></i>\\r\\n\\r\\n                        <i [ngbPopover]=\\\"deleteContent\\\" placement=\\\"bottom\\\" #deletePop=\\\"ngbPopover\\\" style=\\\"margin-left: 15px;\\\" class=\\\"fas fa-trash\\\">\\r\\n                        <ng-template #deleteContent>\\r\\n                            <div class=\\\"style\\\">\\r\\n                                <div class=\\\"modal-header\\\">\\r\\n                                    <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\"\\r\\n                                            data-dismiss=\\\"modal\\\">No\\r\\n                                    </button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                                            (click)=\\\"deleteEmailtemp(emailtemp.emailTemplateId, deletePop)\\\"\\r\\n                                            data-dismiss=\\\"modal\\\">Yes\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n\\r\\n                    </i>\\r\\n                        <!--<i (click)=\\\"deleteEmailtemp(emailtemp.emailTemplateId)\\\" style=\\\"margin-left: 15px;\\\" class=\\\"fas fa-trash\\\"></i>-->\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<mat-paginator [length]=\\\"sandbox.getemailtemppagelength$ | async\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" (page)=\\\"onPageChange($event)\\\">\\r\\n</mat-paginator>\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { EmailTempSandbox } from '../../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.sandbox';\r\nimport { EmailTempService } from '../../../../../../../../core/admin/settings/localizations/emailtemplate/emailtemp.service';\r\n\r\n@Component({\r\n  selector: 'app-spurt-listemailtemp',\r\n  templateUrl: 'list.component.html',\r\n  styles: [`\r\n  .settings-right-wrapper {\r\n    margin-top: 0px !important;\r\n}`]\r\n})\r\nexport class EmailTempListComponent implements OnInit {\r\n  public popoverContent: any;\r\n  public pageSize: any = 10;\r\n  public index = 0;\r\n  private keyword = '';\r\n  private offset: number;\r\n  private pagenationcount = true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public sandbox: EmailTempSandbox,\r\n    public service: EmailTempService\r\n  ) {\r\n    this.regSubscribeEvents();\r\n  }\r\n\r\n  // initially calls getemailtempList with argument (offset)\r\n  ngOnInit() {\r\n    this.pageSize = localStorage.getItem('itemsPerPage')\r\n      ? localStorage.getItem('itemsPerPage')\r\n      : this.pageSize;\r\n    this.getemailtempList(this.offset, this.pageSize);\r\n  }\r\n\r\n  // STYLING PUROPOSE\r\n  beforeChange($event: NgbPanelChangeEvent) {\r\n    if ($event.panelId === 'preventchange-2') {\r\n      $event.preventDefault();\r\n    }\r\n\r\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\r\n      $event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles form 'list' event. Calls sandbox EmailTemp list function .\r\n   *\r\n   * @param params storing entire value\r\n   */\r\n  getemailtempList(offset: number = 0, pageSize) {\r\n    const params: any = {};\r\n    params.limit = pageSize;\r\n    params.offset = offset;\r\n    params.keyword = this.keyword;\r\n    this.sandbox.getemailtemplist(params);\r\n    if (this.pagenationcount) {\r\n      params.count = 'true';\r\n      this.sandbox.emailtemppagination(params);\r\n    }\r\n  }\r\n\r\n  // Add Email Temp navigate to Add Form\r\n  addNewEmailTemp() {\r\n    this.service.setemailtemplistdata('');\r\n    this.router.navigate(['/settings/local/emailtemp/add']);\r\n  }\r\n\r\n  // Edit EmailTemp navigate to Add Form\r\n  editEmailtemp(list) {\r\n    this.service.setemailtemplistdata(list);\r\n    this.router.navigate([\r\n      '/settings/local/emailtemp/edit',\r\n      list.emailTemplateId\r\n    ]);\r\n  }\r\n\r\n  // Delete EmailTemp using emailtempId\r\n  deleteEmailtemp(emailTemplateId, deletePop) {\r\n    event.stopPropagation();\r\n    this.popoverContent = deletePop;\r\n    this.sandbox.emailtempDelete({ emailTemplateId: emailTemplateId });\r\n  }\r\n\r\n  // Delete After subscribe the Result\r\n  regSubscribeEvents() {\r\n    this.sandbox.getdeleteemailtemp$.subscribe(_delete => {\r\n      if (_delete && _delete.status === 1) {\r\n        this.getemailtempList(this.offset, this.pageSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Pagination Count\r\n  onPageChange(event: any) {\r\n    this.pageSize = event.pageSize;\r\n    this.index = event.pageIndex;\r\n    this.offset = event.pageSize * event.pageIndex;\r\n    this.getemailtempList(this.offset, this.pageSize);\r\n  }\r\n}\r\n"],"sourceRoot":""}