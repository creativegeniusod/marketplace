{"version":3,"sources":["webpack:///./src/theme/default/admin/settings/components/localizations/zone/add/add.component.html","webpack:///./src/theme/default/admin/settings/components/localizations/zone/add/add.component.ts","webpack:///./src/theme/default/admin/settings/components/localizations/zone/list/list.component.html","webpack:///./src/theme/default/admin/settings/components/localizations/zone/list/list.component.ts","webpack:///./src/theme/default/admin/settings/components/localizations/zone/zone.module.ts","webpack:///./src/theme/default/admin/settings/components/localizations/zone/zone.routing.ts"],"names":[],"mappings":"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","file":"zone-zone-module.js","sourcesContent":["module.exports = \"<div class=\\\"flex setting2-inner-header\\\">\\n    <h3 style=\\\"color:#FF006A\\\">{{updatetitle ? 'Update Zone' : 'Add Zone'}}</h3>\\n</div>\\n<div class=\\\"settings-right-wrapper addnewuser\\\">\\n\\n    <div class=\\\"new-user\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"zoneForm\\\" class=\\\"form-horizontal m-t-20\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Zone Name<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"text\\\" formControlName=\\\"zonename\\\" placeholder=\\\"Zone Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.zonename.errors }\\\" class=\\\"form-control\\\" />\\n                        <div *ngIf=\\\"submitted && f.zonename.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.zonename.errors.required\\\">Zone Name is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Zone Code<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"text\\\" formControlName=\\\"zonecode\\\" placeholder=\\\"Zone Code\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.zonecode.errors }\\\" class=\\\"form-control\\\" class=\\\"form-control\\\">\\n                        <div *ngIf=\\\"submitted && f.zonecode.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.zonecode.errors.required\\\">Zone Code is required</div>\\n                            <div *ngIf=\\\"f.zonecode.errors\\\">ZoneCode must be at max 30 characters</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Country<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <div class=\\\"dd-items-container\\\">\\n                            <ngx-select-dropdown (change)=\\\"selectionChanged($event)\\\" formControlName=\\\"country\\\" (mouseover)=\\\"onHover($event) \\\" (mouseout)=\\\"onHover($event) \\\" [config]=\\\"config\\\" [options]=\\\"countrysandbox.getcountries$ | async\\\" [multiple]=\\\"false\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.country.errors }\\\"></ngx-select-dropdown>\\n                        </div>\\n                        <div style=\\\"color: #f62d51;font-size: 80%\\\" *ngIf=\\\"countryvalid\\\">Country is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Status<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <select class=\\\"form-control custom-select\\\" formControlName=\\\"status\\\" data-placeholder=\\\"Choose Role\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\" placeholder=\\\"status\\\">\\n                            <option value=''>- -Select Status- -</option>\\n                            <option value=1>Enabled</option>\\n                            <option value=0>Disabled</option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && f.status.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.status.errors.required\\\">Status is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12\\\" style=\\\"margin-top: 90px;\\\">\\n                    <div class=\\\"flex user-btn\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-add\\\">Save</button>\\n                        <button (click)=\\\"zonecancel()\\\" class=\\\"btn btn-cancel\\\"> Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  FormBuilder\n} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ZoneSandbox } from '../../../../../../../../core/admin/settings/localizations/zone/zone.sandbox';\nimport { ZoneService } from '../../../../../../../../core/admin/settings/localizations/zone/zone.service';\nimport { CountrySandbox } from '../../../../../../../../core/admin/settings/localizations/country/country.sandbox';\nconst CSS_CLASS_NAMES = {\n  highLight: 'dd-highlight-item'\n};\n@Component({\n  selector: 'app-settings-zone-add',\n  templateUrl: './add.component.html',\n  styles: [`\n  .settings-right-wrapper {\n    margin-top: 0px !important;\n}`]\n})\nexport class ZoneAddComponent implements OnInit {\n  // Variable\n  public config: any = { displayKey: 'name', value: 'countryId', search: true };\n  public submitted = false;\n  private countryId: any;\n  public pageSize = 5;\n  private keyword = '';\n  private offset: any;\n  private valid: boolean;\n  private editzoneinfo: any = [];\n  private pagenationcount = 1;\n  public countryvalid: any;\n  public updatetitle: any;\n  private EditZoneId: any;\n  public countryList: any = [];\n\n  // FormGroup Variable\n  public zoneForm: FormGroup;\n  public zonename: FormControl;\n  public zonecode: FormControl;\n  public country: FormControl;\n  public status: FormControl;\n\n  constructor(\n    public fb: FormBuilder,\n    private route: ActivatedRoute,\n    public sandbox: ZoneSandbox,\n    public countrysandbox: CountrySandbox,\n    private router: Router,\n    public service: ZoneService\n  ) {}\n\n  // VALIDATION\n  get f() {\n    return this.zoneForm.controls;\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  /**initially calls  getCountryListwith arguments(offset,keyword)\n   * initForm,editZoneList\n   *\n   * */\n  ngOnInit() {\n    this.country = null;\n    this.getCountryList(this.offset, this.keyword);\n    this.initForm();\n    this.EditZoneId = this.route.snapshot.paramMap.get('id');\n    this.editZoneList();\n    this.subscribe();\n  }\n\n  // subscribe\n\n  subscribe() {\n    this.countrysandbox.getcountries$.subscribe(data => {\n      this.countryList = data;\n    });\n  }\n  // reactive form\n  initForm() {\n    this.zoneForm = this.fb.group({\n      zonename: [null, [Validators.required]],\n      zonecode: [null, [Validators.required, Validators.maxLength(30)]],\n      country: [null, [Validators.required]],\n      status: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Handles form 'submit' event. Calls sandbox Zone updateZone and addNewZone function if form is valid.\n   *\n   * @param countryForm entire form value\n   * @param para storing entire value\n   */\n  onSubmit() {\n    this.submitted = true;\n    if (this.zoneForm.invalid) {\n      if (this.countryId) {\n        this.countryvalid = false;\n      } else {\n        this.countryvalid = true;\n      }\n      return;\n    }\n    if (\n      this.zoneForm.value.zonename !== '' &&\n      this.zoneForm.value.zonecode !== ''\n    ) {\n      const para: any = {};\n      para.zonename = this.zoneForm.value.zonename;\n      para.zonecode = this.zoneForm.value.zonecode;\n      para.country = this.zoneForm.value.country.countryId;\n      para.status = this.zoneForm.value.status;\n      if (this.editzoneinfo && this.editzoneinfo[0].zoneId) {\n        para.zoneId = this.editzoneinfo[0].zoneId;\n        this.sandbox.updateZone(para);\n      } else {\n        this.sandbox.addNewZone(para);\n      }\n    } else {\n      this.valid = true;\n    }\n  }\n\n  // Cancle Navigate to  Zone List page\n  zonecancel() {\n    this.router.navigate(['/settings/local/zone']);\n  }\n\n  // EditZone Bind Formcontrols values\n  editZoneList() {\n    this.editzoneinfo.push(this.service.getzonelistdata());\n    if (this.editzoneinfo[0] !== null) {\n      if (this.editzoneinfo[0] && this.editzoneinfo[0].name) {\n        this.updatetitle = 1;\n        this.zoneForm.controls['zonename'].setValue(this.editzoneinfo[0].name);\n        this.zoneForm.controls['zonecode'].setValue(this.editzoneinfo[0].code);\n        this.zoneForm.controls['country'].setValue(\n          this.editzoneinfo[0].country\n        );\n        this.zoneForm.controls['status'].setValue(\n          this.editzoneinfo[0].isActive\n        );\n        //\n      }\n    } else {\n      this.zoneForm = null;\n    }\n  }\n\n  /**\n   * Handles form 'dropdown list' event. Calls sandbox Country getcountrieslist and getCountryCount function if form is valid.\n   *\n   * @param params storing entire value\n   */\n  getCountryList(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = '';\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.countrysandbox.getcountrieslist(params);\n    if (this.pagenationcount) {\n      params.count = 'true';\n      this.countrysandbox.getCountryCount(params);\n    }\n  }\n\n  // DropDown list  changes event\n  selectionChanged(event) {\n    this.countryId = event.value.countryId;\n    if (this.countryId) {\n      this.countryvalid = false;\n    }\n  }\n\n  // mouseOver event\n  onHover(event) {\n    const target = event.target as HTMLElement;\n    if (event.type === 'mouseover') {\n      target.classList.add(CSS_CLASS_NAMES.highLight);\n    } else {\n      target.classList.remove(CSS_CLASS_NAMES.highLight);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"flex setting2-inner-header\\\">\\n    <h3>Zone List</h3>\\n    <button (click)=\\\" AddeNewZone()\\\" class=\\\"btn\\\"><img\\n            src=\\\"assets/img/add-white-ico.png\\\">Add Zone</button>\\n</div>\\n<div class=\\\"settings-right-wrapper\\\">\\n\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Country</th>\\n                    <th scope=\\\"col\\\">Zone Name</th>\\n                    <th scope=\\\"col\\\">Zone Code</th>\\n                    <th scope=\\\"col\\\">Status</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let zonelist of zoneSandbox.getzoneslist$ | async; let i=index\\\">\\n                    <td class=\\\"text-center\\\" scope=\\\"row\\\">{{zonelist.country.name}}</td>\\n                    <td>{{zonelist.name}}</td>\\n                    <td>{{zonelist.code}}</td>\\n                    <td>\\n                        <div *ngIf=\\\"zonelist.isActive === 1\\\">Active</div>\\n                        <div *ngIf=\\\"zonelist.isActive === 0\\\">In-Active</div>\\n                    </td>\\n                    <td><i (click)=\\\"editzone(zonelist)\\\" class=\\\"fas fa-edit\\\"></i> <i [ngbPopover]=\\\"deleteContent\\\" placement=\\\"bottom\\\" #deletePop=\\\"ngbPopover\\\" style=\\\"margin-left: 15px;\\\" class=\\\"fas fa-trash\\\"></i>\\n                        <ng-template #deleteContent>\\n                            <div class=\\\"style\\\">\\n                                <div class=\\\"modal-header\\\">\\n                                    <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\n\\n                                </div>\\n\\n                                <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close();\\\" data-dismiss=\\\"modal\\\">No\\n                                </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteZone(zonelist.zoneId, deletePop)\\\" data-dismiss=\\\"modal\\\">Yes\\n                                </button>\\n                                </div>\\n                            </div>\\n                        </ng-template>\\n                    </td>\\n                </tr>\\n\\n            </tbody>\\n        </table>\\n\\n    </div>\\n    <mat-paginator [length]=\\\"zoneSandbox.getzonepagelength$ | async\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"[pageSize]\\\" (page)=\\\"onPageChange($event)\\\">\\n    </mat-paginator>\\n</div>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { ZoneService } from '../../../../../../../../core/admin/settings/localizations/zone/zone.service';\nimport { ZoneSandbox } from '../../../../../../../../core/admin/settings/localizations/zone/zone.sandbox';\n\n@Component({\n  selector: 'app-settings-zone-list',\n  templateUrl: './list.component.html',\n  styles: [`\n  .settings-right-wrapper {\n    margin-top: 0px !important;\n}`]\n})\nexport class ZoneListComponent implements OnInit {\n  // STYLING PUROPOSE\n\n  public pageSize = '5';\n  private keyword = '';\n  private offset: any;\n  private isCount: boolean;\n  public currentPage: any;\n  public index: any;\n  private popoverContent: any;\n\n  constructor(\n    private router: Router,\n    public zoneSandbox: ZoneSandbox,\n    public service: ZoneService\n  ) {\n    this.regSubscribeEvents();\n  }\n\n  // initially calls getZonesList with argument( offset)\n  ngOnInit() {\n    this.pageSize = localStorage.getItem('itemsPerPage')\n      ? localStorage.getItem('itemsPerPage')\n      : this.pageSize;\n    this.isCount = true;\n    this.getZonesList(this.offset);\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  /**\n   * Handles  'getZonesList' event. Calls sandbox getZoneList  and getzonepagination function .\n   *\n   * @param offset from material paginator\n   * @param params storing pagination value\n   */\n  getZonesList(offset: number = 0) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.zoneSandbox.getZoneList(params);\n    if (this.isCount) {\n      params.count = true;\n      this.zoneSandbox.getzonepagination(params);\n    }\n  }\n\n  // navigate to add component\n  AddeNewZone() {\n    this.service.setzonelistdata('');\n    this.router.navigate(['/settings/local/zone/add']);\n  }\n\n  // calls service setzonelistdata with argument (list).And navigate to edit component.\n  editzone(list) {\n    this.service.setzonelistdata(list);\n    this.router.navigate(['/settings/local/zone/edit', list.zoneId]);\n  }\n\n  // calls getZonesList with argument(offset)for pagination\n  onPageChange(event: any) {\n    this.currentPage = event.offset;\n    this.pageSize = event.pageSize;\n    this.index = event.pageIndex;\n    this.offset = event.pageSize * event.pageIndex;\n    this.getZonesList(this.offset);\n  }\n\n  /**  calls zoneSandbox zoneDelete with argument (zoneId)\n   * calls stopPropagation function\n   * */\n  deleteZone(zoneId, deletePop) {\n    event.stopPropagation();\n    this.popoverContent = deletePop;\n    this.zoneSandbox.zoneDelete({ zoneId: zoneId });\n  }\n\n  /**  calls zoneSandbox  deleteZone$ if success reponse gotted then\n   * calls getZonesList function with argument(offset).\n   * */\n  regSubscribeEvents() {\n    this.zoneSandbox.deleteZone$.subscribe(_delete => {\n      if (_delete && _delete.status === 1) {\n        this.getZonesList(this.offset);\n      }\n    });\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultCommonModule } from '../../../../../default.common.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// components\nimport { ZoneAddComponent } from './add/add.component';\nimport { ZoneListComponent } from './list/list.component';\n\n// Routing Module\nimport { ZoneRoutingModule } from './zone.routing';\n\n// Shared Module\nimport { MaterialModule } from '../../../../../default.material.module';\n\n@NgModule({\n  declarations: [ZoneAddComponent, ZoneListComponent],\n  imports: [\n    CommonModule,\n    DefaultCommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ZoneRoutingModule\n  ],\n  providers: [],\n  bootstrap: [],\n  entryComponents: []\n})\nexport class ZoneModule {}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport {NgModule} from '@angular/core';\nimport {\n    RouterModule,\n    Routes\n} from '@angular/router';\n\n// Component\nimport {ZoneAddComponent} from './add/add.component';\nimport {ZoneListComponent} from './list/list.component';\n\nconst zoneRoutes: Routes = [\n    {path: '', redirectTo: 'list', pathMatch: 'full'},\n    {path: 'list', component: ZoneListComponent},\n    {path: 'add', component: ZoneAddComponent},\n    {\n        path: 'edit/:id',\n        component: ZoneAddComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(zoneRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ZoneRoutingModule {\n}\n"],"sourceRoot":""}