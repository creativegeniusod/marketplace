{"version":3,"sources":["webpack:///./src/core/admin/settings/generalsetting/generalsetting-effect/generalsetting.effect.ts","webpack:///./src/core/admin/settings/generalsetting/generalsetting-model/generalsetting.model.ts","webpack:///./src/core/admin/settings/generalsetting/generalsetting-reducer/generalsetting.selector.ts","webpack:///./src/core/admin/settings/generalsetting/generalsetting.sandbox.ts","webpack:///./src/core/admin/settings/generalsetting/generalsetting.service.ts","webpack:///./src/theme/default/admin/settings/components/generalsettings/generalsettings.module.ts","webpack:///./src/theme/default/admin/settings/components/generalsettings/generalsettings.routing.ts","webpack:///./src/theme/default/admin/settings/components/generalsettings/generalsettings/generalsettings.component.css","webpack:///./src/theme/default/admin/settings/components/generalsettings/generalsettings/generalsettings.component.html","webpack:///./src/theme/default/admin/settings/components/generalsettings/generalsettings/generalsettings.component.ts"],"names":[],"mappings":"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","file":"components-generalsettings-generalsettings-module.js","sourcesContent":["/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport * as actions from '../generalsetting-action/generalsetting.action';\nimport { GeneralSettingService } from '../generalsetting.service';\nimport { Store } from '@ngrx/store';\nimport * as store from '../../../../app.state.interface';\nimport * as layoutAction from '../../../layout/actions/layout.action';\n\n@Injectable()\nexport class GeneralSettingEffect {\n  constructor(\n    private action$: Actions,\n    protected appState$: Store<store.AppState>,\n    private service: GeneralSettingService\n  ) {}\n\n  // NEW USER\n  @Effect()\n  doAddUser$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_NEW_GENERAL_SETTINGS),\n    map((action: actions.DoNewGeneralSettingAction) => action.payload),\n    switchMap(state => {\n      return this.service.createGeneralSetting(state).pipe(\n        switchMap(user => [new actions.DoNewGeneralSettingSuccessAction(user)]),\n        tap(val => {\n          this.appState$.dispatch(new layoutAction.GetSettings());\n        }),\n        catchError(error =>\n          of(new actions.DoNewGeneralSettingFailAction(error))\n        )\n      );\n    })\n  );\n\n  // GET GENERAL SETTINGS\n  @Effect()\n  dogetGeneralsetting$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_GET_GENERAL_SETTINGS),\n    map((action: actions.DoGetGeneralSettingAction) => action.payload),\n    switchMap(() => {\n      return this.service.getGeneralSetting().pipe(\n        switchMap(user => {\n          return [new actions.DoGetGeneralSettingSuccessAction(user)];\n        }),\n        catchError(error => of(new actions.DoGetGeneralSettingFailAction()))\n      );\n    })\n  );\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nexport class GeneralSettingForm {\n  public storeName: string;\n  public storeOwner: string;\n  public storeAddress: string;\n  public storeEmail: string;\n  public storeTelephone: string;\n  public countryId: number;\n  public zoneId: number;\n  public storeLogo: string;\n  public maintenanceMode: number;\n\n  constructor(generalsettingForm: any) {\n    this.storeName = generalsettingForm.storename || '';\n    this.storeOwner = generalsettingForm.storeowner || '';\n    this.storeAddress = generalsettingForm.address || '';\n    this.storeEmail = generalsettingForm.email || '';\n    this.storeTelephone = generalsettingForm.phonenumber || '';\n    this.countryId = generalsettingForm.country || 0;\n    this.zoneId = generalsettingForm.zone || 0;\n    this.maintenanceMode = generalsettingForm.maintenanceMode || 0;\n    if (generalsettingForm.image) {\n      this.storeLogo = generalsettingForm.image || '';\n    }\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { AppState } from '../../../../app.state.interface';\nimport { createSelector } from 'reselect';\nimport * as fromGenralsetting from './generalsetting.reducer';\n\nexport const getGeneralSettingState = (state: AppState) => state.generalsetting;\nexport const getNewGeneralSettings = createSelector(\n  getGeneralSettingState,\n  fromGenralsetting.getNewGeneralsettings\n);\nexport const getGeneralSettings = createSelector(\n  getGeneralSettingState,\n  fromGenralsetting.getGeneralsettings\n);\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as generalsetting from '../generalsetting/generalsetting-action/generalsetting.action';\nimport * as store from '../../../app.state.interface';\nimport {\n  getGeneralSettings,\n  getNewGeneralSettings\n} from './generalsetting-reducer/generalsetting.selector';\nimport { GeneralSettingForm } from './generalsetting-model/generalsetting.model';\n\n@Injectable()\nexport class GeneralSettingSandbox {\n  public getNewGeneralSettings$ = this.appState.select(getNewGeneralSettings);\n  public getGeneralSettings$ = this.appState.select(getGeneralSettings);\n\n  constructor(protected appState: Store<store.AppState>) {\n    this.subscribedata();\n  }\n\n  // Create General Setting\n  public createGeneralSetting(value) {\n    this.appState.dispatch(\n      new generalsetting.DoNewGeneralSettingAction(\n        new GeneralSettingForm(value)\n      )\n    );\n  }\n\n  // Get General Setting\n  public getGeneralSetting() {\n    this.appState.dispatch(new generalsetting.DoGetGeneralSettingAction());\n  }\n\n  subscribedata() {\n    this.getNewGeneralSettings$.subscribe(data => {\n      if (data && data.status === 1) {\n        this.getGeneralSetting();\n      }\n    });\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Api } from '../../providers/api/api';\nimport { GeneralSettingForm } from './generalsetting-model/generalsetting.model';\n\n@Injectable()\nexport class GeneralSettingService extends Api {\n  private url = this.getBaseUrl();\n\n  // Create General Setting\n  createGeneralSetting(param: GeneralSettingForm): Observable<any> {\n    return this.http.post(this.url + '/settings/create-settings', param);\n  }\n\n  // Get General Setting\n\n  getGeneralSetting() {\n    return this.http.get(this.url + '/settings/get-settings');\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultCommonModule } from '../../../../default.common.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Store Actions\nimport { EffectsModule } from '@ngrx/effects';\nimport { GeneralSettingEffect } from '../../../../../../core/admin/settings/generalsetting/generalsetting-effect/generalsetting.effect';\n// Component\nimport { GeneralSettingComponent } from './generalsettings/generalsettings.component';\n\n// Routing Module\nimport { GenaeralSettingsRoutingModule } from './generalsettings.routing';\n\n// Shared Module\nimport { MaterialModule } from '../../../../default.material.module';\n// Service And Sandbox\nimport { GeneralSettingSandbox } from '../../../../../../core/admin/settings/generalsetting/generalsetting.sandbox';\nimport { GeneralSettingService } from '../../../../../../core/admin/settings/generalsetting/generalsetting.service';\nimport { CKEditorModule } from 'ng2-ckeditor';\n\n@NgModule({\n  declarations: [GeneralSettingComponent],\n  imports: [\n    CommonModule,\n    DefaultCommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    GenaeralSettingsRoutingModule,\n    EffectsModule.forRoot([GeneralSettingEffect]),\n    CKEditorModule\n  ],\n  providers: [GeneralSettingSandbox, GeneralSettingService],\n  bootstrap: [],\n  entryComponents: []\n})\nexport class GeneralSettingsModule {}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Component\nimport { GeneralSettingComponent } from './generalsettings/generalsettings.component';\n\nconst roleRoutes: Routes = [{ path: '', component: GeneralSettingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(roleRoutes)],\n  exports: [RouterModule]\n})\nexport class GenaeralSettingsRoutingModule {}\n","module.exports = \"mat-radio-button {\\n    padding: 1px 3px;\\n}\\n\\n.settings-right-wrapper {\\n    margin-top: 0px !important;\\n}\\n\\n.setting1-inner-header {\\n    margin-top: 40px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90aGVtZS9kZWZhdWx0L2FkbWluL3NldHRpbmdzL2NvbXBvbmVudHMvZ2VuZXJhbHNldHRpbmdzL2dlbmVyYWxzZXR0aW5ncy9nZW5lcmFsc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsImZpbGUiOiJzcmMvdGhlbWUvZGVmYXVsdC9hZG1pbi9zZXR0aW5ncy9jb21wb25lbnRzL2dlbmVyYWxzZXR0aW5ncy9nZW5lcmFsc2V0dGluZ3MvZ2VuZXJhbHNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAxcHggM3B4O1xufVxuXG4uc2V0dGluZ3MtcmlnaHQtd3JhcHBlciB7XG4gICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5zZXR0aW5nMS1pbm5lci1oZWFkZXIge1xuICAgIG1hcmdpbi10b3A6IDQwcHggIWltcG9ydGFudDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"flex setting1-inner-header\\\">\\n    <h3>Settings > General Settings</h3>\\n\\n</div>\\n<div class=\\\"settings-right-wrapper addnewuser\\\">\\n\\n    <div class=\\\"new-user\\\">\\n        <h3>Store</h3>\\n\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"generalSettings\\\" class=\\\"form-horizontal m-t-20\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Store Name </label>\\n                        <input type=\\\"text\\\" formControlName=\\\"storeName\\\" class=\\\"form-control\\\" />\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Store Owner </label>\\n                        <input type=\\\"text\\\" formControlName=\\\"storeOwner\\\" class=\\\"form-control\\\" />\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Address</label>\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Address\\\"></textarea>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Email</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" />\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Phone Number </label>\\n                        <input type=\\\"text\\\" formControlName=\\\"phonenumber\\\" class=\\\"form-control\\\" />\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-xs-12\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"image-col\\\">\\n                            <div class=\\\"img-dflt\\\">\\n                                <input type=\\\"file\\\" name=\\\"userImg\\\" (change)=\\\"uploadChange($event)\\\" accept=\\\"image/*\\\" #filePath style=\\\"display: none\\\">\\n                                <img [src]=\\\"postImageUrl\\\" width=\\\"13%\\\" height=\\\"13%\\\">\\n                                <p></p>\\n                                <button (click)=\\\"uploadButtonClick()\\\" type=\\\"button\\\">\\n                                    Upload Picture\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Country</label>\\n                        <select class=\\\"form-control custom-select\\\" data-placeholder=\\\"Choose Country\\\" formControlName=\\\"country\\\" placeholder=\\\"Country\\\">\\n                            <option *ngFor=\\\"let country of countrysandbox.getcountries$ | async\\\"\\n                                    value={{country.countryId}}>\\n                                {{country.name}}\\n                            </option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Region / State</label>\\n                        <select class=\\\"form-control custom-select\\\" data-placeholder=\\\"Choose Region\\\" formControlName=\\\"zone\\\" placeholder=\\\"Region\\\">\\n                            <option *ngFor=\\\"let zone of zonesandbox.getzoneslist$ | async\\\"\\n                                    value={{zone.zoneId}}>\\n                                {{zone.name}}\\n                            </option>\\n                        </select>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Maintenance Mode</label>\\n                        <div class=\\\"radio\\\">\\n                            <mat-radio-group formControlName=\\\"maintenanceMode\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\".25rem\\\">\\n                                <mat-radio-button [value]=\\\"'Yes'\\\">Yes</mat-radio-button>\\n                                <mat-radio-button [value]=\\\"'No'\\\">No</mat-radio-button>\\n                            </mat-radio-group>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"flex user-btn\\\">`\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-add\\\">Save</button>\\n                        <button (click)=\\\"generalsettingcancel()\\\" class=\\\"btn btn-cancel\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs/index';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport { CountrySandbox } from '../../../../../../../core/admin/settings/localizations/country/country.sandbox';\nimport { ZoneSandbox } from '../../../../../../../core/admin/settings/localizations/zone/zone.sandbox';\nimport { GeneralSettingSandbox } from '../../../../../../../core/admin/settings/generalsetting/generalsetting.sandbox';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../../../../../core/admin/service/config.service';\n\n@Component({\n  selector: 'app-spurt-genearlsettingsadd',\n  templateUrl: './generalsettings.component.html',\n  styleUrls: ['./generalsettings.component.css']\n})\nexport class GeneralSettingComponent implements OnInit {\n  // Variable\n  @ViewChild('filePath') filePath: ElementRef;\n  public postImageUrl: any;\n  public defaultImageUrl: any;\n  public imageUrl: any;\n  private keyword = '';\n  public pageSize = '10';\n  private offset = 0;\n\n  // Form Group\n  public generalSettings: FormGroup;\n  public storeName: FormControl;\n  public storeOwner: FormControl;\n  public address: FormControl;\n  public email: FormControl;\n  public phonenumber: FormControl;\n  public country: FormControl;\n  public zone: FormControl;\n  public language: FormControl;\n  public currency: FormControl;\n  public maintenanceMode: FormControl;\n  public submitted: any;\n\n  // Language\n\n  constructor(\n    private changeDetectRef: ChangeDetectorRef,\n    private router: Router,\n    public fb: FormBuilder,\n    public countrysandbox: CountrySandbox,\n    public zonesandbox: ZoneSandbox,\n    public generalsettingsandbox: GeneralSettingSandbox,\n    private configService: ConfigService\n  ) {}\n\n  private subscriptions: Array<Subscription> = [];\n\n  // initially calls initForm,dropdownlist,getGeneralSetting\n  ngOnInit() {\n    this.pageSize = localStorage.getItem('itemsPerPage')\n      ? localStorage.getItem('itemsPerPage')\n      : this.pageSize;\n    this.defaultImageUrl = '';\n    this.imageUrl = this.configService.getImageUrl();\n    this.postImageUrl = './assets/upload-banner/upload.png';\n    this.initForm();\n    this.dropdownlist();\n    this.getGeneralSetting();\n  }\n\n  /**\n   * Handles form 'list' event. Calls sandbox GeneralSetting  generalsetting get data function .\n   */\n  getGeneralSetting() {\n    this.generalsettingsandbox.getGeneralSetting();\n  }\n\n  dropdownlist() {\n    this.countrylist(this.offset, this.keyword);\n    this.zonesList(this.offset);\n    this.subscribe();\n  }\n\n  /**\n   * Handles form 'submit' event. Calls sandbox GeneralSetting createGeneralSetting  function if form is valid.\n   *\n   * @param params storing entire value\n   */\n  onSubmit() {\n    this.submitted = true;\n    if (this.generalSettings.invalid) {\n      return;\n    }\n    const params: any = {};\n    params.storename = this.generalSettings.value.storeName;\n    params.storeowner = this.generalSettings.value.storeOwner;\n    params.address = this.generalSettings.value.address;\n    params.email = this.generalSettings.value.email;\n    params.phonenumber = this.generalSettings.value.phonenumber;\n    params.country = this.generalSettings.value.country;\n    params.zone = this.generalSettings.value.zone;\n    if (this.generalSettings.value.maintenanceMode === 'Yes') {\n      params.maintenanceMode = 1;\n    } else {\n      params.maintenanceMode = 0;\n    }\n    if (this.defaultImageUrl) {\n      params.image = this.postImageUrl;\n    }\n    this.generalsettingsandbox.createGeneralSetting(params);\n  }\n\n  // VALIDATION\n  get f() {\n    return this.generalSettings.controls;\n  }\n\n  // Form Group\n  initForm() {\n    this.generalSettings = this.fb.group({\n      storeName: [null],\n      storeOwner: [null],\n      address: [null],\n      email: [null],\n      phonenumber: [null],\n      country: [null],\n      zone: [null],\n      maintenanceMode: [null]\n    });\n  }\n\n  /**\n   * Handles form 'list' event. Calls sandbox country countrylist function .\n   *\n   * @param params storing entire value\n   */\n  countrylist(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.countrysandbox.getcountrieslist(params);\n  }\n\n  /**\n   * Handles form 'list' event. Calls sandbox Zone getZoneList function .\n   *\n   * @param params storing entire value\n   */\n  zonesList(offset: number = 0) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.zonesandbox.getZoneList(params);\n  }\n\n  // Image Upload\n\n  uploadButtonClick() {\n    const el: HTMLElement = this.filePath.nativeElement as HTMLElement;\n    el.click();\n  }\n\n  /**\n   * Handles  'uploadChange' event. calls convertBase64 function\n   *\n   * @param $event .\n   */\n  uploadChange($event): void {\n    this.convertBase64($event.target);\n  }\n\n  /**\n   * Handles  'convertBase64' event. finally store the data in postImageUrl\n   *\n   * @param inputValue .\n   */\n  convertBase64(inputValue: any): void {\n    const file: File = inputValue.files[0];\n    const myReader: FileReader = new FileReader();\n\n    myReader.onloadend = e => {\n      this.postImageUrl = myReader.result;\n      this.defaultImageUrl = myReader.result;\n      this.changeDetectRef.detectChanges();\n    };\n    myReader.readAsDataURL(file);\n  }\n\n  // Subscribe general settings data bind form control values\n  subscribe() {\n    this.subscriptions.push(\n      this.generalsettingsandbox.getGeneralSettings$.subscribe(data => {\n        if (data && data[0]) {\n          this.generalSettings.controls['storeName'].setValue(\n            data[0].storeName\n          );\n          this.generalSettings.controls['storeOwner'].setValue(\n            data[0].storeOwner\n          );\n          this.generalSettings.controls['address'].setValue(\n            data[0].storeAddress\n          );\n          this.generalSettings.controls['country'].setValue(data[0].countryId);\n          this.generalSettings.controls['zone'].setValue(data[0].zoneId);\n          this.generalSettings.controls['email'].setValue(data[0].storeEmail);\n          this.generalSettings.controls['phonenumber'].setValue(\n            data[0].storeTelephone\n          );\n          if (data[0].maintenanceMode === 1) {\n            this.generalSettings.patchValue({\n              maintenanceMode: 'Yes',\n              tc: true\n            });\n          } else if (data[0].maintenanceMode === 0) {\n            this.generalSettings.patchValue({\n              maintenanceMode: 'No',\n              tc: true\n            });\n          }\n          if (data[0].storeLogoPath && data[0].storeLogo) {\n            this.postImageUrl =\n              this.imageUrl + '?path=' +\n              `${data[0].storeLogoPath}` + '&name=' +\n              `${data[0].storeLogo}` +\n              '&width=160&height=150';\n            this.changeDetectRef.detectChanges();\n          }\n        }\n      })\n    );\n  }\n\n  // Cancle Navigate to Dashboard\n  generalsettingcancel() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n"],"sourceRoot":""}