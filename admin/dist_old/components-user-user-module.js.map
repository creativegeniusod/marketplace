{"version":3,"sources":["webpack:///./src/core/admin/settings/user/user-effect/user.effect.ts","webpack:///./src/core/admin/settings/user/user-model/user.model.ts","webpack:///./src/core/admin/settings/user/user-model/userlist.model.ts","webpack:///./src/core/admin/settings/user/user-reducer/user.selector.ts","webpack:///./src/core/admin/settings/user/user.sandbox.ts","webpack:///./src/core/admin/settings/user/user.service.ts","webpack:///./src/theme/default/admin/settings/components/user/add/add.component.html","webpack:///./src/theme/default/admin/settings/components/user/add/add.component.ts","webpack:///./src/theme/default/admin/settings/components/user/list/list.component.html","webpack:///./src/theme/default/admin/settings/components/user/list/list.component.ts","webpack:///./src/theme/default/admin/settings/components/user/user.module.ts","webpack:///./src/theme/default/admin/settings/components/user/user.routing.ts"],"names":[],"mappings":"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","file":"components-user-user-module.js","sourcesContent":["/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { catchError } from 'rxjs/internal/operators';\nimport * as actions from '../user-action/user.action';\nimport { UserService } from '../user.service';\n\n@Injectable()\nexport class UserEffect {\n  constructor(private action$: Actions, private service: UserService) {}\n\n  // NEW USER\n  @Effect()\n  doAddUser$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_NEW_USER),\n    map((action: actions.DoNewUserAction) => action.payload),\n    switchMap(state => {\n      return this.service.addUser(state).pipe(\n        switchMap(user => [new actions.DoNewUserSuccessAction(user)]),\n        catchError(error => of(new actions.DoNewUserFailAction(error)))\n      );\n    })\n  );\n  // UPDATE USER\n  @Effect()\n  doUpdateUser$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_UPDATE_USER),\n    map((action: actions.DoUpdateUserAction) => action.payload),\n    switchMap(state => {\n      const Id = state.id;\n      return this.service.updateUser(state, Id).pipe(\n        switchMap(user => [new actions.DoUpdateUserSuccessAction(user)]),\n        catchError(error => of(new actions.DoUpdateUserFailAction(error)))\n      );\n    })\n  );\n  @Effect()\n  doUserGroupList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.GET_USER_GROUP_LIST),\n    map((action: actions.DoUserGroupListAction) => action.payload),\n    switchMap(state => {\n      return this.service.userGrouplist(state).pipe(\n        map(analysis => new actions.DoUserGroupListSuccessAction(analysis)),\n        catchError(error => of(new actions.DoUserGroupListFailAction(error)))\n      );\n    })\n  );\n  // LIST-USER GROUP\n  // LIST-USERLIST\n  @Effect()\n  doUserList$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.GET_USER_LIST),\n    map((action: actions.DoUserListAction) => action.payload),\n    switchMap(state => {\n      return this.service.userlist(state).pipe(\n        map(analysis => new actions.DoUserListSuccessAction(analysis)),\n        catchError(error => of(new actions.DoUserListFailAction(error)))\n      );\n    })\n  );\n  // USER LIST PAGINATION\n  @Effect()\n  douserpagination$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DO_USER_COUNT_ACTION),\n    map((action: actions.DoUserPaginationAction) => action.payload),\n    switchMap(state => {\n      return this.service.userpagiantion(state).pipe(\n        switchMap(user => [new actions.DoUserPaginationSuccessAction(user)]),\n        catchError(error => of(new actions.DoUserPaginationFailAction(error)))\n      );\n    })\n  );\n  // USER DELATE\n  @Effect()\n  userDelate$: Observable<Action> = this.action$.pipe(\n    ofType(actions.ActionTypes.DELETE_USER),\n    map((action: actions.UserDelete) => action.payload),\n    switchMap(state => {\n      return this.service.userDelete(state).pipe(\n        switchMap(user => [new actions.UserDeleteSuccess(user)]),\n        catchError(error => of(new actions.UserDeleteFail(error)))\n      );\n    })\n  );\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nexport class UserForm {\n  public firstName: String;\n  public lastName: String;\n  public email: String;\n  public userGroupId: number;\n  public username: String;\n  public password: String;\n  public id: number;\n\n  constructor(userForm: any) {\n    this.firstName = userForm.firstName || '';\n    this.lastName = userForm.lastName || '';\n    this.email = userForm.email || '';\n    this.userGroupId = userForm.role || 0;\n    this.username = userForm.username || '';\n    this.password = userForm.password || '';\n    if (userForm.userID) {\n      this.id = userForm.userID || '';\n    }\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nexport class UserlistForm {\n  public limit: number;\n  public offset: number;\n  public keyword: string;\n  public count: number;\n\n  constructor(userlistForm: any) {\n    this.limit = userlistForm.limit || '';\n    this.offset = userlistForm.offset || '';\n    this.keyword = userlistForm.keyword || '';\n    this.count = userlistForm.count || '';\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { AppState } from '../../../../app.state.interface';\nimport { createSelector } from 'reselect';\nimport * as fromUser from './user.reducer';\n\nexport const getUserState = (state: AppState) => state.user;\nexport const getGroupList = createSelector(\n  getUserState,\n  fromUser.getUserGroupList\n);\nexport const getUsersList = createSelector(\n  getUserState,\n  fromUser.getUserList\n);\nexport const getAddUser = createSelector(\n  getUserState,\n  fromUser.getNewUser\n);\nexport const getAddUserData = createSelector(\n  getUserState,\n  fromUser.getNewUserData\n);\nexport const getUpdateUser = createSelector(\n  getUserState,\n  fromUser.getUpdateUser\n);\nexport const getuserpagination = createSelector(\n  getUserState,\n  fromUser.getuserspagination\n);\n\nexport const UserListLoading = createSelector(\n  getUserState,\n  fromUser.getUserListLoading\n);\nexport const UserListLoaded = createSelector(\n  getUserState,\n  fromUser.getUserListLoaded\n);\nexport const UserListFailed = createSelector(\n  getUserState,\n  fromUser.getUserListFailed\n);\n\nexport const UserCountLoading = createSelector(\n  getUserState,\n  fromUser.getUserCountLoading\n);\nexport const UserCountLoaded = createSelector(\n  getUserState,\n  fromUser.getUserCountLoaded\n);\nexport const UserCountFailed = createSelector(\n  getUserState,\n  fromUser.getUserCountFailed\n);\n\nexport const UserAddLoading = createSelector(\n  getUserState,\n  fromUser.getUserAddLoading\n);\nexport const UserAddLoaded = createSelector(\n  getUserState,\n  fromUser.getUserAddLoaded\n);\nexport const UserAddFailed = createSelector(\n  getUserState,\n  fromUser.getUserAddFailed\n);\n\nexport const UserGroupLoading = createSelector(\n  getUserState,\n  fromUser.getUserGroupLoading\n);\nexport const UserGroupLoaded = createSelector(\n  getUserState,\n  fromUser.getUserGroupLoaded\n);\nexport const UserGroupFailed = createSelector(\n  getUserState,\n  fromUser.getUserGroupFailed\n);\n\nexport const UserUpdateLoading = createSelector(\n  getUserState,\n  fromUser.getUserUpdateLoading\n);\nexport const UserUpdateLoaded = createSelector(\n  getUserState,\n  fromUser.getUserUpdateLoaded\n);\nexport const UserUpdateFailed = createSelector(\n  getUserState,\n  fromUser.getUserUpdateFailed\n);\nexport const UserDelate = createSelector(\n  getUserState,\n  fromUser.getUserDelate\n);\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport * as userActions from '../user/user-action/user.action';\nimport { Subscription } from 'rxjs/index';\nimport * as store from '../../../app.state.interface';\nimport { Router } from '@angular/router';\nimport { UserForm } from './user-model/user.model';\nimport { UserlistForm } from './user-model/userlist.model';\nimport {\n  getAddUser,\n  getAddUserData,\n  UserAddFailed,\n  UserAddLoaded,\n  UserAddLoading,\n  UserCountFailed,\n  UserCountLoaded,\n  UserCountLoading,\n  UserGroupFailed,\n  UserGroupLoaded,\n  UserGroupLoading,\n  UserListFailed,\n  UserListLoaded,\n  UserListLoading,\n  UserUpdateFailed,\n  UserUpdateLoaded,\n  UserUpdateLoading,\n  UserDelate\n} from './user-reducer/user.selector';\nimport { getUpdateUser } from './user-reducer/user.selector';\nimport { getuserpagination } from './user-reducer/user.selector';\nimport { getUsersList } from './user-reducer/user.selector';\nimport { getGroupList } from './user-reducer/user.selector';\nimport { RoleListModel } from '../role/role.models/role-list.model';\n\n@Injectable()\nexport class UserSandbox {\n  public getAddUser$ = this.appState.select(getAddUser);\n  public getuserpagelength$ = this.appState.select(getuserpagination);\n  public getupdateuser$ = this.appState.select(getUpdateUser);\n  public getUsersList$ = this.appState.select(getUsersList);\n  public getGroupRoleList$ = this.appState.select(getGroupList);\n  public newUserData$ = this.appState.select(getAddUserData);\n\n  public userListLoading$ = this.appState.select(UserListLoading);\n  public userListLoaded$ = this.appState.select(UserListLoaded);\n  public userListFailed$ = this.appState.select(UserListFailed);\n  public userGroupLoading$ = this.appState.select(UserGroupLoading);\n  public userGroupLoaded$ = this.appState.select(UserGroupLoaded);\n  public userGroupFailed$ = this.appState.select(UserGroupFailed);\n  public userCountLoading$ = this.appState.select(UserCountLoading);\n  public userCountLoaded$ = this.appState.select(UserCountLoaded);\n  public userCountFailed$ = this.appState.select(UserCountFailed);\n  public userAddLoading$ = this.appState.select(UserAddLoading);\n  public userAddLoaded$ = this.appState.select(UserAddLoaded);\n  public userAddFailed$ = this.appState.select(UserAddFailed);\n  public userUpdateLoading$ = this.appState.select(UserUpdateLoading);\n  public userUpdateLoaded$ = this.appState.select(UserUpdateLoaded);\n  public userUpdateFailed$ = this.appState.select(UserUpdateFailed);\n  public userDelate$ = this.appState.select(UserDelate);\n\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    protected appState: Store<store.AppState>,\n    private router: Router,\n    private toastr: ToastrManager\n  ) {\n    this.subscribe();\n  }\n\n  public addUser(value) {\n    this.appState.dispatch(\n      new userActions.DoNewUserAction(new UserForm(value))\n    );\n  }\n\n  public updateUser(value) {\n    this.appState.dispatch(\n      new userActions.DoUpdateUserAction(new UserForm(value))\n    );\n  }\n\n  public getuserpagination(value) {\n    this.appState.dispatch(\n      new userActions.DoUserPaginationAction(new UserlistForm(value))\n    );\n  }\n\n  public getUserlist(value: any) {\n    this.appState.dispatch(\n      new userActions.DoUserListAction(new UserlistForm(value))\n    );\n  }\n\n  public getUserGrouplist(value: any) {\n    this.appState.dispatch(\n      new userActions.DoUserGroupListAction(new RoleListModel(value))\n    );\n  }\n  public deleteUser(value: any) {\n    this.appState.dispatch(new userActions.UserDelete(value));\n  }\n\n  subscribe() {\n    this.subscriptions.push(\n      this.getAddUser$.subscribe(data => {\n        if (data) {\n          if (data && data.status === 1) {\n            this.router.navigate(['/settings/user']);\n          }\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.getupdateuser$.subscribe(data => {\n        if (data) {\n          if (data && data.status === 1) {\n            this.router.navigate(['/settings/user']);\n          }\n        }\n      })\n    );\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { UserForm } from './user-model/user.model';\nimport { Api } from '../../providers/api/api';\n\n@Injectable()\nexport class UserService extends Api {\n  public userdata: any;\n\n  public params: any = {};\n  private url = this.getBaseUrl();\n\n  // SET & GET SERVICE\n  getdata() {\n    return this.userdata;\n  }\n\n  setdata(data) {\n    this.userdata = data;\n  }\n\n  // new user\n  addUser(param: UserForm): Observable<any> {\n    return this.http.post(this.url + '/auth/create-user', param);\n  }\n\n  public updateUser(param: UserForm, Id: number): Observable<any> {\n    return this.http.put(this.url + '/auth/update-user/' + Id, param);\n  }\n\n  // user group list\n  userGrouplist(params: any): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = params;\n    return this.http.get(this.url + '/role/rolelist', { params: reqOpts });\n  }\n\n  // user list\n  userlist(params: any): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = params;\n    return this.http.get(this.url + '/auth/userlist', { params: reqOpts });\n  }\n  userDelete(params) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      withCredentials: false,\n      body: params\n    };\n    return this.http.delete(\n      this.url + '/auth/delete-user/' + params.id,\n      httpOptions\n    );\n  }\n  public userpagiantion(param: any): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = param;\n    return this.http.get(this.url + '/auth/userlist', { params: reqOpts });\n  }\n}\n","module.exports = \"<div class=\\\"flex setting1-inner-header\\\" style=\\\"margin-bottom: 22px\\\">\\n    <h3> {{updatetitle ? 'Update User' : 'Add User'}} </h3>\\n</div>\\n<div class=\\\"settings-right-wrapper\\\">\\n\\n    <!---->\\n    <div class=\\\"new-user\\\">\\n        <form (ngSubmit)=\\\"onSubmit(user.value)\\\" [formGroup]=\\\"user\\\" class=\\\"form-horizontal m-t-20\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>First Name<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Last Name<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Email<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.email.errors.required\\\">Email is required\\n                            </div>\\n                            <div *ngIf=\\\"f.email.errors\\\">Email must be a valid email address'\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Role<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <select [(ngModel)]=\\\"role\\\" class=\\\"form-control custom-select\\\" data-placeholder=\\\"Choose Role\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.role.errors }\\\" formControlName=\\\"role\\\" placeholder=\\\"Role\\\">\\n                            <option [ngValue]=\\\"undefined\\\" selected>- -Select- -</option>\\n                            <option *ngFor=\\\"let rolelist of sandbox.getGroupRoleList$ | async\\\"\\n                                    value={{rolelist.groupId}}>\\n                                {{rolelist.name}}\\n                            </option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.email.errors.required\\\">Role is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>User Name<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"email\\\" [(ngModel)]=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"User Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.username.errors.required\\\">User Name Email is required\\n                            </div>\\n                            <div *ngIf=\\\"f.username.errors\\\">User Name Email must be a valid email address\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Password<sup class=\\\"supvalidation\\\">*</sup></label>\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"flex user-btn\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-add\\\">{{updatetitle ? 'Update User' : 'Save' }}\\n                        </button>\\n                        <button (click)=\\\"UserCancle()\\\" class=\\\"btn btn-cancel\\\">Cancle\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, ViewEncapsulation, Input, OnInit } from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  Validators,\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  ValidatorFn,\n  AbstractControl\n} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { patternValidator } from '../../../../../../../core/admin/providers/patternValidator';\nimport { UserSandbox } from '../../../../../../../core/admin/settings/user/user.sandbox';\nimport { UserService } from '../../../../../../../core/admin/settings/user/user.service';\n\n@Component({\n  selector: 'app-spurt-settings-user-add',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'add.component.html',\n  styles: [\n    `\n      .settings-right-wrapper {\n        margin-top: 0px !important;\n      }\n\n      .setting1-inner-header {\n        margin-top: 40px !important;\n      }\n    `\n  ]\n})\nexport class UserAddComponent implements OnInit {\n  @Input() userlist: any;\n  public user: FormGroup;\n  public submitted = false;\n  public firstName: FormControl;\n  public lastName: FormControl;\n  public email: FormControl;\n  public role: FormControl;\n  public username: FormControl;\n  public password: FormControl;\n  private valid: boolean;\n  public pageSize = 5;\n  private keyword: any = '';\n  public id: any = '';\n  private offset: any;\n  public UserInfo: any = [];\n  private update_UserId: boolean;\n  private servicedata: any;\n  public updatetitle: any;\n  private edituserId: any;\n\n  constructor(\n    public fb: FormBuilder,\n    private route: ActivatedRoute,\n    public sandbox: UserSandbox,\n    private router: Router,\n    public service: UserService\n  ) {}\n\n  /**\n   *initially  calls editUserList,getuserGrouplist with argument(this.offset, this.keyword),\n   *  initForm\n   * */\n  ngOnInit() {\n    this.UserInfo = [];\n    this.update_UserId = false;\n    this.edituserId = this.route.snapshot.paramMap.get('id');\n\n    this.editUserList();\n    if (this.UserInfo && this.UserInfo[0]) {\n      this.update_UserId = true;\n    }\n    this.getuserGrouplist(this.offset, this.keyword);\n    this.initForm();\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  // FORM GROUP\n  initForm() {\n    const emailRegex =\n      '^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' +\n      '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$';\n\n    this.user = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: [\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(emailRegex),\n          Validators.minLength(5)\n        ])\n      ],\n      username: [\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(emailRegex),\n          Validators.minLength(5)\n        ])\n      ],\n      role: ['', Validators.required],\n      password: [\n        '',\n        this.conditionalValidator(\n          () => this.update_UserId === false,\n          Validators.required\n        )\n      ]\n    });\n  }\n\n  // Conditional Validator\n  conditionalValidator(\n    condition: () => boolean,\n    validator: ValidatorFn\n  ): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!condition()) {\n        return null;\n      }\n      return validator(control);\n    };\n  }\n\n  /**\n   * Handles form onSubmit .calls sandbox updateUser and addUser if valid.\n   *\n   * @param user from entire form.\n   * */\n  onSubmit(user) {\n    this.submitted = true;\n    if (this.user.invalid) {\n      return;\n    }\n    const params: any = {};\n    params.firstName = this.user.value.firstName;\n    params.lastName = this.user.value.lastName;\n    params.email = this.user.value.email;\n    params.role = this.user.value.role;\n    params.username = this.user.value.username;\n    params.password = this.user.value.password;\n    if (this.UserInfo && this.UserInfo[0] && this.UserInfo[0].userId) {\n      params.userID = this.UserInfo[0].userId;\n      this.sandbox.updateUser(params);\n      this.service.setdata('');\n    } else {\n      this.sandbox.addUser(params);\n    }\n  }\n\n  // DROP DOWN ROLE LIST\n  getuserGrouplist(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    params.count = '';\n    params.status = 1;\n    this.sandbox.getUserGrouplist(params);\n  }\n\n  // CANCLE\n  UserCancle() {\n    this.UserInfo = ' ';\n    this.service.setdata(this.UserInfo);\n    this.router.navigate(['/settings/user']);\n  }\n\n  // UPDATE\n  editUserList() {\n    this.servicedata = this.service.getdata();\n    if (this.servicedata) {\n      this.UserInfo.push(this.servicedata);\n      this.update_UserId = false;\n    }\n    if (this.UserInfo && this.UserInfo[0]) {\n      this.update_UserId = false;\n      if (this.edituserId) {\n        for (let i = 0; i < this.UserInfo.length; i++) {\n          this.updatetitle = 1;\n          this.firstName = this.UserInfo[0].firstName;\n          this.lastName = this.UserInfo[0].lastName;\n          this.email = this.UserInfo[0].email;\n          this.username = this.UserInfo[0].username;\n          if (this.UserInfo[0] && this.UserInfo[0].usergroup) {\n            this.role = this.UserInfo[0].usergroup.groupId;\n          }\n        }\n      }\n    }\n  }\n\n  // VALIDATION\n  get f() {\n    return this.user.controls;\n  }\n}\n","module.exports = \"<div class=\\\"flex setting1-inner-header\\\">\\n    <h3>User List</h3>\\n    <button class=\\\"btn\\\" (click)=\\\" AddeNewUser()\\\"><img\\n            src=\\\"assets/img/add-white-ico.png\\\">Add User</button>\\n</div>\\n<div class=\\\"settings-right-wrapper\\\">\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">User Name</th>\\n                    <th scope=\\\"col\\\">Email Id</th>\\n                    <th scope=\\\"col\\\">Role</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let userlist of sandbox.getUsersList$ | async; let i=index\\\">\\n                    <td>{{userlist.firstName}} {{userlist.lastName}}</td>\\n                    <td>{{userlist.email}}</td>\\n                    <td>{{userlist.usergroup.name}}</td>\\n                    <td><i (click)=\\\"editUser(userlist)\\\" class=\\\"fas fa-edit\\\"></i>\\n                        <i [ngbPopover]=\\\"deleteContent\\\" placement=\\\"bottom\\\" #deletePop=\\\"ngbPopover\\\" style=\\\"margin-left: 15px;\\\" class=\\\"fas fa-trash\\\">\\n                        <ng-template #deleteContent>\\n                            <div class=\\\"style\\\">\\n                                <div class=\\\"modal-header\\\">\\n                                    <h6 class=\\\"modal-title\\\" style=\\\"margin-left: 17%;\\\"> Do you want to delete ?</h6>\\n\\n                                </div>\\n\\n                                <div class=\\\"modal-footer\\\" style=\\\"margin-right: 23%;\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePop.close()\\\"\\n                                            data-dismiss=\\\"modal\\\">No\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n                                            (click)=\\\"deleteUser(userlist.userId, deletePop)\\\"\\n                                            data-dismiss=\\\"modal\\\">Yes\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </ng-template>\\n                    </i>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<mat-paginator [length]=\\\"sandbox.getuserpagelength$ | async\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"[pageSize]\\\" (page)=\\\"onPageChange($event)\\\">\\n</mat-paginator>\"","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { UserSandbox } from '../../../../../../../core/admin/settings/user/user.sandbox';\nimport { UserService } from '../../../../../../../core/admin/settings/user/user.service';\nimport { Subscription } from 'rxjs';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-settings-user-list',\n  templateUrl: './list.component.html',\n  styles: [\n    `\n      .settings-right-wrapper {\n        margin-top: 0px !important;\n      }\n\n      .setting1-inner-header {\n        margin-top: 40px !important;\n      }\n    `\n  ]\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n  public userdetails: any = {};\n  public pageSize = '5';\n  private keyword: any = '';\n  public id: any = '';\n  private offset: any;\n  private page: any;\n  private pagination = 1;\n  private currentPage: any;\n  private index: any;\n  public addnewuser = false;\n  private popoverContent: string;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private router: Router,\n    public sandbox: UserSandbox,\n    public service: UserService,\n    private toastr: ToastrManager\n  ) {\n    this.regSubscribeEvents();\n  }\n  // initially getUserList with argument(offset,keyword)\n  ngOnInit() {\n    this.pageSize = localStorage.getItem('itemsPerPage');\n    this.getUserList(this.offset, this.keyword);\n  }\n  // STYLING PUROPOSE\n  beforeChange($event: NgbPanelChangeEvent) {\n    if ($event.panelId === 'preventchange-2') {\n      $event.preventDefault();\n    }\n\n    if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n      $event.preventDefault();\n    }\n  }\n\n  // ADD USER\n\n  AddeNewUser() {\n    this.router.navigate(['/settings/user/add']);\n  }\n\n  // USER LIST\n  getUserList(offset: number = 0, keyword) {\n    const params: any = {};\n    params.limit = this.pageSize;\n    params.offset = offset;\n    params.keyword = this.keyword;\n    this.sandbox.getUserlist(params);\n    if (this.pagination) {\n      params.count = 'true';\n      this.sandbox.getuserpagination(params);\n    }\n  }\n\n  // UPDATE USER\n  editUser(userinfo) {\n    const userDetail = JSON.parse(localStorage.getItem('userdetail'))\n      .userdetails;\n    if (userDetail.userId === userinfo.userId) {\n      this.toastr.errorToastr('You cannot edit current logged in user');\n      return;\n    }\n    this.userdetails = userinfo;\n    this.service.setdata(this.userdetails);\n    this.router.navigate(['/settings/user/edit', this.userdetails.userId]);\n  }\n\n  /**calls getUserList for pagination\n   *\n   * @param event from material paginator\n   * */\n  onPageChange(event: any) {\n    this.currentPage = event.offset;\n    this.pageSize = event.pageSize;\n    this.index = event.pageIndex;\n    const offset = event.pageSize * event.pageIndex;\n    this.getUserList(offset, this.pageSize);\n  }\n  /**\n   * Handles form 'delete' event. Calls sandbox delete the perticular country.\n   *\n   */\n  deleteUser(userId, deletePop) {\n    this.popoverContent = deletePop;\n    this.sandbox.deleteUser({ id: userId });\n  }\n  // delete event , subscripe status\n  regSubscribeEvents() {\n    this.subscriptions.push(\n      this.sandbox.userDelate$.subscribe(_delete => {\n        if (_delete && _delete.status === 1) {\n          this.getUserList(this.offset, '');\n        }\n      })\n    );\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(each => {\n      each.unsubscribe();\n    });\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultCommonModule } from '../../../../default.common.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// components\nimport { UserAddComponent } from './add/add.component';\nimport { UserListComponent } from './list/list.component';\n\n// Store Actions\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffect } from '../../../../../../core/admin/settings/user/user-effect/user.effect';\nimport { UserService } from '../../../../../../core/admin/settings/user/user.service';\nimport { UserSandbox } from '../../../../../../core/admin/settings/user/user.sandbox';\n\n// Routing Module\nimport { UserRoutingModule } from './user.routing';\n\n// Shared Module\nimport { MaterialModule } from '../../../../default.material.module';\nimport { HttpClient } from '@angular/common/http';\n\n@NgModule({\n  declarations: [UserAddComponent, UserListComponent],\n  imports: [\n    CommonModule,\n    DefaultCommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    UserRoutingModule,\n    EffectsModule.forRoot([UserEffect])\n  ],\n  providers: [UserService, UserSandbox],\n  bootstrap: [],\n  entryComponents: []\n})\nexport class UserModule {}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Component\nimport { UserAddComponent } from './add/add.component';\nimport { UserListComponent } from './list/list.component';\n\nconst userRoutes: Routes = [\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\n  { path: 'list', component: UserListComponent },\n  { path: 'add', component: UserAddComponent },\n  {\n    path: 'edit/:id',\n    component: UserAddComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(userRoutes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule {}\n"],"sourceRoot":""}