{"version":3,"sources":["webpack:///./src/core/admin/catalog/layout/layout.sandbox.ts","webpack:///./src/core/admin/catalog/layout/models/category.model.ts","webpack:///./src/core/admin/catalog/layout/models/index.ts","webpack:///./src/core/admin/catalog/layout/models/product.model.ts","webpack:///./src/core/admin/catalog/layout/reducer/selectors.ts","webpack:///./src/core/admin/catalog/product/product.service.ts"],"names":[],"mappings":"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","file":"default~catalog-catalog-module~components-product-product-module.js","sourcesContent":["/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as store from '../../../app.state.interface';\nimport * as catalogLayoutActions from './action/layout.action';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\nimport { ProductModel, CategoryModel } from './models';\n\nimport {\n  /* Active Product Count */\n  getActiveProductCount,\n  getActiveProductCountLoading,\n  getActiveProductCountLoaded,\n  /* In Active Product Count */\n  getInActiveProductCount,\n  getInActiveProductCountLoading,\n  getInActiveProductCountLoaded,\n  /* Product Count */\n  getTotalProductCount,\n  getTotalProductCountLoading,\n  getTotalProductCountLoaded,\n  /* Catagory Count */\n  getTotalCategoryCount,\n  getTotalCategoryCountLoading,\n  getTotalCategoryCountLoaded\n} from './reducer/selectors';\n\n@Injectable()\nexport class LayoutsSandbox {\n  public totalProductCount$ = this.appState.select(getTotalProductCount);\n  public totalProductCountLoading$ = this.appState.select(\n    getTotalProductCountLoading\n  );\n  public totalProductCountLoaded$ = this.appState.select(\n    getTotalProductCountLoaded\n  );\n\n  public activeProductCount$ = this.appState.select(getActiveProductCount);\n  public activeProductCountLoading$ = this.appState.select(\n    getActiveProductCountLoading\n  );\n  public activeProductCountLoaded$ = this.appState.select(\n    getActiveProductCountLoaded\n  );\n\n  public inActiveProductCount$ = this.appState.select(getInActiveProductCount);\n  public inActiveProductCountLoading$ = this.appState.select(\n    getInActiveProductCountLoading\n  );\n  public inActiveProductCountLoaded$ = this.appState.select(\n    getInActiveProductCountLoaded\n  );\n\n  public totalCatagoryCount$ = this.appState.select(getTotalCategoryCount);\n  public totalCatagoryCountLoading$ = this.appState.select(\n    getTotalCategoryCountLoading\n  );\n  public totalCatagoryCountLoaded$ = this.appState.select(\n    getTotalCategoryCountLoaded\n  );\n\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    protected appState: Store<store.AppState>,\n    private router: Router,\n    private toastr: ToastrManager\n  ) {\n    this.registerAuthEvents();\n  }\n\n  public getProductListCount(params: any = {}) {\n    this.appState.dispatch(\n      new catalogLayoutActions.GetTotalProductCountAction(\n        new ProductModel(params)\n      )\n    );\n  }\n\n  public getActiveProductListCount(params: any = {}) {\n    this.appState.dispatch(\n      new catalogLayoutActions.GetActiveProductCountAction(\n        new ProductModel(params)\n      )\n    );\n  }\n\n  public getInActiveProductListCount(params: any = {}) {\n    this.appState.dispatch(\n      new catalogLayoutActions.GetInActiveProductCountAction(\n        new ProductModel(params)\n      )\n    );\n  }\n\n  public getCatagoryListCount(params: any = {}) {\n    this.appState.dispatch(\n      new catalogLayoutActions.GetTotalCatagoryCountAction(\n        new CategoryModel(params)\n      )\n    );\n  }\n\n  /**\n   * Registers events\n   */\n  private registerAuthEvents(): void {}\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nexport class CategoryModel {\n  public limit: number;\n  public offset: number;\n  public keyword: string;\n  public sortOrder: string;\n  public count: boolean;\n\n  constructor(categorylistForm: any) {\n    this.limit = categorylistForm.limit || '';\n    this.offset = categorylistForm.offset || '';\n    this.keyword = categorylistForm.keyword || '';\n    this.sortOrder = categorylistForm.sortOrder || '';\n    this.count = categorylistForm.count || false;\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nexport * from './product.model';\nexport * from './category.model';\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nexport class ProductModel {\n  public limit: number;\n  public offset: number;\n  public keyword: string;\n  public sku: string;\n  public status: string;\n  public price: number;\n  public count: boolean;\n\n  constructor(params: any) {\n    this.limit = params.limit || 0;\n    this.offset = params.offset || 0;\n    this.keyword = params.keyword || '';\n    this.sku = params.sku || '';\n    this.status = params.status || '';\n    this.price = params.price || '';\n    this.count = params.count || false;\n  }\n}\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport { AppState } from '../../../../app.state.interface';\nimport { createSelector } from 'reselect';\nimport * as fromDashboard from './layout.reducer';\n\n// *************************** PUBLIC API's ****************************\n/**\n * Auth store functions\n */\nexport const getCatalogLayoutState = (state: AppState) => state.catalogLayout;\nexport const getTotalProductCount = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalProductCount\n);\nexport const getTotalProductCountLoaded = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalProductCountLoaded\n);\nexport const getTotalProductCountLoading = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalProductCountLoading\n);\nexport const getTotalProductCountFailed = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalProductCountFailed\n);\n\nexport const getActiveProductCount = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getActiveProductCount\n);\nexport const getActiveProductCountLoaded = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getActiveProductCountLoaded\n);\nexport const getActiveProductCountLoading = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getActiveProductCountLoading\n);\nexport const getActiveProductCountFailed = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getActiveProductCountFailed\n);\n\nexport const getInActiveProductCount = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getInActiveProductCount\n);\nexport const getInActiveProductCountLoaded = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getInActiveProductCountLoaded\n);\nexport const getInActiveProductCountLoading = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getInActiveProductCountLoading\n);\nexport const getInActiveProductCountFailed = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getInActiveProductCountFailed\n);\n\nexport const getTotalCategoryCount = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalCategoryCount\n);\nexport const getTotalCategoryCountLoaded = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalCategoryCountLoaded\n);\nexport const getTotalCategoryCountLoading = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalCategoryCountLoading\n);\nexport const getTotalCategoryCountFailed = createSelector(\n  getCatalogLayoutState,\n  fromDashboard.getTotalCategoryCountFailed\n);\n","/*\n * SpurtCommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 PICCOSOFT\n * Author piccosoft <support@spurtcommerce.com>\n * Licensed under the MIT license.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Api } from '../../providers/api/api';\n// model\nimport { ProductListModel } from './product-model/Product-list.model';\nimport { ProductDeleteModel } from './product-model/product-delete.model';\nimport { DetailModel } from './product-model/detail.model';\n\n@Injectable()\nexport class ProductService extends Api {\n  // for get method\n  public params: any = {};\n  // url\n  private basUrl = this.getBaseUrl();\n\n  /**\n   * Handles 'productList' function. Calls get method with specific api address\n   * along its param.\n   *\n   * @param params from RatingReviewListModel\n   */\n  public productList(params: ProductListModel): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = params;\n    return this.http.get(this.basUrl + '/product/productlist', {\n      params: reqOpts\n    });\n  }\n\n  /**\n   * Handles 'productCount' function. Calls get method with specific api address\n   * along its param.\n   *\n   * @param params from RatingReviewListModel\n   */\n  public productCount(params: ProductListModel): Observable<any> {\n    let reqOpts: any = {};\n    reqOpts = params;\n    return this.http.get(this.basUrl + '/product/productlist', {\n      params: reqOpts\n    });\n  }\n\n  /**\n   * Handles 'productDelete' function. Calls delete method with specific api address\n   * along its param.\n   *\n   * @param params from ProductDeleteModel\n   */\n  productDelete(params: ProductDeleteModel): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      withCredentials: false,\n      body: { productId: params.productId }\n    };\n\n    return this.http.delete(\n      this.basUrl + '/product/delete-product/' + params.productId,\n      httpOptions\n    );\n  }\n\n  /**\n   * Handles 'productAdd' function. Calls post method with specific api address\n   * along its param.\n   *\n   * @param param from Model\n   */\n  productAdd(param) {\n    return this.http.post(this.basUrl + '/product/add-product', param);\n  }\n\n  /**\n   * Handles 'productDetail' function. Calls post method with specific api address\n   * along its param.\n   *\n   * @param param from Model\n   */\n  productUpdate(param) {\n    return this.http.post(\n      this.basUrl + '/product/update-product/' + param.productId,\n      param\n    );\n  }\n\n  /**\n   * Handles 'productDetail' function. Calls get method with specific api address\n   * along its param.\n   *\n   * @param param from DetailModel\n   */\n  productDetail(param: DetailModel) {\n    return this.http.get(this.basUrl + '/product/product-detail/' + param.Id);\n  }\n\n  /**\n   * Handles 'productTodayDeals' function. Calls put method with specific api address\n   * along its param.\n   *\n   * @param params from model\n   */\n\n  productTodayDeals(params): Observable<any> {\n    return this.http.put(\n      this.basUrl + '/product/update-todayDeals/' + params.productId,\n      params\n    );\n  }\n\n  // getting option value\n  public gettingOptionApi(params) {\n    return this.http.get(\n      this.basUrl + `/option/getting-option-value/${params}`\n    );\n  }\n\n  /**\n   * Handles 'productBulkDelete' function. Calls post method with specific api address\n   * along its param.\n   *\n   * @param param from Model\n   */\n  productBulkDelete(param) {\n    return this.http.post(this.basUrl + '/product/delete-product', param);\n  }\n\n  /**\n   * Handles 'ProductExcel' function. Calls put method with specific api address\n   * along its param.\n   *\n   * @param params from model\n   */\n  public productExcel(params): Observable<any> {\n    const reqOpts: any = {};\n    reqOpts.responseType = 'arraybuffer';\n    if (params) {\n      reqOpts.params = new HttpParams();\n      for (const k in params) {\n        if (k) {\n          reqOpts.params = reqOpts.params.set(k, params[k]);\n        }\n      }\n    }\n    return this.http.get(this.basUrl + '/product/product-excel-list/', reqOpts);\n  }\n}\n"],"sourceRoot":""}