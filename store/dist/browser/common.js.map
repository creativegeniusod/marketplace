{"version":3,"sources":["webpack:///./src/core/auth/auth.sandbox.ts","webpack:///./src/core/auth/models/login.model.ts","webpack:///./src/core/auth/models/register.model.ts","webpack:///./src/core/auth/reducer/auth.selector.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport * as authAction from './action/auth.action';\n\nimport * as store from '../state.interface';\nimport {\n  get_loginFailed,\n  get_loginLoaded,\n  get_loginLoading,\n  get_recoverFailed,\n  get_recoverLoaded,\n  get_recoverLoading,\n  get_registerFailed,\n  get_registerLoaded,\n  get_registerLoading,\n  getToken,\n  getTokenValid\n} from './reducer/auth.selector';\nimport { LoginModel } from './models/login.model';\nimport { RegisterModel } from './models/register.model';\nimport { CommonSandbox } from '../common/common.sandbox';\n\n@Injectable()\nexport class AuthSandbox {\n  private subscriptions: Array<Subscription> = [];\n  /* login status*/\n  public userToken$ = this.appState$.select(getToken);\n  public userTokenValid$ = this.appState$.select(getTokenValid);\n  public loginLoading$ = this.appState$.select(get_loginLoading);\n  public loginLoaded$ = this.appState$.select(get_loginLoaded);\n  public loginFailed$ = this.appState$.select(get_loginFailed);\n  /* register status*/\n  public registerLoading$ = this.appState$.select(get_registerLoading);\n  public registerLoaded$ = this.appState$.select(get_registerLoaded);\n  public registerFailed$ = this.appState$.select(get_registerFailed);\n  /* recover account status*/\n  public recoverLoading$ = this.appState$.select(get_recoverLoading);\n  public recoverLoaded$ = this.appState$.select(get_recoverLoaded);\n  public recoverFailed$ = this.appState$.select(get_recoverFailed);\n\n  constructor(\n    private router: Router,\n    protected appState$: Store<store.AppState>,\n    public commonSandbox: CommonSandbox,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.registerEvents();\n  }\n\n  public doLogin(params): void {\n    this.appState$.dispatch(new authAction.DoLogin(new LoginModel(params)));\n  }\n  public doRegister(params): void {\n    this.appState$.dispatch(\n      new authAction.DoRegister(new RegisterModel(params))\n    );\n  }\n  public doRecover(params): void {\n    this.appState$.dispatch(new authAction.RecoverAccount(params));\n  }\n\n  /**\n   * Registers events\n   */\n  public registerEvents() {\n    this.subscriptions.push(\n      this.userToken$.subscribe(token => {\n        if (token) {\n          if (token.token) {\n            if (isPlatformBrowser(this.platformId)) {\n              localStorage.setItem('userToken', token.token);\n              localStorage.setItem('user', JSON.stringify(token.user));\n            }\n            this.commonSandbox.doGetProfile();\n            if (isPlatformBrowser(this.platformId)) {\n              const data = localStorage.getItem('checkout');\n            }\n          }\n        }\n      })\n    );\n  }\n\n  /**\n   * Un registers events\n   */\n  public unsubscribeEvents() {\n    this.subscriptions.forEach(each => {\n      each.unsubscribe();\n    });\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nexport class LoginModel {\n  public emailId: any;\n  public password: any;\n  public type: string;\n  constructor(loginRequest: any) {\n    this.emailId = loginRequest.email || '';\n    this.password = loginRequest.password || '';\n    this.type = loginRequest.type || '';\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nexport class RegisterModel {\n  public name: any;\n  public password: any;\n  public confirmPassword: any;\n  public emailId: any;\n  public phoneNumber: any;\n\n  constructor(registerRequest: any) {\n    this.name = registerRequest.name || '';\n    this.password = registerRequest.password || '';\n    this.confirmPassword = registerRequest.confirmPassword || '';\n    this.emailId = registerRequest.email || '';\n    this.phoneNumber = registerRequest.phoneNumber || '';\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport {createSelector} from 'reselect';\n\nimport * as  fromAuth from './auth.reducer';\nimport {AppState} from '../../state.interface';\n\nexport const getState = (State: AppState) => State.auth;\nexport const getToken = createSelector(getState, fromAuth.getToken);\nexport const getTokenValid = createSelector(getState, fromAuth.getTokenValid);\n\nexport const get_loginLoading = createSelector(getState, fromAuth.getLoginLoading);\nexport const get_loginLoaded = createSelector(getState, fromAuth.getLoginLoaded);\nexport const get_loginFailed = createSelector(getState, fromAuth.getLoginFailed);\n\nexport const get_registerLoading = createSelector(getState, fromAuth.getRegisterLoading);\nexport const get_registerLoaded = createSelector(getState, fromAuth.getRegisterLoaded);\nexport const get_registerFailed = createSelector(getState, fromAuth.getRegisterFailed);\n\nexport const get_recoverLoading = createSelector(getState, fromAuth.getRecoverLoading);\nexport const get_recoverLoaded = createSelector(getState, fromAuth.getRecoverLoaded);\nexport const get_recoverFailed = createSelector(getState, fromAuth.getRecoverFailed);\n\n"],"sourceRoot":""}