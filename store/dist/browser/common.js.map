{"version":3,"sources":["webpack:///./src/core/auth/auth.sandbox.ts","webpack:///./src/core/auth/models/login.model.ts","webpack:///./src/core/auth/models/register.model.ts","webpack:///./src/core/auth/reducer/auth.selector.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as authAction from './action/auth.action';\r\n\r\nimport * as store from '../state.interface';\r\nimport {\r\n  get_loginFailed,\r\n  get_loginLoaded,\r\n  get_loginLoading,\r\n  get_recoverFailed,\r\n  get_recoverLoaded,\r\n  get_recoverLoading,\r\n  get_registerFailed,\r\n  get_registerLoaded,\r\n  get_registerLoading,\r\n  getToken,\r\n  getTokenValid\r\n} from './reducer/auth.selector';\r\nimport { LoginModel } from './models/login.model';\r\nimport { RegisterModel } from './models/register.model';\r\nimport { CommonSandbox } from '../common/common.sandbox';\r\n\r\n@Injectable()\r\nexport class AuthSandbox {\r\n  private subscriptions: Array<Subscription> = [];\r\n  /* login status*/\r\n  public userToken$ = this.appState$.select(getToken);\r\n  public userTokenValid$ = this.appState$.select(getTokenValid);\r\n  public loginLoading$ = this.appState$.select(get_loginLoading);\r\n  public loginLoaded$ = this.appState$.select(get_loginLoaded);\r\n  public loginFailed$ = this.appState$.select(get_loginFailed);\r\n  /* register status*/\r\n  public registerLoading$ = this.appState$.select(get_registerLoading);\r\n  public registerLoaded$ = this.appState$.select(get_registerLoaded);\r\n  public registerFailed$ = this.appState$.select(get_registerFailed);\r\n  /* recover account status*/\r\n  public recoverLoading$ = this.appState$.select(get_recoverLoading);\r\n  public recoverLoaded$ = this.appState$.select(get_recoverLoaded);\r\n  public recoverFailed$ = this.appState$.select(get_recoverFailed);\r\n\r\n  constructor(\r\n    private router: Router,\r\n    protected appState$: Store<store.AppState>,\r\n    public commonSandbox: CommonSandbox,\r\n    @Inject(PLATFORM_ID) private platformId: Object\r\n  ) {\r\n    this.registerEvents();\r\n  }\r\n\r\n  public doLogin(params): void {\r\n    this.appState$.dispatch(new authAction.DoLogin(new LoginModel(params)));\r\n  }\r\n  public doRegister(params): void {\r\n    console.log('params', params);\r\n    this.appState$.dispatch(\r\n      new authAction.DoRegister(new RegisterModel(params))\r\n    );\r\n  }\r\n  public doRecover(params): void {\r\n    this.appState$.dispatch(new authAction.RecoverAccount(params));\r\n  }\r\n\r\n  /**\r\n   * Registers events\r\n   */\r\n  public registerEvents() {\r\n    this.subscriptions.push(\r\n      this.userToken$.subscribe(token => {\r\n        if (token) {\r\n          if (token.token) {\r\n            if (isPlatformBrowser(this.platformId)) {\r\n              localStorage.setItem('userToken', token.token);\r\n              localStorage.setItem('user', JSON.stringify(token.user));\r\n            }\r\n            this.commonSandbox.doGetProfile();\r\n            if (isPlatformBrowser(this.platformId)) {\r\n              const data = localStorage.getItem('checkout');\r\n            }\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Un registers events\r\n   */\r\n  public unsubscribeEvents() {\r\n    this.subscriptions.forEach(each => {\r\n      each.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class LoginModel {\r\n  public emailId: any;\r\n  public password: any;\r\n  public type: string;\r\n  constructor(loginRequest: any) {\r\n    this.emailId = loginRequest.email || '';\r\n    this.password = loginRequest.password || '';\r\n    this.type = loginRequest.type || '';\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class RegisterModel {\r\n  public name: any;\r\n  public password: any;\r\n  public confirmPassword: any;\r\n  public emailId: any;\r\n  public phoneNumber: any;\r\n\r\n  constructor(registerRequest: any) {\r\n    this.name = registerRequest.name || '';\r\n    this.password = registerRequest.password || '';\r\n    this.confirmPassword = registerRequest.confirmPassword || '';\r\n    this.emailId = registerRequest.email || '';\r\n    this.phoneNumber = registerRequest.phoneNumber || '';\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport {createSelector} from 'reselect';\r\n\r\nimport * as  fromAuth from './auth.reducer';\r\nimport {AppState} from '../../state.interface';\r\n\r\nexport const getState = (State: AppState) => State.auth;\r\nexport const getToken = createSelector(getState, fromAuth.getToken);\r\nexport const getTokenValid = createSelector(getState, fromAuth.getTokenValid);\r\n\r\nexport const get_loginLoading = createSelector(getState, fromAuth.getLoginLoading);\r\nexport const get_loginLoaded = createSelector(getState, fromAuth.getLoginLoaded);\r\nexport const get_loginFailed = createSelector(getState, fromAuth.getLoginFailed);\r\n\r\nexport const get_registerLoading = createSelector(getState, fromAuth.getRegisterLoading);\r\nexport const get_registerLoaded = createSelector(getState, fromAuth.getRegisterLoaded);\r\nexport const get_registerFailed = createSelector(getState, fromAuth.getRegisterFailed);\r\n\r\nexport const get_recoverLoading = createSelector(getState, fromAuth.getRecoverLoading);\r\nexport const get_recoverLoaded = createSelector(getState, fromAuth.getRecoverLoaded);\r\nexport const get_recoverFailed = createSelector(getState, fromAuth.getRecoverFailed);\r\n\r\n"],"sourceRoot":""}