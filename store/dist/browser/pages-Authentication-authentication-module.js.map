{"version":3,"sources":["webpack:///./src/core/auth/auth.service.ts","webpack:///./src/core/auth/effects/auth.effect.ts","webpack:///./src/core/auth/models/loginResponse.model.ts","webpack:///./src/default/pages/Authentication/Auth/auth.component.html","webpack:///./src/default/pages/Authentication/Auth/auth.component.scss","webpack:///./src/default/pages/Authentication/Auth/auth.component.ts","webpack:///./src/default/pages/Authentication/authentication.module.ts","webpack:///./src/default/pages/Authentication/forgot/forgot.component.html","webpack:///./src/default/pages/Authentication/forgot/forgot.component.scss","webpack:///./src/default/pages/Authentication/forgot/forgot.component.ts","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.html","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.scss","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.ts","webpack:///./src/default/shared/validation-directives/only-number.directive.ts","webpack:///./src/default/shared/validation-directives/onlyNumber.module.ts","webpack:///./src/default/theme/utils/app-validators.ts"],"names":[],"mappings":"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","file":"pages-Authentication-authentication-module.js","sourcesContent":["/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Api} from '../providers/api/api';\n\n\n@Injectable()\nexport class AuthApiService extends Api {\n\n\n    private base: string = this.getBaseUrl();\n\n    /* call login api*/\n    public doLogin(params: any): Observable<any> {\n        // if ((params.emailId) && (params.password)) {\n            return this.http.post(this.base + 'customer/login', params);\n        // }\n        // else {\n        //     return this.http.post(this.base + 'customer/Oauth-login', params);\n        // }\n    }\n    public doOauth(params) {\n        const auth = params.url;\n        delete params.url;\n        return this.http.post('https://' + auth, params);\n    }\n    /* call register api*/\n    public doRegister(params: any): Observable<any> {\n        return this.http.post(this.base + 'customer/register', params);\n    }\n\n    /* call recover account api*/\n    public doRecover(params: any): Observable<any> {\n        return this.http.post(this.base + 'customer/forgot-password', params);\n    }\n\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport * as store from '../../state.interface';\nimport { catchError } from 'rxjs/internal/operators';\nimport { LoginResponseModel } from '../models/loginResponse.model';\nimport { AuthApiService } from '../auth.service';\nimport * as actions from './../action/auth.action';\nimport { Router } from '@angular/router';\nimport { OauthModel } from '../models/oauth.model';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    public router: Router,\n    private authApi: AuthApiService,\n    private appState$: Store<store.AppState>\n  ) {}\n\n  @Effect()\n  login$: Observable<Action> = this.actions$.pipe(\n    ofType(actions.ActionTypes.DO_LOGIN),\n    map((action: actions.DoLogin) => action.payload),\n    switchMap(state => {\n      return this.authApi.doLogin(state).pipe(\n        tap(response => {\n              this.router.navigate(['/']);\n        }),\n        map(\n          loggedin =>\n            new actions.DoLoginSuccess(new LoginResponseModel(loggedin))\n        ),\n        catchError(error =>\n          of(new actions.DoLoginFail(new LoginResponseModel(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  register$: Observable<Action> = this.actions$.pipe(\n    ofType(actions.ActionTypes.DO_REGISTER),\n    map((action: actions.DoRegister) => action.payload),\n    switchMap(state => {\n      if (state.phoneNumber === '') {\n        delete state.phoneNumber;\n      }\n      return this.authApi.doRegister(state).pipe(\n        map(register => new actions.DoRegisterSuccess(register)),\n        catchError(error => of(new actions.DoRegisterFail(error)))\n      );\n    })\n  );\n\n  @Effect()\n  recover$: Observable<Action> = this.actions$.pipe(\n    ofType(actions.ActionTypes.DO_RECOVER),\n    map((action: actions.RecoverAccount) => action.payload),\n    switchMap(state => {\n      return this.authApi.doRecover(state).pipe(\n        map(register => new actions.RecoverAccountSuccess(register)),\n        catchError(error => of(new actions.RecoverAccountFail(error)))\n      );\n    })\n  );\n  @Effect()\n  oauthLogin$: Observable<Action> = this.actions$.pipe(\n    ofType(actions.ActionTypes.DO_OAUTH_LOGIN),\n    map((action: actions.DoOauthLogin) => action.payload),\n    switchMap(state => {\n      return this.authApi.doOauth(state).pipe(\n        tap(val => {\n          this.router.navigate(['/']);\n        }),\n        map(log => new actions.DoLoginSuccess(new LoginResponseModel(log))),\n        catchError(error => of(new actions.DoLoginFail(error)))\n      );\n    })\n  );\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nexport class LoginResponseModel {\n  public user_token: any;\n\n  constructor(loginResponse: any) {\n    this.user_token = loginResponse.data || '';\n  }\n}\n","module.exports = \"<mat-card>\\n    <div fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\n            <h2 class=\\\"text-muted text-center\\\">Sign up</h2>\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterFormSubmit(registerForm.value)\\\" novalidate>\\n                <mat-form-field class=\\\"w-100 mt-2\\\" [ngClass]=\\\"{validationcolor:registerForm.controls.name.hasError('required') && submitted }\\\">\\n                    <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\" required>\\n                    <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('required') && submitted\\\">Full Name is required</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('minlength') && submitted\\\">Full Name isn't long enough, minimum of 3 characters</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('pattern') && submitted\\\">Name must be string</mat-error>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{validationcolor:registerForm.controls.email.hasError('required') && submitted }\\\">\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"registerForm.controls['email'].hasError('required') && submitted\\\">Email is required</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.controls['email'].hasError('invalidEmail') && submitted\\\">Invalid email address</mat-error>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{validationcolor:registerForm.controls.password.hasError('required') && submitted }\\\">\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"5\\\" required>\\n                    <mat-error *ngIf=\\\"registerForm.controls['password'].hasError('required') && submitted\\\">Password is required</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.controls['password'].hasError('minlength') && submitted\\\">Password isn't long enough, minimum of 5 characters</mat-error>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{validationcolor:registerForm.controls.confirmPassword.hasError('required') && submitted }\\\">\\n                    <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required>\\n                    <mat-error *ngIf=\\\"registerForm.controls['confirmPassword'].hasError('required') && submitted\\\">Confirm Password is required</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.controls['confirmPassword'].hasError('mismatchedPasswords') && submitted\\\">Passwords do not match</mat-error>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"w-100 mt-1\\\">\\n                    <input matInput type=\\\"text\\\" maxlength=15 appOnlyNumber placeholder=\\\"Phone Number\\\" formControlName=\\\"phoneNumber\\\">\\n\\n                </mat-form-field>\\n\\n                <div class=\\\"text-center mt-2\\\">\\n                    <button mat-fab color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"mat-elevation-z6\\\">\\n                        <mat-icon>person_add</mat-icon>\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</mat-card>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvbWFya2V0cGxhY2Uvc3RvcmUvc3JjL2RlZmF1bHQvcGFnZXMvQXV0aGVudGljYXRpb24vQXV0aC9hdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixpQkFBZ0IsRUFDakI7O0FBQ0Q7RUFDRSxnQkFBZSxFQUNoQjs7QUFDRDtFQUdJLGlDQUFnQztFQUNoQyxzQkFBcUIsRUFDdEI7O0FBTEg7RUFPSSxzQkFBcUIsRUFDdEI7O0FBUkg7RUFVSSx1QkFBc0IsRUFDdkI7O0FBR0g7RUFDRSxrQ0FBaUM7RUFDakMsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0UsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0Usd0JBQXVCLEVBQ3hCIiwiZmlsZSI6InNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL0F1dGgvYXV0aC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoe1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBwYWRkaW5nOiA3cHggMTRweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5mb3Jnb3R7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi52YWxpZGF0aW9uY29sb3J7XG5cbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XG4gIH1cbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1lbXB0eS5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xuICB9XG4gIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gICAgY29sb3I6IHJlZCAgIWltcG9ydGFudDtcbiAgfVxuXG59XG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSwgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XG59XG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiBncmF5ICAhaW1wb3J0YW50O1xufSJdfQ== */\"","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material';\nimport {emailValidator, matchingPasswords} from '../../../theme/utils/app-validators';\nimport {AuthSandbox} from '../../../../core/auth/auth.sandbox';\n\n\n@Component({\n    selector: 'app-auth',\n    templateUrl: './auth.component.html',\n    styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n    // reactive form\n    public registerForm: FormGroup;\n    // validation\n    public submitted = false;\n\n    constructor(public formBuilder: FormBuilder,\n                public router: Router,\n                public snackBar: MatSnackBar,\n                public authSandbox: AuthSandbox) {\n    }\n\n    // Initially initialize reactive form\n    ngOnInit() {\n        const mobileValidationPattern = '^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$';\n        const nameValidationPattern = '[a-zA-Z \\'-,;.]*';\n        this.registerForm = this.formBuilder.group({\n            'name': ['', Validators.compose([Validators.required, Validators.pattern(nameValidationPattern), Validators.minLength(3)])],\n            'email': ['', Validators.compose([Validators.required, emailValidator])],\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(5)])],\n            'confirmPassword': ['', Validators.compose([Validators.required])],\n            'phoneNumber': ['', Validators.compose([Validators.required, Validators.pattern(mobileValidationPattern)])]\n        }, {validator: matchingPasswords('password', 'confirmPassword')});\n\n    }\n\n    /** calls authSandbox doRegister if tthe from is valid.\n     Then calls resetAllFormFields for reset **/\n    public onRegisterFormSubmit(values: Object): void {\n        if (this.registerForm.valid) {\n            this.authSandbox.doRegister(this.registerForm.value);\n            this.submitted = false;\n            this.registerForm.reset();\n            // this.resetAllFormFields(this.registerForm);\n        } else {\n            this.submitted = true;\n        }\n    }\n\n    // reset the values\n    resetAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.reset();\n                control.clearValidators();\n                control.updateValueAndValidity();\n            } else if (control instanceof FormGroup) {\n                this.resetAllFormFields(control);\n            }\n        });\n    }\n\n    // validate the reactive form\n    validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.markAsTouched({onlySelf: true});\n            } else if (control instanceof FormGroup) {\n                this.validateAllFormFields(control);\n            }\n        });\n    }\n\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\n\n// module\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {SharedModule} from '../../shared/shared.module';\nimport {ComponentsModule} from '../../shared/components/index';\n// shared module\nimport {NumberAcceptModule} from './../../shared/validation-directives/onlyNumber.module';\n\n// effects\nimport {EffectsModule} from '@ngrx/effects';\nimport {AuthEffects} from '../../../core/auth/effects/auth.effect';\n// component\nimport {SignInComponent} from './sign-in/sign-in.component';\nimport {AuthComponent} from './Auth/auth.component';\nimport {ForgotComponent} from './forgot/forgot.component';\n// service\nimport {AuthApiService} from '../../../core/auth/auth.service';\n// sandbox\nimport {AuthSandbox} from '../../../core/auth/auth.sandbox';\n// social sign in\n\n\nexport const routes = [\n    {\n        path: '', component: AuthComponent,\n        children: [\n            {path: '', component: SignInComponent, pathMatch: 'full'},\n            {path: 'sign-in', component: SignInComponent, pathMatch: 'full'},\n            {path: 'forgot', component: ForgotComponent, pathMatch: 'full'}\n        ]\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule,\n        SharedModule,\n        ComponentsModule,\n        EffectsModule.forFeature([AuthEffects]),\n        NumberAcceptModule\n    ],\n    declarations: [\n        SignInComponent,\n        ForgotComponent,\n        AuthComponent\n    ],\n    providers: [AuthApiService, AuthSandbox]\n})\nexport class AuthenticationModule {\n}\n","module.exports = \"<h2 class=\\\"text-muted text-center\\\">\\n    Forgot Password</h2>\\n<form [formGroup]=\\\"forgotForm\\\" novalidate>\\n    <mat-form-field class=\\\"w-100 mt-2\\\" [ngClass]=\\\"{'validationcolor':\\n    (forgotForm.controls.emailId.hasError('required') && submitted)}\\\">\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"emailId\\\" required>\\n        <mat-error *ngIf=\\\"forgotForm.controls['emailId'].hasError('required') && submitted\\\">Email is required</mat-error>\\n        <mat-error *ngIf=\\\"forgotForm.controls['emailId'].hasError('invalidEmail') && submitted\\\">Invalid email address</mat-error>\\n    </mat-form-field>\\n    <div class=\\\"text-center mt-2\\\">\\n        <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onForgotFormSubmit(forgotForm.value)\\\">\\n            <mat-icon>exit_to_app</mat-icon>\\n        </button>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\n        <div class=\\\"divider w-100\\\"></div>\\n        <h3 class=\\\"text-muted auth forgot\\\" routerLink=\\\"/auth/sign-in\\\">or Go back to Login</h3>\\n        <div class=\\\"divider w-100\\\"></div>\\n    </div>\\n</form>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvbWFya2V0cGxhY2Uvc3RvcmUvc3JjL2RlZmF1bHQvcGFnZXMvQXV0aGVudGljYXRpb24vZm9yZ290L2ZvcmdvdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFtQjtFQUNuQixrQkFBaUI7RUFDakIsaUJBQWdCLEVBQ2pCOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFHSSxpQ0FBZ0M7RUFDaEMsc0JBQXFCLEVBQ3RCOztBQUxIO0VBT0ksc0JBQXFCLEVBQ3RCOztBQVJIO0VBVUksdUJBQXNCLEVBQ3ZCOztBQUdIO0VBQ0Usa0NBQWlDO0VBQ2pDLHVCQUFzQixFQUN2Qjs7QUFDRDtFQUNFLHVCQUFzQixFQUN2Qjs7QUFDRDtFQUNFLHdCQUF1QixFQUN4QiIsImZpbGUiOiJzcmMvZGVmYXVsdC9wYWdlcy9BdXRoZW50aWNhdGlvbi9mb3Jnb3QvZm9yZ290LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6IDdweCAxNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLmZvcmdvdHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnZhbGlkYXRpb25jb2xvcntcblxuICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSwgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcbiAgfVxuICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XG4gIH1cbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcbiAgICBjb2xvcjogcmVkICAhaW1wb3J0YW50O1xuICB9XG5cbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXkgIWltcG9ydGFudDtcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZW1wdHkubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xufVxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcbiAgY29sb3I6IGdyYXkgICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { emailValidator } from '../../../theme/utils/app-validators';\nimport {AuthSandbox} from '../../../../core/auth/auth.sandbox';\n\n\n@Component({\n    selector: 'app-forgot',\n    templateUrl: './forgot.component.html',\n    styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n    // reactive form\n    public forgotForm: FormGroup;\n    // validation\n    public submitted = false;\n\n    constructor(public formBuilder: FormBuilder,\n                public router: Router,\n                public snackBar: MatSnackBar,\n                public authSandbox: AuthSandbox) { }\n\n    // Initially initialize reactive form\n    ngOnInit() {\n        this.forgotForm = this.formBuilder.group({\n            'emailId': ['', Validators.compose([Validators.required, emailValidator])]\n        });\n    }\n/**  calls authSandbox doRecover with values from forgotForm.\n * Then calls resetAllFormFields to reset all fields.\n *\n * */\n    public onForgotFormSubmit(values: Object): void {\n        if (this.forgotForm.valid) {\n            this.authSandbox.doRecover(this.forgotForm.value);\n            this.submitted = false;\n            this.forgotForm.reset();\n            this.forgotForm.clearValidators();\n        } else {\n            this.submitted = true;\n        }\n    }\n    // reset reactive form fields\n    resetAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.reset();\n                control.clearValidators();\n                control.updateValueAndValidity();\n            } else if (control instanceof FormGroup) {\n                this.resetAllFormFields(control);\n            }\n        });\n    }\n    // validate reactive form fields\n    validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.markAsTouched({onlySelf: true});\n            } else if (control instanceof FormGroup) {\n                this.validateAllFormFields(control);\n            }\n        });\n    }\n\n}\n","module.exports = \"<!--<div fxFlex=\\\"100\\\"  class=\\\"p-2\\\">-->\\r\\n<h2 class=\\\"text-muted text-center\\\">Sign In</h2>\\r\\n<form [formGroup]=\\\"loginForm\\\" novalidate>\\r\\n    <mat-form-field class=\\\"w-100 mt-2\\\" [ngClass]=\\\"{'validationcolor':\\r\\n    (loginForm.controls.email.hasError('required') && submitted)}\\\">\\r\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n        <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('required') && submitted\\\">\\r\\n            Email is required\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('invalidEmail') && submitted\\\">\\r\\n            Invalid email address\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{'validationcolor':\\r\\n    (loginForm.controls.password.hasError('required') && submitted)}\\\">\\r\\n        <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\">\\r\\n        <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('required') && submitted\\\">\\r\\n            Password is required\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('minlength') && submitted\\\">\\r\\n            Password isn't long enough, minimum of 5 characters\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                <i *ngIf=\\\"(authSandbox.loginLoading$ | async)\\\" class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n\\r\\n            <mat-icon *ngIf=\\\"!(authSandbox.loginLoading$ | async)\\\">exit_to_app</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\r\\n        <h5 class=\\\"text-muted auth forgot\\\" routerLink=\\\"/auth/forgot\\\">\\r\\n            Forgot Password?</h5>\\r\\n    </div>\\r\\n\\r\\n</form>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer;\\n  margin-left: 40%; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvbWFya2V0cGxhY2Uvc3RvcmUvc3JjL2RlZmF1bHQvcGFnZXMvQXV0aGVudGljYXRpb24vc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixpQkFBZ0IsRUFDbkI7O0FBQ0Q7RUFDSSxnQkFBZTtFQUNmLGlCQUFnQixFQUNuQjs7QUFDRDtFQUdRLGlDQUFnQztFQUNoQyxzQkFBcUIsRUFDeEI7O0FBTEw7RUFPUSxzQkFBcUIsRUFDeEI7O0FBUkw7RUFVUSx1QkFBc0IsRUFDekI7O0FBRUw7RUFDSSxrQ0FBaUM7RUFDakMsdUJBQXNCLEVBQ3pCOztBQUNEO0VBQ0ksdUJBQXNCLEVBQ3pCOztBQUNEO0VBQ0ksd0JBQXVCLEVBQzFCIiwiZmlsZSI6InNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoe1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHBhZGRpbmc6IDdweCAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG4uZm9yZ290e1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwJTtcclxufVxyXG4udmFsaWRhdGlvbmNvbG9ye1xyXG5cclxuICAgIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1lbXB0eS5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgICAgICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcclxuICAgICAgICBjb2xvcjogcmVkICAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1lbXB0eS5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XHJcbiAgICBjb2xvcjogZ3JheSAgIWltcG9ydGFudDtcclxufSJdfQ== */\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator } from '../../../theme/utils/app-validators';\r\nimport { AuthSandbox } from '../../../../core/auth/auth.sandbox';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  // reactive form\r\n  public loginForm: FormGroup;\r\n  // validation\r\n  public submitted = false;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public router: Router,\r\n    public snackBar: MatSnackBar,\r\n    public authSandbox: AuthSandbox\r\n  ) {}\r\n\r\n  // Initially initialize the reactive form\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      password: [\r\n        '',\r\n        Validators.compose([Validators.required, Validators.minLength(5)])\r\n      ]\r\n    });\r\n  }\r\n  /** calls authSandbox  doLogin if the form is valid.\r\n   *\r\n   * Then calls resetAllFormFields to reset the form fields .\r\n   */\r\n  public onLoginFormSubmit(values: Object): void {\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      const params = this.loginForm.value;\r\n      params.type = 'normal';\r\n      this.authSandbox.doLogin(params);\r\n      this.submitted = false;\r\n    }\r\n  }\r\n\r\n  // reset the form fields\r\n  resetAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.reset();\r\n        control.clearValidators();\r\n        control.updateValueAndValidity();\r\n      } else if (control instanceof FormGroup) {\r\n        this.resetAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  // validate the form fields\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n  public regex: RegExp;\n  private specialKeys: any = ['Backspace', 'Tab', 'End', 'Home'];\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('keydown', ['$event'])\n  KeyDown(event: KeyboardEvent) {\n    this.regex = new RegExp(/^\\s*(?=.*[0-9])\\d*(?:\\.\\d{1,2})?\\s*$/);\n    const current: string = this.el.nativeElement.value;\n    const next: string = current.concat(event.key);\n    if (this.specialKeys.indexOf(event.key) !== -1) {\n      return;\n    }\n    if (next && !String(next).match(this.regex)) {\n      event.preventDefault();\n    }\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OnlyNumberDirective } from './only-number.directive';\n\n@NgModule({\n  declarations: [OnlyNumberDirective],\n  exports: [OnlyNumberDirective]\n})\nexport class NumberAcceptModule {}\n","import {FormGroup, FormControl} from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): { [key: string]: any } {\r\n    const emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        const password = group.controls[passwordKey];\r\n        const passwordConfirmation = group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true});\r\n        }\r\n    };\r\n}\r\n\r\n\r\n"],"sourceRoot":""}