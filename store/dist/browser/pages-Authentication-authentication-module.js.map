{"version":3,"sources":["webpack:///./src/core/auth/auth.service.ts","webpack:///./src/core/auth/effects/auth.effect.ts","webpack:///./src/core/auth/models/loginResponse.model.ts","webpack:///./src/default/pages/Authentication/Auth/auth.component.html","webpack:///./src/default/pages/Authentication/Auth/auth.component.scss","webpack:///./src/default/pages/Authentication/Auth/auth.component.ts","webpack:///./src/default/pages/Authentication/authentication.module.ts","webpack:///./src/default/pages/Authentication/forgot/forgot.component.html","webpack:///./src/default/pages/Authentication/forgot/forgot.component.scss","webpack:///./src/default/pages/Authentication/forgot/forgot.component.ts","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.html","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.scss","webpack:///./src/default/pages/Authentication/sign-in/sign-in.component.ts","webpack:///./src/default/shared/validation-directives/only-number.directive.ts","webpack:///./src/default/shared/validation-directives/onlyNumber.module.ts","webpack:///./src/default/theme/utils/app-validators.ts"],"names":[],"mappings":"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","file":"pages-Authentication-authentication-module.js","sourcesContent":["/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Api} from '../providers/api/api';\r\n\r\n\r\n@Injectable()\r\nexport class AuthApiService extends Api {\r\n\r\n\r\n    private base: string = this.getBaseUrl();\r\n\r\n    /* call login api*/\r\n    public doLogin(params: any): Observable<any> {\r\n        // if ((params.emailId) && (params.password)) {\r\n            return this.http.post(this.base + 'customer/login', params);\r\n        // }\r\n        // else {\r\n        //     return this.http.post(this.base + 'customer/Oauth-login', params);\r\n        // }\r\n    }\r\n    public doOauth(params) {\r\n        const auth = params.url;\r\n        delete params.url;\r\n        return this.http.post('https://' + auth, params);\r\n    }\r\n    /* call register api*/\r\n    public doRegister(params: any): Observable<any> {\r\n        return this.http.post(this.base + 'customer/register', params);\r\n    }\r\n\r\n    /* call recover account api*/\r\n    public doRecover(params: any): Observable<any> {\r\n        return this.http.post(this.base + 'customer/forgot-password', params);\r\n    }\r\n\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport * as store from '../../state.interface';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport { LoginResponseModel } from '../models/loginResponse.model';\r\nimport { AuthApiService } from '../auth.service';\r\nimport * as actions from './../action/auth.action';\r\nimport { Router } from '@angular/router';\r\nimport { OauthModel } from '../models/oauth.model';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    public router: Router,\r\n    private authApi: AuthApiService,\r\n    private appState$: Store<store.AppState>\r\n  ) {}\r\n\r\n  @Effect()\r\n  login$: Observable<Action> = this.actions$.pipe(\r\n    ofType(actions.ActionTypes.DO_LOGIN),\r\n    map((action: actions.DoLogin) => action.payload),\r\n    switchMap(state => {\r\n      return this.authApi.doLogin(state).pipe(\r\n        tap(response => {\r\n              this.router.navigate(['/']);\r\n        }),\r\n        map(\r\n          loggedin =>\r\n            new actions.DoLoginSuccess(new LoginResponseModel(loggedin))\r\n        ),\r\n        catchError(error =>\r\n          of(new actions.DoLoginFail(new LoginResponseModel(error)))\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  register$: Observable<Action> = this.actions$.pipe(\r\n    ofType(actions.ActionTypes.DO_REGISTER),\r\n    map((action: actions.DoRegister) => action.payload),\r\n    switchMap(state => {\r\n      if (state.phoneNumber === '') {\r\n        delete state.phoneNumber;\r\n      }\r\n      return this.authApi.doRegister(state).pipe(\r\n        map(register => new actions.DoRegisterSuccess(register)),\r\n        catchError(error => of(new actions.DoRegisterFail(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  recover$: Observable<Action> = this.actions$.pipe(\r\n    ofType(actions.ActionTypes.DO_RECOVER),\r\n    map((action: actions.RecoverAccount) => action.payload),\r\n    switchMap(state => {\r\n      return this.authApi.doRecover(state).pipe(\r\n        map(register => new actions.RecoverAccountSuccess(register)),\r\n        catchError(error => of(new actions.RecoverAccountFail(error)))\r\n      );\r\n    })\r\n  );\r\n  @Effect()\r\n  oauthLogin$: Observable<Action> = this.actions$.pipe(\r\n    ofType(actions.ActionTypes.DO_OAUTH_LOGIN),\r\n    map((action: actions.DoOauthLogin) => action.payload),\r\n    switchMap(state => {\r\n      return this.authApi.doOauth(state).pipe(\r\n        tap(val => {\r\n          this.router.navigate(['/']);\r\n        }),\r\n        map(log => new actions.DoLoginSuccess(new LoginResponseModel(log))),\r\n        catchError(error => of(new actions.DoLoginFail(error)))\r\n      );\r\n    })\r\n  );\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nexport class LoginResponseModel {\r\n  public user_token: any;\r\n\r\n  constructor(loginResponse: any) {\r\n    this.user_token = loginResponse.data || '';\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"loginPage\\\">\\r\\n    <div class=\\\"containerWrap\\\">\\r\\n        <div class=\\\"formSignInUp\\\" fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"47\\\" class=\\\"p-2\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n            <div class=\\\"signUpForm\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"47\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n                <h4><span>or continue with</span></h4>\\r\\n\\r\\n                <div class=\\\"text-center mt-3 formIcons\\\">\\r\\n                    <button class=\\\"loginBtn loginBtn--facebook\\\" (click)=\\\"login()\\\">\\r\\n                        <mat-icon>facebook</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-icon><img src=\\\"../../../../assets/images/google.png\\\" alt=\\\"\\\"></mat-icon>\\r\\n                </div>\\r\\n                <!-- <h2 class=\\\"text-muted text-center\\\">Sign up</h2> -->\\r\\n                <h6>Become a Beaver Member</h6>\\r\\n                <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterFormSubmit(registerForm.value)\\\" novalidate>\\r\\n                    <mat-form-field class=\\\"w-100 mt-2\\\"\\r\\n                        [ngClass]=\\\"{validationcolor:registerForm.controls.name.hasError('required') && submitted }\\\">\\r\\n                        <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\" required>\\r\\n                        <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('required') && submitted\\\">Full Name is\\r\\n                            required</mat-error>\\r\\n                        <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('minlength') && submitted\\\">Full Name\\r\\n                            isn't long enough, minimum of 3 characters</mat-error>\\r\\n                        <mat-error *ngIf=\\\"registerForm.controls['name'].hasError('pattern') && submitted\\\">Name must be\\r\\n                            string</mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"formField fieldWithIcon emailIcon\\\">\\r\\n                        <mat-form-field class=\\\"w-100 mt-1\\\"\\r\\n                            [ngClass]=\\\"{validationcolor:registerForm.controls.email.hasError('required') && submitted }\\\">\\r\\n                            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                            <mat-error *ngIf=\\\"registerForm.controls['email'].hasError('required') && submitted\\\">Email is\\r\\n                                required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"registerForm.controls['email'].hasError('invalidEmail') && submitted\\\">\\r\\n                                Invalid email address</mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"formField fieldWithIcon lockIcon\\\">\\r\\n                        <mat-form-field class=\\\"w-100 mt-1\\\"\\r\\n                            [ngClass]=\\\"{validationcolor:registerForm.controls.password.hasError('required') && submitted }\\\">\\r\\n                            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\"\\r\\n                                minlength=\\\"5\\\" required>\\r\\n                            <mat-error *ngIf=\\\"registerForm.controls['password'].hasError('required') && submitted\\\">\\r\\n                                Password is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"registerForm.controls['password'].hasError('minlength') && submitted\\\">\\r\\n                                Password isn't long enough, minimum of 5 characters</mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <mat-form-field class=\\\"w-100 mt-1\\\"\\r\\n                        [ngClass]=\\\"{validationcolor:registerForm.controls.confirmPassword.hasError('required') && submitted }\\\">\\r\\n                        <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\"\\r\\n                            required>\\r\\n                        <mat-error *ngIf=\\\"registerForm.controls['confirmPassword'].hasError('required') && submitted\\\">\\r\\n                            Confirm Password is required</mat-error>\\r\\n                        <mat-error\\r\\n                            *ngIf=\\\"registerForm.controls['confirmPassword'].hasError('mismatchedPasswords') && submitted\\\">\\r\\n                            Passwords do not match</mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"text-center mt-2\\\">\\r\\n                        <mat-checkbox class=\\\"example-margin\\\">Remember me!</mat-checkbox>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"mt-2\\\">\\r\\n                        <h3>By continueing. I agree to the terms of use & pivacy polices</h3>\\r\\n                    </div>\\r\\n                    <!-- <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                        <input matInput type=\\\"text\\\" maxlength=15 appOnlyNumber placeholder=\\\"Phone Number\\\" formControlName=\\\"phoneNumber\\\">\\r\\n\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n                    <div class=\\\"text-center mt-2\\\">\\r\\n                        <button type=\\\"submit\\\" mat-button color=\\\"primary\\\" class=\\\"signUpBtn actionBtn\\\">\\r\\n                            <!-- <mat-icon>person_add</mat-icon> -->\\r\\n                            Sign up\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\r\\n                        <h5 class=\\\"text-center text-red auth forgot w-100\\\">\\r\\n                            Already have an account? </h5>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-1\\\">\\r\\n                        <h5 class=\\\"text-center text-red auth forgot w-100\\\">\\r\\n                            Become a seller</h5>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\nh4 {\\n  width: 100%;\\n  text-align: center;\\n  border-bottom: 1px solid #000;\\n  line-height: 0.1em;\\n  margin: 10px 0 20px; }\\n\\nh4 span {\\n  background: #fff;\\n  padding: 0 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL0F1dGgvRDpcXG9kelxcd29ya2luZ1xcbWFya2V0cGxhY2VcXHN0b3JlL3NyY1xcZGVmYXVsdFxccGFnZXNcXEF1dGhlbnRpY2F0aW9uXFxBdXRoXFxhdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixpQkFBZ0IsRUFDakI7O0FBQ0Q7RUFDRSxnQkFBZSxFQUNoQjs7QUFDRDtFQUdJLGlDQUFnQztFQUNoQyxzQkFBcUIsRUFDdEI7O0FBTEg7RUFPSSxzQkFBcUIsRUFDdEI7O0FBUkg7RUFVSSx1QkFBc0IsRUFDdkI7O0FBR0g7RUFDRSxrQ0FBaUM7RUFDakMsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0UsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0Usd0JBQXVCLEVBQ3hCOztBQUVEO0VBQ0UsWUFBVztFQUNYLG1CQUFrQjtFQUNsQiw4QkFBNkI7RUFDN0IsbUJBQWtCO0VBQ2xCLG9CQUFtQixFQUNwQjs7QUFFRDtFQUNHLGlCQUFlO0VBQ2YsZ0JBQWMsRUFDaEIiLCJmaWxlIjoic3JjL2RlZmF1bHQvcGFnZXMvQXV0aGVudGljYXRpb24vQXV0aC9hdXRoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBwYWRkaW5nOiA3cHggMTRweDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcbi5mb3Jnb3R7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi52YWxpZGF0aW9uY29sb3J7XHJcblxyXG4gIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1lbXB0eS5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XHJcbiAgICBjb2xvcjogcmVkICAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxufVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XHJcbiAgY29sb3I6IGdyYXkgICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmg0IHtcclxuICB3aWR0aDogMTAwJTsgXHJcbiAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsgXHJcbiAgbGluZS1oZWlnaHQ6IDAuMWVtO1xyXG4gIG1hcmdpbjogMTBweCAwIDIwcHg7IFxyXG59IFxyXG5cclxuaDQgc3BhbiB7IFxyXG4gICBiYWNrZ3JvdW5kOiNmZmY7IFxyXG4gICBwYWRkaW5nOjAgMTBweDsgXHJcbn0iXX0= */\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator, matchingPasswords } from '../../../theme/utils/app-validators';\r\nimport { AuthSandbox } from '../../../../core/auth/auth.sandbox';\r\n\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n    // reactive form\r\n    public registerForm: FormGroup;\r\n    // validation\r\n    public submitted = false;\r\n\r\n    constructor(public formBuilder: FormBuilder,\r\n        public router: Router,\r\n        public snackBar: MatSnackBar,\r\n        public authSandbox: AuthSandbox) {\r\n    }\r\n\r\n    // Initially initialize reactive form\r\n    ngOnInit() {\r\n        this.fbLibrary();\r\n        const mobileValidationPattern = '^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$';\r\n        const nameValidationPattern = '[a-zA-Z \\'-,;.]*';\r\n        this.registerForm = this.formBuilder.group({\r\n            'name': ['', Validators.compose([Validators.required, Validators.pattern(nameValidationPattern), Validators.minLength(3)])],\r\n            'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(5)])],\r\n            'confirmPassword': ['', Validators.compose([Validators.required])],\r\n            // 'phoneNumber': ['', Validators.compose([Validators.required, Validators.pattern(mobileValidationPattern)])]\r\n        }, { validator: matchingPasswords('password', 'confirmPassword') });\r\n\r\n    }\r\n\r\n    public login() {\r\n\r\n        window['FB'].login((response) => {\r\n            console.log('login response', response);\r\n            if (response.authResponse) {\r\n\r\n                window['FB'].api('/me', {\r\n                    fields: 'last_name, first_name, email'\r\n                }, (userInfo) => {\r\n\r\n                    console.log(\"user information\");\r\n                    console.log(userInfo);\r\n                });\r\n\r\n            } else {\r\n                console.log('User login failed');\r\n            }\r\n        }, { scope: 'email' });\r\n    }\r\n\r\n    fbLibrary() {\r\n        (window as any).fbAsyncInit = function () {\r\n            window['FB'].init({\r\n                appId: '1815259135478978',\r\n                cookie: true,\r\n                xfbml: true,\r\n                version: 'v3.1'\r\n            });\r\n            window['FB'].AppEvents.logPageView();\r\n        };\r\n\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) { return; }\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    /** calls authSandbox doRegister if tthe from is valid.\r\n     Then calls resetAllFormFields for reset **/\r\n    public onRegisterFormSubmit(values: Object): void {\r\n        if (this.registerForm.valid) {\r\n            console.log(this.registerForm.value)\r\n            this.authSandbox.doRegister(this.registerForm.value)\r\n            this.submitted = false;\r\n            this.registerForm.reset();\r\n            // this.resetAllFormFields(this.registerForm);\r\n        } else {\r\n            this.submitted = true;\r\n        }\r\n    }\r\n\r\n    // reset the values\r\n    resetAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.reset();\r\n                control.clearValidators();\r\n                control.updateValueAndValidity();\r\n            } else if (control instanceof FormGroup) {\r\n                this.resetAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    // validate the reactive form\r\n    validateAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.markAsTouched({ onlySelf: true });\r\n            } else if (control instanceof FormGroup) {\r\n                this.validateAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\n\r\n// module\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {ComponentsModule} from '../../shared/components/index';\r\n// shared module\r\nimport {NumberAcceptModule} from './../../shared/validation-directives/onlyNumber.module';\r\n\r\n// effects\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {AuthEffects} from '../../../core/auth/effects/auth.effect';\r\n// component\r\nimport {SignInComponent} from './sign-in/sign-in.component';\r\nimport {AuthComponent} from './Auth/auth.component';\r\nimport {ForgotComponent} from './forgot/forgot.component';\r\n// service\r\nimport {AuthApiService} from '../../../core/auth/auth.service';\r\n// sandbox\r\nimport {AuthSandbox} from '../../../core/auth/auth.sandbox';\r\n// social sign in\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '', component: AuthComponent,\r\n        children: [\r\n            {path: '', component: SignInComponent, pathMatch: 'full'},\r\n            {path: 'sign-in', component: SignInComponent, pathMatch: 'full'},\r\n            {path: 'forgot', component: ForgotComponent, pathMatch: 'full'}\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        ComponentsModule,\r\n        EffectsModule.forFeature([AuthEffects]),\r\n        NumberAcceptModule\r\n    ],\r\n    declarations: [\r\n        SignInComponent,\r\n        ForgotComponent,\r\n        AuthComponent\r\n    ],\r\n    providers: [AuthApiService, AuthSandbox]\r\n})\r\nexport class AuthenticationModule {\r\n}\r\n","module.exports = \"<h2 class=\\\"text-muted text-center\\\">\\r\\n    Forgot Password</h2>\\r\\n<form [formGroup]=\\\"forgotForm\\\" novalidate>\\r\\n    <mat-form-field class=\\\"w-100 mt-2\\\" [ngClass]=\\\"{'validationcolor':\\r\\n    (forgotForm.controls.emailId.hasError('required') && submitted)}\\\">\\r\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"emailId\\\" required>\\r\\n        <mat-error *ngIf=\\\"forgotForm.controls['emailId'].hasError('required') && submitted\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"forgotForm.controls['emailId'].hasError('invalidEmail') && submitted\\\">Invalid email address</mat-error>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onForgotFormSubmit(forgotForm.value)\\\">\\r\\n            <mat-icon>exit_to_app</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\r\\n        <div class=\\\"divider w-100\\\"></div>\\r\\n        <h3 class=\\\"text-muted auth forgot\\\" routerLink=\\\"/auth/sign-in\\\">or Go back to Login</h3>\\r\\n        <div class=\\\"divider w-100\\\"></div>\\r\\n    </div>\\r\\n</form>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL2ZvcmdvdC9EOlxcb2R6XFx3b3JraW5nXFxtYXJrZXRwbGFjZVxcc3RvcmUvc3JjXFxkZWZhdWx0XFxwYWdlc1xcQXV0aGVudGljYXRpb25cXGZvcmdvdFxcZm9yZ290LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixpQkFBZ0IsRUFDakI7O0FBQ0Q7RUFDRSxnQkFBZSxFQUNoQjs7QUFDRDtFQUdJLGlDQUFnQztFQUNoQyxzQkFBcUIsRUFDdEI7O0FBTEg7RUFPSSxzQkFBcUIsRUFDdEI7O0FBUkg7RUFVSSx1QkFBc0IsRUFDdkI7O0FBR0g7RUFDRSxrQ0FBaUM7RUFDakMsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0UsdUJBQXNCLEVBQ3ZCOztBQUNEO0VBQ0Usd0JBQXVCLEVBQ3hCIiwiZmlsZSI6InNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL2ZvcmdvdC9mb3Jnb3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aHtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIHBhZGRpbmc6IDdweCAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuLmZvcmdvdHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLnZhbGlkYXRpb25jb2xvcntcclxuXHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcclxuICAgIGNvbG9yOiByZWQgICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxufVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSwgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZW1wdHkubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gIGNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcclxuICBjb2xvcjogZ3JheSAgIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator } from '../../../theme/utils/app-validators';\r\nimport {AuthSandbox} from '../../../../core/auth/auth.sandbox';\r\n\r\n\r\n@Component({\r\n    selector: 'app-forgot',\r\n    templateUrl: './forgot.component.html',\r\n    styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n    // reactive form\r\n    public forgotForm: FormGroup;\r\n    // validation\r\n    public submitted = false;\r\n\r\n    constructor(public formBuilder: FormBuilder,\r\n                public router: Router,\r\n                public snackBar: MatSnackBar,\r\n                public authSandbox: AuthSandbox) { }\r\n\r\n    // Initially initialize reactive form\r\n    ngOnInit() {\r\n        this.forgotForm = this.formBuilder.group({\r\n            'emailId': ['', Validators.compose([Validators.required, emailValidator])]\r\n        });\r\n    }\r\n/**  calls authSandbox doRecover with values from forgotForm.\r\n * Then calls resetAllFormFields to reset all fields.\r\n *\r\n * */\r\n    public onForgotFormSubmit(values: Object): void {\r\n        if (this.forgotForm.valid) {\r\n            this.authSandbox.doRecover(this.forgotForm.value);\r\n            this.submitted = false;\r\n            this.forgotForm.reset();\r\n            this.forgotForm.clearValidators();\r\n        } else {\r\n            this.submitted = true;\r\n        }\r\n    }\r\n    // reset reactive form fields\r\n    resetAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.reset();\r\n                control.clearValidators();\r\n                control.updateValueAndValidity();\r\n            } else if (control instanceof FormGroup) {\r\n                this.resetAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n    // validate reactive form fields\r\n    validateAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.markAsTouched({onlySelf: true});\r\n            } else if (control instanceof FormGroup) {\r\n                this.validateAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"<div fxFlex=\\\"100\\\" class=\\\"signInForm\\\">\\r\\n    <!-- <span style=\\\"padding: 2px; font-weight: 500;\\\">or continue with</span> -->\\r\\n\\r\\n    <h4><span>or continue with</span></h4>\\r\\n    <div class=\\\"text-center mt-3 formIcons\\\">\\r\\n        <mat-icon>facebook</mat-icon>\\r\\n        <mat-icon><img src=\\\"../../../../assets/images/google.png\\\" alt=\\\"\\\"></mat-icon> \\r\\n    </div>\\r\\n\\r\\n    <h2 class=\\\"signInTitle\\\">Sign In</h2>\\r\\n    <span>Become a Beaver Member and recieve exclusive offers customized for you</span>\\r\\n    <form [formGroup]=\\\"loginForm\\\" novalidate class=\\\"mt-2\\\">\\r\\n        <div class=\\\"formField fieldWithIcon emailIcon\\\">\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{'validationcolor':\\r\\n        (loginForm.controls.email.hasError('required') && submitted)}\\\">\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('required') && submitted\\\">\\r\\n                    Email is required\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('invalidEmail') && submitted\\\">\\r\\n                    Invalid email address\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"formField fieldWithIcon emailIcon\\\">\\r\\n        <mat-form-field class=\\\"w-100 mt-1\\\" [ngClass]=\\\"{'validationcolor':\\r\\n    (loginForm.controls.password.hasError('required') && submitted)}\\\">\\r\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\">\\r\\n            <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('required') && submitted\\\">\\r\\n                Password is required\\r\\n            </mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('minlength') && submitted\\\">\\r\\n                Password isn't long enough, minimum of 5 characters\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n            <mat-checkbox class=\\\"example-margin\\\">Remember me!</mat-checkbox>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"mt-2\\\">\\r\\n            <h3>By continueing. I agree to the terms of use & pivacy polices</h3>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n            <!-- <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                <i *ngIf=\\\"(authSandbox.loginLoading$ | async)\\\" class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n\\r\\n                <mat-icon *ngIf=\\\"!(authSandbox.loginLoading$ | async)\\\">exit_to_app</mat-icon>\\r\\n            </button> -->\\r\\n            <button mat-button color=\\\"primary\\\" class=\\\"signInBtn actionBtn\\\" (click)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                <i *ngIf=\\\"(authSandbox.loginLoading$ | async)\\\" class=\\\"fa fa-spinner fa-spin\\\"\\r\\n                    style=\\\"font-size:24px\\\"></i>Sign In</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-button color=\\\"primary\\\" class=\\\"createAccountBtn actionBtn\\\">Create A New Accout</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\r\\n            <h5 class=\\\"text-center text-red auth w-100\\\">\\r\\n                Become a seller</h5>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-2\\\">\\r\\n            <h5 class=\\\"text-muted auth forgot\\\" routerLink=\\\"/auth/forgot\\\">\\r\\n                Forgot Password?</h5>\\r\\n        </div> -->\\r\\n\\r\\n    </form>\\r\\n</div>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500; }\\n\\n.forgot {\\n  cursor: pointer;\\n  margin-left: 40%; }\\n\\n.validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n.boder-right {\\n  border-right: 1px solid black; }\\n\\nh4 {\\n  width: 100%;\\n  text-align: center;\\n  border-bottom: 1px solid #000;\\n  line-height: 0.1em;\\n  margin: 10px 0 20px; }\\n\\nh4 span {\\n  background: #ffffff;\\n  padding: 0 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9kZWZhdWx0L3BhZ2VzL0F1dGhlbnRpY2F0aW9uL3NpZ24taW4vRDpcXG9kelxcd29ya2luZ1xcbWFya2V0cGxhY2VcXHN0b3JlL3NyY1xcZGVmYXVsdFxccGFnZXNcXEF1dGhlbnRpY2F0aW9uXFxzaWduLWluXFxzaWduLWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixpQkFBZ0IsRUFDbkI7O0FBQ0Q7RUFDSSxnQkFBZTtFQUNmLGlCQUFnQixFQUNuQjs7QUFDRDtFQUdRLGlDQUFnQztFQUNoQyxzQkFBcUIsRUFDeEI7O0FBTEw7RUFPUSxzQkFBcUIsRUFDeEI7O0FBUkw7RUFVUSx1QkFBc0IsRUFDekI7O0FBRUw7RUFDSSxrQ0FBaUM7RUFDakMsdUJBQXNCLEVBQ3pCOztBQUNEO0VBQ0ksdUJBQXNCLEVBQ3pCOztBQUNEO0VBQ0ksd0JBQXVCLEVBQzFCOztBQUVEO0VBQ0ksOEJBQTZCLEVBQ2hDOztBQUVEO0VBQ0ksWUFBVztFQUNYLG1CQUFrQjtFQUNsQiw4QkFBNkI7RUFDN0IsbUJBQWtCO0VBQ2xCLG9CQUFtQixFQUNyQjs7QUFFRDtFQUNJLG9CQUFtQjtFQUNuQixnQkFBYyxFQUNqQiIsImZpbGUiOiJzcmMvZGVmYXVsdC9wYWdlcy9BdXRoZW50aWNhdGlvbi9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBwYWRkaW5nOiA3cHggMTRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuLmZvcmdvdHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MCU7XHJcbn1cclxuLnZhbGlkYXRpb25jb2xvcntcclxuXHJcbiAgICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSwgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZW1wdHkubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XHJcbiAgICAgICAgY29sb3I6IHJlZCAgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG59XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZW1wdHkubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxufVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsID4gIC5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xyXG4gICAgY29sb3I6IGdyYXkgICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5ib2Rlci1yaWdodCB7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG5cclxuaDQge1xyXG4gICAgd2lkdGg6IDEwMCU7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMDAwOyBcclxuICAgIGxpbmUtaGVpZ2h0OiAwLjFlbTtcclxuICAgIG1hcmdpbjogMTBweCAwIDIwcHg7IFxyXG4gfSBcclxuIFxyXG4gaDQgc3BhbiB7IFxyXG4gICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7IFxyXG4gICAgIHBhZGRpbmc6MCAxMHB4OyBcclxuIH0iXX0= */\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator } from '../../../theme/utils/app-validators';\r\nimport { AuthSandbox } from '../../../../core/auth/auth.sandbox';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  // reactive form\r\n  public loginForm: FormGroup;\r\n  // validation\r\n  public submitted = false;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public router: Router,\r\n    public snackBar: MatSnackBar,\r\n    public authSandbox: AuthSandbox\r\n  ) {}\r\n\r\n  // Initially initialize the reactive form\r\n  ngOnInit() {\r\n     this.fbLibrary();\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      password: [\r\n        '',\r\n        Validators.compose([Validators.required, Validators.minLength(5)])\r\n      ]\r\n    });\r\n  }\r\n  /** calls authSandbox  doLogin if the form is valid.\r\n   *\r\n   * Then calls resetAllFormFields to reset the form fields .\r\n   */\r\n  public onLoginFormSubmit(values: Object): void {\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      const params = this.loginForm.value;\r\n      params.type = 'normal';\r\n      console.log(params,\"\")\r\n      // return false;\r\n      this.authSandbox.doLogin(params);\r\n      this.submitted = false;\r\n    }\r\n  }\r\n\r\n  fbLibrary() { \r\n\r\n    (window as any).fbAsyncInit = function() {\r\n      window['FB'].init({\r\n        appId      : '1815259135478978',\r\n        cookie     : true,\r\n        xfbml      : true,\r\n        version    : 'v3.1'\r\n      });\r\n      window['FB'].AppEvents.logPageView();\r\n    };\r\n \r\n    (function(d, s, id){\r\n       var js, fjs = d.getElementsByTagName(s)[0];\r\n       if (d.getElementById(id)) {return;}\r\n       js = d.createElement(s); js.id = id;\r\n       js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n       fjs.parentNode.insertBefore(js, fjs);\r\n     }(document, 'script', 'facebook-jssdk'));\r\n \r\n}\r\n\r\n  public login() {\r\n \r\n    window['FB'].login((response) => {\r\n        console.log('login response',response);\r\n        if (response.authResponse) {\r\n \r\n          window['FB'].api('/me', {\r\n            fields: 'last_name, first_name, email'\r\n          }, (userInfo) => {\r\n \r\n            console.log(\"user information\");\r\n            console.log(userInfo);\r\n          });\r\n           \r\n        } else {\r\n          console.log('User login failed');\r\n        }\r\n    }, {scope: 'email'});\r\n}\r\n\r\n  // reset the form fields\r\n  resetAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.reset();\r\n        control.clearValidators();\r\n        control.updateValueAndValidity();\r\n      } else if (control instanceof FormGroup) {\r\n        this.resetAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  // validate the form fields\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appOnlyNumber]'\r\n})\r\nexport class OnlyNumberDirective {\r\n  public regex: RegExp;\r\n  private specialKeys: any = ['Backspace', 'Tab', 'End', 'Home'];\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  KeyDown(event: KeyboardEvent) {\r\n    this.regex = new RegExp(/^\\s*(?=.*[0-9])\\d*(?:\\.\\d{1,2})?\\s*$/);\r\n    const current: string = this.el.nativeElement.value;\r\n    const next: string = current.concat(event.key);\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OnlyNumberDirective } from './only-number.directive';\r\n\r\n@NgModule({\r\n  declarations: [OnlyNumberDirective],\r\n  exports: [OnlyNumberDirective]\r\n})\r\nexport class NumberAcceptModule {}\r\n","import {FormGroup, FormControl} from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): { [key: string]: any } {\r\n    const emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        const password = group.controls[passwordKey];\r\n        const passwordConfirmation = group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true});\r\n        }\r\n    };\r\n}\r\n\r\n\r\n"],"sourceRoot":""}