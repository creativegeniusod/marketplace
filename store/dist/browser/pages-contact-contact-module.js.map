{"version":3,"sources":["webpack:///./src/default/pages/contact/contact.component.html","webpack:///./src/default/pages/contact/contact.component.scss","webpack:///./src/default/pages/contact/contact.component.ts","webpack:///./src/default/pages/contact/contact.module.ts","webpack:///./src/default/shared/validation-directives/only-number.directive.ts","webpack:///./src/default/shared/validation-directives/onlyNumber.module.ts","webpack:///./src/default/theme/utils/app-validators.ts"],"names":[],"mappings":"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","file":"pages-contact-contact-module.js","sourcesContent":["module.exports = \"<mat-card fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-lg\\\">home</mat-icon>\\r\\n            <h3 class=\\\"primary-text py-1\\\">ADDRESS:</h3>\\r\\n            <span class=\\\"text-muted\\\">{{(listSandbox.settingDetail$ | async)?.storeAddress}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-lg\\\">call</mat-icon>\\r\\n            <h3 class=\\\"primary-text py-1\\\">PHONE:</h3>\\r\\n            <span class=\\\"text-muted\\\">{{(listSandbox.settingDetail$ | async)?.storeTelephone}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-lg\\\">mail_outline</mat-icon>\\r\\n            <h3 class=\\\"primary-text py-1\\\">E-MAIL:</h3>\\r\\n            <span class=\\\"text-muted\\\">{{(listSandbox.settingDetail$ | async)?.storeEmail}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"divider w-100 mt-2\\\"></div>\\r\\n    <h3 class=\\\"w-100 text-center py-2\\\">CONTACT US</h3>\\r\\n\\r\\n    <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"onContactFormSubmit(contactForm.value)\\\" fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\" ngClass.sm=\\\"mt-1\\\" ngClass.xs=\\\"mt-1\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\" [ngClass]=\\\"{'validationcolor':((contactForm.controls.name.errors?.required)&&(submitted))}\\\">\\r\\n                <input matInput (keyup)=\\\"onKeyPress($event, 'name')\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" required>\\r\\n                <mat-error *ngIf=\\\"contactForm.controls['name'].errors?.required && submitted\\\">Name is required</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\" ngClass.sm=\\\"mt-1\\\" ngClass.xs=\\\"mt-1\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\" [ngClass]=\\\"{'validationcolor':((contactForm.controls.email.errors?.required)&&(submitted))}\\\">\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"contactForm.controls['email'].errors?.required && submitted\\\">Email is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"contactForm.controls['email'].hasError('invalidEmail') && submitted\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\" ngClass.sm=\\\"mt-1\\\" ngClass.xs=\\\"mt-1\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\" [ngClass]=\\\"{'validationcolor':((contactForm.controls.phone.errors?.required)&&(submitted))}\\\">\\r\\n                <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" maxlength=\\\"15\\\" appOnlyNumber required>\\r\\n                <mat-error *ngIf=\\\"contactForm.controls['phone'].errors?.required && submitted\\\">Phone number is required</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-1 mt-1\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\" [ngClass]=\\\"{'validationcolor':((contactForm.controls.message.errors?.required)&&(submitted))}\\\">\\r\\n                <input matInput (keyup)=\\\"onKeyPress($event, 'message')\\\" placeholder=\\\"Message\\\" formControlName=\\\"message\\\" required>\\r\\n                <mat-error *ngIf=\\\"contactForm.controls['message'].errors?.required && submitted\\\">Message is required</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"w-100 py-2 text-center\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</mat-card>\"","module.exports = \".validationcolor ::ng-deep .mat-form-field-underline, .validationcolor ::ng-deep .mat-form-field-ripple {\\n  background-color: red !important;\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: red !important; }\\n\\n.validationcolor ::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: red  !important; }\\n\\n::ng-deep .mat-form-field-underline, ::ng-deep .mat-form-field-ripple {\\n  background-color: gray !important;\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-empty.mat-form-field-label {\\n  color: gray !important; }\\n\\n::ng-deep .mat-form-field-label > .mat-form-field-required-marker {\\n  color: gray  !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvbWFya2V0cGxhY2Uvc3RvcmUvc3JjL2RlZmF1bHQvcGFnZXMvY29udGFjdC9jb250YWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR0ksaUNBQWdDO0VBQ2hDLHNCQUFxQixFQUN0Qjs7QUFMSDtFQU9JLHNCQUFxQixFQUN0Qjs7QUFSSDtFQVVJLHVCQUFzQixFQUN2Qjs7QUFFSDtFQUNFLGtDQUFpQztFQUNqQyx1QkFBc0IsRUFDdkI7O0FBQ0Q7RUFDRSx1QkFBc0IsRUFDdkI7O0FBQ0Q7RUFDRSx3QkFBdUIsRUFDeEIiLCJmaWxlIjoic3JjL2RlZmF1bHQvcGFnZXMvY29udGFjdC9jb250YWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZhbGlkYXRpb25jb2xvcntcclxuXHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+ICAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcclxuICAgIGNvbG9yOiByZWQgICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheSAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1lbXB0eS5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxufVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsID4gIC5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xyXG4gIGNvbG9yOiBncmF5ICAhaW1wb3J0YW50O1xyXG59Il19 */\"","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { emailValidator } from '../../theme/utils/app-validators';\r\nimport {ListsSandbox} from '../../../core/lists/lists.sandbox';\r\n\r\n@Component({\r\n    selector: 'app-contact',\r\n    templateUrl: './contact.component.html',\r\n    styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n    // reactive form\r\n    public contactForm: FormGroup;\r\n    // validation\r\n    public submitted = false;\r\n    constructor(public formBuilder: FormBuilder,\r\n                public listSandbox: ListsSandbox) { }\r\n\r\n    // Initially calls initContactForm\r\n    ngOnInit() {\r\n        this.initContactForm();\r\n    }\r\n    // create form group for the contact form\r\n    initContactForm() {\r\n        this.contactForm = this.formBuilder.group({\r\n            name: ['', Validators.compose([Validators.required, Validators.nullValidator])],\r\n            email: ['', Validators.compose([Validators.required, emailValidator])],\r\n            phone: ['', Validators.required],\r\n            message: ['', Validators.required]\r\n        });\r\n    }\r\n    // call contact us function from sand box if the contact form is valid\r\n    public onContactFormSubmit(values: Object): void {\r\n        this.submitted = true;\r\n        if (this.contactForm.valid) {\r\n            this.submitted = false;\r\n            this.listSandbox.contactUs(this.contactForm.value);\r\n        }\r\n    }\r\n    onKeyPress(e, field) {\r\n        const val = this.contactForm.controls[field].value;\r\n        const string = val.replace(/  +/g, ' ');\r\n        this.contactForm.controls[field].setValue(string);\r\n    }\r\n\r\n}\r\n","/*\r\n * spurtcommerce\r\n * http://www.spurtcommerce.com\r\n *\r\n * Copyright (c) 2022 piccosoft ltd\r\n * Author piccosoft ltd <support@piccosoft.com>\r\n * Licensed under the MIT license.\r\n */\r\n// module\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {ComponentsModule} from '../../shared/components/index';\r\nimport {ContactComponent} from './contact.component';\r\nimport {NumberAcceptModule} from '../../shared/validation-directives/onlyNumber.module';\r\n\r\n\r\nexport const routes = [\r\n    {path: '', component: ContactComponent, pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        ComponentsModule,\r\n        NumberAcceptModule\r\n    ],\r\n    declarations: [\r\n        ContactComponent\r\n    ]\r\n})\r\nexport class ContactModule {\r\n}\r\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n  public regex: RegExp;\n  private specialKeys: any = ['Backspace', 'Tab', 'End', 'Home'];\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('keydown', ['$event'])\n  KeyDown(event: KeyboardEvent) {\n    this.regex = new RegExp(/^\\s*(?=.*[0-9])\\d*(?:\\.\\d{1,2})?\\s*$/);\n    const current: string = this.el.nativeElement.value;\n    const next: string = current.concat(event.key);\n    if (this.specialKeys.indexOf(event.key) !== -1) {\n      return;\n    }\n    if (next && !String(next).match(this.regex)) {\n      event.preventDefault();\n    }\n  }\n}\n","/*\n * spurtcommerce\n * http://www.spurtcommerce.com\n *\n * Copyright (c) 2022 piccosoft ltd\n * Author piccosoft ltd <support@piccosoft.com>\n * Licensed under the MIT license.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OnlyNumberDirective } from './only-number.directive';\n\n@NgModule({\n  declarations: [OnlyNumberDirective],\n  exports: [OnlyNumberDirective]\n})\nexport class NumberAcceptModule {}\n","import {FormGroup, FormControl} from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): { [key: string]: any } {\r\n    const emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        const password = group.controls[passwordKey];\r\n        const passwordConfirmation = group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true});\r\n        }\r\n    };\r\n}\r\n\r\n\r\n"],"sourceRoot":""}